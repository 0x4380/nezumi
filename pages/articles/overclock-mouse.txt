====== разгон мышей\\ или скоростной web-серфинг для экстремалов ======
<sub>{{overclock-mouse.odt|Original file}}</sub>

крис касперски ака nezumi, no-email

**так… память, процессор, видео, диски, операционную и файловую систему мы уже разогнали. неразогнанной осталась только мышь. мышь еще никто не разгонял. а мы вот возьмем и разгоним! да так, что производительность всей системы возрастет в несколько раз!**

{{INLINETOC}}
===== введение или сага о мышах =====

Какое место в компьютере самое узкое? Кто-то скажет процессор, кто-то — оперативная память, кто-то — жесткий диск. Но все они будут не правы. Самое узкое место в системе – это мышь. Мыши существа такие. Очень вредные существа скажу я вам. Форменные вредители. От них всего можно ждать. Работа с мышам ведет к тяжелым травмам, а иногда и к инвалидности. Какие там шутки?! Когда кисть лежит на грызуне она малоподвижна и напряжена, а когда мышь движется, ладонь постоянно оказывается вывернутой, то в одной, то в другой противоестественной позе. Мышь наносит двойной удар — растяжение и отек. В суставе появляется боль, ломота или покалывание, переходящая в эпикондилит локтевого сустава. А однообразные движения мыши образуют устойчивые очаги возбуждения центральной нервной системы с торможением других ее участков, что приводит к повышенной утомляемости и снижению работоспособности, а, следовательно — падению производительности. В совокупности все это называется синдромом "укуса мыши" и считается серьезным профессиональным заболеванием. Поиск по ключевым словам "Repetitive Strain Injury" дает много интересного, заставляя задуматься над мышью всерьез. Что важнее — мышь или здоровье?

{{overclock-mouse_Image_0.jpg}}

**Рисунок 1 ни одна мышь не продет!**

Коварство мыши не знает пределов. Мышь — удобна для новичков, но непригодна для профессионалов. Почему? А вы посмотрите сколько времени тратится на повседневные операции. Куда уходит машинное время? Все мегагерцы съедает мышь. Нажать на <F2> (сохранение текста во всех нормальных редакторах) на два порядка (!) быстрее, чем: а) снять руку с клавиатуры и перенести ее на мышь; б) найти куда запропастился этот долбанный курсор; в) подвести курсор к изображению дискеты (очень оригинальное изображение, да?), г) совершись "посадку", описав над ней пару кругов; д) щелкнуть по кнопке; е) вернуть руку обратно на клавиатуру. Работа с мышью — это постоянное метание рук, это переключение фокуса внимания (то мы смотрим на набираемый текст, то на курсор), плюс лишняя зрительная утомляемость. Прошлое поклонение программистов и операторов легко набирало текст вслепую, не глядя ни на клавиатуру, ни на монитор. А вот с мышью этот фокус уже не пройдет! Все операции требуют тщательного "прицеливания" и отнимают уйму времени. Допустим, мы хотим распечатать документ в режиме быстрой печати. Мы знаем, где находится данная опция в настройках принтера, но чтобы до нее добраться, приходится совершать множество никому не нужных телодвижений. Отсюда и убеждение, что компьютер— тупой.

Но это еще не все! Компьютер изначально создавался для автоматизации человеческой деятельности. То есть автоматического повторения однообразных, рутиных операций, но… это было давно. 90% своего времени рядовой пользователь форточек тратит именно на рутину. Чем удобна командная строка? Один раз запрограммировал последовательность операций, загнал ее в скрипт, дал ему имя из двух-трех букв и… все! Он к твоим услугам. Вместо того, чтобы битый час объяснять пользователю по телефону какую иконку ему нажать, а какую лучше не трогать — посылаешь командный файл, который все делает сам и пьешь пиво.

Мышь удобна только при работе с графикой, да и то… хорошо продуманный графический редактор (какие встречались на древних 8-битных машинах) неплохо управляется и клавиатурой. Конечно, это требует определенных навыков и подготовки, зато потом скорость работы возрастает в несколько раз. Ну чем вам не разгон? Если мы выполнили нашу задачу за меньшее время, значит мы разогнались. А чтобы разогнаться, необходимо полностью (или хотя бы частично) отказаться от мыши и перейти на клавиатуру. Это не только повысит производительность (вы сможете сделать намного больше за тоже самое время), но и уменьшит утомляемость. В общем, все будет хорошо, но только не сразу. Поначалу без мыши будут очень непрерывно, можно даже сказать противоестественно, но потом это чувство незаметно пройдет и останется только всепоглощающая нирвана безграничного удовольствия от общения с машиной.

Проблема в том, что некоторые программы не рассчитаны на работу с клавиатурой. В принципе. На многие кнопки или поля ввода можно перейти только мышью. Клавиатуре они недоступны. Другие программы "оптимизированы" исключительно под мышь и поддержка клавиатуры — простая формальность. Медленно, черезжопно и неудобно. Вот и приходится, подбирать специальные программы и устанавливать дополнительные утилиты, позволяющие перехитрить злодейку-мышь с одной только клавиатуры.

Некоторые могут спросить — а зачем это все? К чему напрягаться, когда мышь всегда под рукой. Вот она. Белая. Сексуальная. Эргономичная. Пока мой грызун не укусил меня, я тоже так думал, а потом в руке возникла такая боль, что работа превратилась в пытку. Работоспособность снизилась и пришлось выбирать —либо забыть о карьере писателя-и-программиста, либо сменить мышь на клавиатуру. Угадайте, что я выбрал?

===== >>> врезка системные сочетания клавиш =====

Windows поддерживает множество полезных сочетаний клавиш, но большинство пользователей знают только <Tab> и <Alt>+<Tab>, даже не подозревая, что еще существуют клавиши, позволяющие перемещаться по панели инструментов или переходить от одно фрейма к другому. Все они документированы и присутствуют в помощи, да только кто ту помощь читает? Памятуя о том, что повторение — мать учения, мы решили перечислить наиболее важные комбинации здесь.

|сочетание клавиш|назначение|
|Ctrl + C, Ctl+ Ins|копировать в буфер обмена|
|Ctrl + X, Sift + Del|вырезать в буфер обмена|
|Ctrl + V, Shift + Ins|вставить из буфера обмена|
|Ctrl + Z|отмена действия|
|Ctrl+A |выделить все|
|Alt+F4 |закрытие активного диалога/выход из программы|
|Ctrl+F4|закрытие активного документа в MDI-приложениях|
|Alt+Tab |переход от одного элемента к другому|
|Alt+Esc |переключение между элементами в порядке их открытия (не Z)|
|F6 |переключение между фреймами|
|Shift+F10 |вызов контекстного меню|
|Alt + Space|вызов системного меню|
|Ctrl + Esc |открытие меню Пуск|
|F10 |активизация меню текущей программы|
|Ctrl + Tab |переход вперед по вкладкам/панелям инструментов|
|Ctrl + Shift + Tab |переход назад по вкладкам/панелям инструментов|
|Tab|переход вперед по элементам|
|Enter|выполнение команды активного режима или кнопки|
|Space|установка или снятие флажка|
|Alt + стрелка вниз|раскрытие списка параметров|
|Ctrl + стрелка вправо|перемещение курсора в начало следующего слова|
|Ctrl + стрелка влево|перемещение курсора в начало предыдущего слова|
|Ctrl + стрелка вниз|перемещение курсора в начало следующего абзаца|
|Ctrl + стрелка вверх|перемещение курсора в начало предыдущего абзаца|
|Ctrl + Shift + любая стрелка|выделение абзаца.|
|Shift + любая стрелка|выделите текста/элементов (типа иконок)|

===== веб-сервинг: экстази, лис, опера, рысь и другие =====

Браузерные войны сейчас в самом разгаре. Какое средство серфигна выбрать? Ответ: выбирайте тот браузер, который в наибольшей степени отвечает вашим привычкам, задачам и потребностям. Если вы не видите разницы между FireFox и IE, то и не надо. Некоторые выбирают браузер из личных/интимных/идеологических или религиозных соображений (IE это "вражеский" продукт от M$, а FireFox – свободный Open Source проект). Некоторые — отказываются от IE, потому что он катастрофически небезопасен и, что самое главное, в нем не хватает необходимых им фич, например, Caret Browsing (перемещение курсором). Все браузеры в чем-то несовершенны и лично меня не удовлетворяет ни один.

==== экстази ====

Логотип IE, совпадающий с символом вещества "экстази" (более известным под абревиатурой LSD), наводит на глубокие размышления о наркотических свойствах InternetExplorer'а и причинах и его популярности. Вот обложка "Экстази" Ирвина Уэлша (Irvine Welsh). Очень похоже на IE, правда?

{{overclock-mouse_Image_1.jpg}}

**Рисунок 2 Internet Explorer или LSD?**

Это глючный и совершенно неправильный браузер, совершенно неприспособленный для работы с клавиатурой! Взять хотя бы переход по ссылкам, который осуществляется клавишами <Tab> (вперед) и <Sift>+<Tab> (назад). Когда на странице куча ссылок (а обычно так и бывает) запаришься, пока доберешься до своей. Хуже всего, что <Tab> переходит к первой ссылке //**документа**// (или последней выделенной ссылке), а не к первой ссылке в окне! Напрягает до чрезвычайности! Читаешь текст, прокручивая страничку вниз, видишь ссылку на которую хочешь перейти, жмешь <Tab> и… браузер переносит тебя куда-то далеко наверх. Но с этим еще можно как-то смириться (есть один хитрый трюк: жмешь <Ctrr>+<F>, вводишь текст ссылки и… вот она! муторно, но если мышь недоступна, то так все-таки лучше, чем tab'ом). IE не позволяет менять размеры жестко заданных шрифтов! Параметр "вид -> размер шрифта" на них никак не влияет (во всяком случае версия 6.0 ведет себя именно так), а странички с жестко заданными шрифтами встречаются все чаще и чаще. Даже среди солидных фирм. А что мне прикажите делать, если со своим зрением я их ни хрена не вижу? Можно, конечно залезть в настойки и сказать "не учитывать шрифты, указанные на web-страницах", но тогда вся разметка слетает к черту, что не есть хорошо. Еще IE не умеет выделять текст клавиатурой, вынуждая нас использовать мышь. В общем, это вредительский браузер, наносящий здоровью серьезный урон.

{{overclock-mouse_Image_2.png}}

**Рисунок 3 "самый крупный" шрифт браузера IE (см. 1); по ссылкам можно переходить tab'ом (если не надоест) нажимать, однако, отсчет ссылок начинается не с начала экрана, а с последней выделенной ссылки! то есть, если мы сейчас нажмем <tab>, то вместо того, чтобы выделить ссылку "1.1.Серая Книжка" IE подскочит куда-то вверх, чтобы выделать самую первую ссылку (см. 2). страшно неудобно, интуитивно непонятно и нелогично!**

==== лис ====

Теперь возьмем для примера Лиса — так в народе прозвали Fire Fox, поддерживающий клавиатуру в более или менее полном объеме. Ошибка с tab'ом с целях "совместимости" старательно сохранена, однако, значительно усовершенствован поиск. Вместо диалогового окна внизу появляется такая симпатичная строка для ввода ключевого слова. При чем тут поиск? А вот при чем. Открываем rastaman.tales.ru (раздел "сказки") и хотим перейти к новым сказкам (ссылка "1.4 Новые сказки"). Можно, конечно, это сделать и tab'ом, но мы пойдем кратчайшим путем. Давим <'> (поиск в линках) и вводим текст ссылки. Достаточно ввести "1.4" (без кавычек) как Лис тут же подсветит ее. Остается только нажать <Enter>! Еще короче будет ".4" или "но" (в смысле "новые"). Можно вводить любую уникальную подстроку или даже ее часть, заставляя Лиса циклически перемещаться по всем найденным вариантам, нажимая <Ctrl>+<G>. Красота!



{{overclock-mouse_Image_3.png}}

**Рисунок 4 Лис замечательно масштабирует шрифты, позволяя нам выбрать размер "под себе" (клавиши <Ctrl>+<+> и <Ctrl>+<->) , к тому же он лихо подсвечивает ссылки, позволяя перейти к нужной просто жмем <'> и набираем несколько первых букв ее имени**

А как выделить текст без мыши? Жмем <shift> и двигаем стрелками в нужном направлении! Выделение начинается в последнего выделенного/найденного места. Клавиша </> заставляет Лиса искать строки не в ссылках, а в обычном тексте. Просто вводим несколько первых слов выделяемого фрагмента, чтобы Лис "подсветил" их и продолжаем выделение shift'ом и курсором. Остается только скопировать в буфер. Только тут есть проблема. Коварный Лис начинает поиск еще до завершения набора строки, дергая экраном, если такая подстрока присутствует где-то вверху. А это нехорошо! Но тут есть хитрый трюк. Перед началом ввода пишем символ, отсутствующий в искомой подстроке, например "*" (звездочка), а после завершения ввода, удаляем его вот и все!

{{overclock-mouse_Image_4.png}}

**Рисунок 5 Лис может переместиться в любое место текста — жмем </>, вводим подстроку (<Ctrl>+<G> продолжить поиск вхождений) и дальше можем выделять фрагмент shift'ом со стрелочками**

Настоящие извращенцы, ой, то есть я хотел сказать ценители клавиатуры наверняка оценят режим "Caret Browsing", активируемый/деактивируемый клавишей <F7>. Лис выдаст грозное предупреждение и покажет на экране… мерцающий курсор, которым можно перемещаться по тексту, выделять shift'ом и переходить по ссылкам через enter. Удобно до чрезвычайности! Только вот траектория курсора… она какая-то нелогичная и недоработанная, особенно если на его пути встречается таблица (а таблицы сейчас встречаются практически везде). Но это только поначалу ругаешься, а потом привыкаешь.

{{overclock-mouse_Image_5.png}}

**Рисунок 6 в режиме Caret Browsing на экране появляется курсор, перемещаемый стрелками, которым можно выделять текст, переходить по ссылкам и т.д.**

Самое главное — Лис поддерживает расширения (extension) среди которых можно найти практически все. Вот например "NextPlease!" (http://nextplease.mozdev.org/). Эта хитрая примочка позволяет нам переходить клавишами к следующей/предыдущей странице поиска любого поисковика. Все очень просто! "NextPlease!" ищет ссылки со словами типа "next", ">>", "следующая" и т. д. Так же можно задавать и свои собственные композиции, облегчающие навигацию по вашим любимым сайтам. Допустим, на love.mail.ru логично повесить ссылку "мои письма" на hot-key, тогда она будет открываться одним-единственным нажатием. А <Alt>+цифра позволяет переходить к заданной странице поиска, чтобы не давить "next" несколько раз.

Остальные горячие клавиши перечислены в помощи. Их там много. Например, <Ctrl>+<+> увеличивает размер всех шрифтов в том числе и жестко заданных, а <Ctrl>+<-> уменьшает его. Возможности Лиса очень велики, а вместе с механизмом расширений — практически безграничны и кажется, что лучше него уже ничего быть не может.

==== опера ====

Самый быстрый браузер — это Опера. Причем быстрый не в смысле отрисовки страниц, а скорости серфинга. Поддержка клавиатуры чисто конкретна. То есть на высоте. Намного удобнее мыши. За тоже самое время можно просмотреть намного больше странц, чем в Экстази и Лисе, совершив меньше нажатий. <Ctrl>-<вниз> переходит к следующей ссылке, <Ctrl>-<вверх> – к предыдущей, причем выделение начинается с первой ссылке в //**экране**//, а не всей странице, что очень удобно и совершенно логично! <Shift>-<вниз/вверх> переходит к ссылке в следующей/предыдущей //**строке**//. То если на строке расположено несколько ссылок, то ctrl будет последовательно перебирать их одна за другой, а shift сразу перейдет к другой строке. <shift>-<влево/вправо> переходит к предыдущей/следующей ссылке в данной строке (таблице). Все вместе эти комбинации представляет замечательное средство навигации по сайту.

Поиск тоже продуман. Лисьи комбинации неудобны тем, что на русской раскладке символ <'> (поиск текста) никак не вводится. При работе с кириллическими страницами приходится постоянно переключаться между раскладками, что сильно напрягает. У Оперы этого недостатка нет и там используются комбинации </> и <Shift>-</>.

{{overclock-mouse_Image_6.png}}

**Рисунок 7 замечательный браузер Опера (со скином FauxSEmerald), масштабирующий шрифты и легко перемещающийся по ссылкам клавиатурой**

Клавиши <S>/<W> переходят к следующему/предыдущему заголовку (ссылке), позволяя быстро перемещаться по тексту. А вот с выделением проблемы. Выделять текст с клавиатуры нельзя. Ну… практически нельзя. Клавиши <D>/<E> выделяют следующий предыдущий объект. Объект — это и абзац, и ссылка, и таблица, и колонка таблицы и т. д. Выделенный текст можно через буфер объема перетащить в Word, где уже и оттяпать все лишнее. Напрягает, конечно, но… как говориться нет в мире совершенства.

{{overclock-mouse_Image_7.png}}

**Рисунок 8 Опера не умеет выделять текст клавишами, но поддерживает поэлементное выделение объектов через <E> и <D>**

Клавиатурой в Opere действительно очень быстро серфить. Намного быстрее чем мышью в IE или любом другом браузере. Стоит только привыкнуть и потом на мышь вообще смотреть не захочется.

==== рыся ====

Рысь это такой текстовой браузер, пришедший в Windows из мира UNIX (http://lynx.browser.org/). Для истинных поклонников консоли. И клавиатуры. Мыши в нем нет, но зато горячих клавиш — сколько угодно. Помимо возможности перемещения к следующей/предыдущей ссылке в документе (стрелки вниз/вверх) и текущей колонке ('<' и '>'), Рысь поддерживает нумерацию ссылок (<O>, Keypad mode  Links are numbered). Выбираем ссылку, к которой мы хотим перейти, вводим ее номер на цифровой клавиатуры, жмем <enter> и… вот она! Говорите, мышью быстрее? А вот это кому как! Ставлю свой хвост, что опытный клавишник с Рысем сделает любого почетного мышевода с IE, не говоря уже о том, что текстовой режим меньше утомляет глаза, в чем уже давно убедилось не одно поколение программистов.

{{overclock-mouse_Image_8.png}}

**Рисунок 9 текстовой браузер Рысь в режиме нумерации ссылок**

===== эмулируем мышь клавиатурой =====

Некоторые программы спроектированы так, что обойтись без клавиатуры с ними невозможно. Тот же Лис имеет большие проблемы с сохранением изображений (без мыши). Опера тоже их не сохраняет. А брать мышь в руки (после "укуса") уже не хочется. Или, допустим, она недоступна. Что тогда? Пуск  Настойки  Панель Управления  Специальные возможности. Ну такие. С коляской. Закладка "мышь", галочка "управление с клавиатуры" и кнопка "настройка". В "настройках" взводим галочку "Ctrl - ускорение" и настраиваем скорость перемещения по вкусу.

{{overclock-mouse_Image_9.png}}

**Рисунок 10 мышиный эмулятор в системном трее**

Теперь нажатие "NumLock" будет управлять рабой эмулятора мыши, а остальные клавиши цифровой клавиатуры — ее перемещением. Жмем Ctrl, перегоняем курсор стрелками в нужный район, а затем отпускам Ctrl и позиционируемся на месте. </> выбирает левую мышиную кнопку, а <-> — правую. Клавиша <5> – нажимаем ее. <0> – переводит выбранную кнопку в "удерживаемое" состояние, а <.> — отпускает ее без нажатия.

Запутано? Это только с первого взгляда. На самом деле такой способ управления очень удобен. Особенно для рисования в Paint'е. Без шуток. Мышью очень трудно выделить нужный пиксель или переместить фрагмент изображения по прямой.

===== поезд, едущий к разрушенному мосту macro-express =====

Эмулятор мыши всем хорош, только уж очень непроизводителен. К тому же остается проблема выполнения часто выполняемых операций. В штатную поставку Windows 3.x входила специальная утилита типа "клавиатурный проигрыватель", которая решала эту задачу, но в 9x и NT она внезапно исчезла. Вот и приходится обращаться за помощью к сторонним разработчикам. Существует множество разнообразных макро-машин, лучших их которых на мой субъективный взгляд является MacroExpress.

Что она может? Да практически все! Вот, например, давайте возьмем Осла и попробуем подружить его с клавиатурой. Коварство Осла в том, что кнопки на панели инструментов нажимаются только мышью или ее эмулятором. А вот мы сейчас возьмем и повесим их на горячие клавиши! Чтобы не запутаться, используем функциональные клавиши от <F1> и до конца. Запускам Осла, запускам MacroExpress. Говорим Macro  Add Macro. Нажимаем  "горячую клавишу", которую мы хотим назначить, например <F2> и давим кнопку "ScriptingEditor" и попадаем в визуальную среду программирования, которую освоит даже горилла.

Вводим макрос следующего содержания:

<code>
Activate Windows: "eMule" // сделать окно Осла активным
Get Mouse Position Screen: %N1%, %N2%	// считать координаты мыши относительно окна
					// и записать их в переменные N1 и N2
Mouse Move Windows 108, 41		// передвинуть мышь на кнопку "KAD"
Mouse Left Button Click		// щелкнуть мышью
Mouse Move Screen %N1%, %N2%		// вернуть мышь на место
</code>

**Листинг 1 текст макроса, "вешающего" кнопку "KAD" панели инструментов Осла на горячую клавишу**

Координаты кнопки относительно окна Осла определяются утилитой "MouseLocator", входящей в состав MacroExpress. После чего, в свойствах только что созданного макроса выбирается область действия (закладка "Scope" в Properties'ах). Выбираем "ProgramSpecific" (область действия ограничена программой) и указываем имя исполняемого файла Осла. Теперь горячая клавиша <F2> будет действовать только в пределах Осла, ничем не мешая работе остальных приложений.

{{overclock-mouse_Image_10.png}}

**Рисунок 11 визуальный редактор макро-машины MacroExpress**

Некоторые выбирают областью действия одно лишь окно приложения, что неправильно. Окна опознаются по их имени, то есть по заголовку. А теперь представьте, что произойдет, если зайти FAR'ом в папку eMule (FAR, как известно, высвечивает текущий путь в заголовке окна). Правильно! Произойдет нечто непредвиденное!

ОК, теперь при нажатии на <F2> Осел автоматически переходит к окну "KAD", освобождая нас от мыши и экономя время. Остальные кнопки назначаются аналогичным образом. Однако, здесь есть один нюанс. Вот, например, окно серверов. Нажимаем макросом на кнопку "servers" и дальше действуем уже tab'ом, которым приходится действовать десять раз! Это же умом поехать можно за это время! Лучше поручить эту работу макросу. Он же макрос! Вот и пускай старается! А мы отдохнем! Добавим строчку TextType:|||||||||, где каждый | обозначает символ табуляции и проверим как это работает.

Правильно подготовленный набор макросов не должен требовать никаких лишних нажатий! Автоматизируется все, что только можно автоматизировать! Работа с компьютером при этом ускоряется так, что высвобождается огромное количество времени и самое главное резко снижается усталость — не только на руки, но и на глаза.

А вот призывно замигал брандмауэр своей иконкой в углу экрана. Чтобы не гонять мышь, можно повесить его на глобальную горячую клавишу, видимую изо всех приложений (ну например, <Ctrl>+<Gray *>), чтобы всегда можно было посмотреть кто нас атакует. MacroExpress позволяет не только задавать координаты иконки (которые каждый раз всегда разные) и ее имя! Подробности можно найти в сопроводительной документации. Короче говоря, это очень полезная утилита, буквально срывающая крышу и преображающее сознание.

Особенно удобно рассылать макросы для выполнения действий на компьютере тех пользователей, которые ни во что не врубаются и которым ничего не возможно объяснить. Отделы технической поддержи просто ликуют. Только вот проблема. Даже две. Во-первых, тормозит MacroExpress не то, чтобы сильно, но страшно. И глючит. Особенно с русской раскладкой. В NT/2000/XP русские символы могут вводиться только на русской раскладке. Команда "TextType:привет, мир!", выполненная на английской раскладке (в углу горит "EN") выдает абракадабру. Во-вторых, для выполнения макро-скриптов все пользователи должны иметь установленный MacroExpress, который пока никто не взломал. То есть взломали, конечно (и взломать его проще простого, программа даже не упакована), но те генераторы серийных номеров, которые лежат в сети неработоспособны. MacroExpress выбрасывает диалоговое окно с невразумительным сообщением "*PIL*" и прекращает свою работу. Сурово.

Попробуем обратиться к конкурентам, коих просто до фига. Вот другая хорошая программа: Macro Scheduler Pro (http://www.mjtnet.com/), вместе с которой поставляется и компилятор скриптов, генерирующий удобный исполняемый файл, выполняемый на любой машине (только не надо применять его для создания троянских программ и прочих вирусов, хорошо?). Главный минус — отсутствие визуального редактора и вытекающая отсюда необходимость разбираться с языком самостоятельно. На самом деле это совсем не сложно! И набирать скрипты в FAR'e намного быстрее, чем конструировать их в визуальном редакторе. 

===== FAR =====

Файловый менеджер FAR – один из самых удобных. Он существенно упрощает навигацию по диску и выполнение повседневных операций. Для многих хакеров он стал настоящим IDE (интегрированной средой разработки), и ничего другом для счастья им уже и не надо. Разве что макросов. Вплоть до версии 1.70 бета 5, выпущенной 10 апреля 2003 года, FAR поддерживал довольно примитивный механизм записи макрокоманд, позволяющий выполнять однотипные действия одним нажатием и переопределять стандартные сочетания клавиш, используемых FAR'ом.

Чтобы начать запись достаточно нажать <Ctrl>+<.>. В верхнем левом углу тут же появляется красная буква "R", то есть Record (см. рис 12). Теперь все действия, совершаемые над FAR'ом, запоминаются в памяти. Повторное нажатие <Ctrl>+<.> останавливает запись и запрашивает горячую клавишу, которой будет вызывается макрос и сохраняет его в реестре.

{{overclock-mouse_Image_11.png}}

**Рисунок 12 буква "R", горящая в левом верхнем углу сигнализирует о записи макроса**

Казалось бы, что можно сделать такого крутого с помощью макросов? А вот что! Допустим, установили мы плагин "colorer" и начали читать новеллу "PressEnter". Только ни хрена она не читается, потому что по умолчанию colorer не подсвечивает диалоги, если натыкается на перенос строки. Как-то неаккуратно получается.

{{overclock-mouse_Image_12.png}}

**Рисунок 13 по умолчанию, текст, заключенный в кавычки, не подсвечивается, если в нем встречается перенос строки**

Посмотрим, что тут можно сделать. Нажимаем <F11> для вызова меню плагиов, находим там colorer, в нем выбираем "listtypes" и пытаемся подобрать наилучший тип синтаксической подсветки, которой оказывается "x. scripts: Apache httpd.conf" (см. рис.12).

{{overclock-mouse_Image_13.png}}

**Рисунок 14 режим "x. scripts: Apachehttpd.conf" задает правильный тип подсветки**

И все бы было хорошо, но каждый раз лазить в меню colorer'а слишком напряжно. А макросы на что? Повесим "подсветку" на любую свободную функциональную клавишу. Например, на <F9>. Только тут есть одна тонкость. При входе в listtypes, курсор находится на последнем выбранном типе, а он каждый раз разный. Как объяснить это макросу? Очень просто! Жмем клавишу <Home>, переходя в начало списка типов, откуда уже спускаемся к строке "x. scripts: Apache httpd.conf"!

А вот другой хитрый пример. Допустим, захотелось нам переформатировать документ. В штатную поставку FAR'а входит плагин AlignBlock, позволяющий форматировать абзацы, но… после форматирования курсор оказывается там же где и стоял, вынуждая нас вручную перемещаться к следующему форматируемому абзацу. Сплошной напряг! Приходится действовать через жопу: перемещаем курсор вниз, вводим уникальную последователь, заведомо не встречающуюся в документе (например, "fuckthemall"), возвращаем курсор наверх, форматируем абзац, давим <F7> (поиск) и вводим "fuckthemall". Все! Теперь FAR гарантированно перейдет на его начало! Нажимаем <DEL> 11 раз, стирая "fuckthemall" на хрен. Смотрите! Курсор стоит на первом символе следующего абзаца, то есть для переформатирования всего документа достаточно просто нажать горячую клавишу макроса и не отпускать ее!

Начиная с версии 1.70 alpha 6, макро-движок переработан и усилен. Появилась поддержка условных операндов, операторов цикла и функций. Теперь можно не просто записывать последовательности клавиш, но и, например, считывать текущую элемент в меню. Например, мы можем создать макрос, автоматически снимающий галочку "Copy access rights" при копировании на дискету (если она была взведена) и автоматически восстанавливающий ее содержимое при завершении. Старый макро-движок на это неспособен в приницпе.

Саму альфу можно стянуть с раздела обновлений (http://farmanager.com/files/Far170a6b2060.rar). В download'ах ее нет. Документация на макроязык еще не готова, пока только обкатывается черновой вариант: http://www.farmanager.com/files/macro.chm.zip, которую народ во всю обсуждает на форуме, обмениваясь макросами и идеями: http://forum.farmanager.com/viewforum.php?f=15&sid=ac08155b15647e7be5b1a8e16dbd03a5.

Например, следующий макрос автоматически создает папку с именем текущей даты. Это намного удобнее, чем каждый раз писать "new", "new2", "new.new", мучительно соображения какая из них самая новая, а какую уже можно и стереть:

<code>
REGEDIT4

;создание папки с именем = текущей дате

[HKEY_CURRENT_USER\Software\Far\KeyMacros\Shell\CtrlShiftF7]
"Sequence"="%folder=date(\"%d.%m0.%Y\"); $If (!fexist(%folder)) F7 CtrlY $Text %folder Enter $End"
"DisableOutput"=dword:00000001
"NoPluginPanels"=dword:00000001
</code>

**Листинг 2 пример макроса для нового макро-движка**

===== заключение =====

Разгонный потенциал компьютера просто огромен. Он намного выше, чем это принято думать. В конечном счете, реальная производительность определяется не количеством попугаев в синтетических текстах, а объемом выполненной работы. До тех пор, пока продолжится господство мыши и засилье плохо продуманных интерфейсов, самым узким местом системы будет оставаться человек. Машина терпеливо ждет от него команд, а он… жестикулирует мышью, вместо того, чтобы нажать пару клавиш. Отвернуть шаблон, не принять стандарт — вот что значит разгон. Overclocker'ы всегда славились неординарность мышления, позволяющий им посмотреть на проблему с другой стороны. Они прошли длинный путь — от простого наращивания тактовой часты до вольмода. Из железа выжато все, что только можно. Следующий шаг — разгон интерфейсов. И отказ от мыши — это только начало.


