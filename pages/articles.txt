==== Статьи ====
----
=== экстремальный разгон XP ===

кто это у тебя там фырчит? а… винчестер между переключениями с одной задачи на другую. а Windows разгонять не пробовал? у тебя ведь Windows стоит, верно? если это модель семейства NT'вых (NT, W2K, XP, 2003) эта статья для тебя!

[[:articles:overhal.hacker_edition|_overHAL.hacker_edition]]
----



=== два компьютера - один монитор, два монитора - один компьютер ===

чтобы обустроить свой рабочий стол воистину по-хакерски (всем пионерам на зависть) необходимо разобраться с хитросплетениями кабелей, научившись подключать к одному компьютеру несколько мониторов и, наоборот, "запитывать" свой основной монитор от нескольких компьютеров, объединяя их в домашний кластер или даже группу кластеров, перемалывающих пароли со скоростью реактивного истребителя на форсаже.

[[:articles:2pc1mon|2PC1MON]]
----
=== подсчет совокупной стоимости перехода на Висту в рамкой мелкой компании и крупной корпорации ===

серьезные учреждения покупают компьютеры главным образом для того, чтобы зарабатывать на них деньги. в этой области, далекой от развлечений, экономическая сторона проблемы становится решающим аргументом в вопросе: переходить или не переходить? причем, тот, кто полагает, что стоимость перехода равна стоимости лицензий ошибается как минимум на два порядка.

[[:articles:4xp2vista|4XP2vista]]
----

=== ядерно-нуклонная смесь или чем отличается XP от 9х ===

Windows 98 – самая удачная операционная система, из всех, когда-либо созданных Microsoft. настолько удачная, что даже затруднившая продвижение Windows 2000 и Windows XP. увы, ее поддержка прекращена и переход на Windows XP/2003 неизбежен, даже если мы этого не хотим. говорят, в последние мгновения перед смертью человек вспоминает всю свое прошлое – свои добрые и плохие дела. но операционная система не наделена созданием и она может жить только в наших сердцах. вот и давайте сравним ее ядро с ядром Windows NT, чтобы знать что мы теряем, а что получаем взамен.

[[:articles:95vsxp|95vsXP]]
----

=== жизнь после BSOD (Lite) ===

все знают что такое BSOD (он же "голубой экран смерти" — Blue Screen Of Death). это последний вздох операционной системы, после которого она сбрасывает дамп и уходит на перезагрузку, теряя все не сохраненные данные. однако, на самом деле BSOD еще не конец и если перезагрузку заменить на реанимациею, в 9 из 10 случаев можно возвратиться в нормальный режим и успеть зашутданить систему перед тем, как она умрет окончательно.

[[:articles:after-bsod.lite|after-BSOD.lite]]
----
=== весь крис касперски ===

первый робкий опыт автобиблографии с комментариями, просьба не дергать за хвост и не бить ногами!

[[:articles:allkpnc|allkpnc]]
----

=== ночь живых мертвецов — активная защита против малвари ===

броня крепка и кони наши быстры! антивирусы в смысле. да где же мы быстрых антивирусов видели?! они же тормозят как… ну прямо как танки! и ни хвоста не ловят! а малварь идет косяками и если ее не прищемить, она сожрет все данные и даже ни разу не подавится. персональные брандмауэры отдыхают, тихо куря в сторонке. до сих пор _реально_ действующие защитные комплексы были доступны лишь крупным провайдерам, теперь же они приходят в массы!

[[:articles:amp-snort|AMP-Snort]]
----

=== энциклопедия антиотладочных приемов — скрытая установка SEH-обработчиков выпуск #07h ===

продолжая окучивать плодородную почву темы структурных исключений, поговорим о методах скрытой установки SEH-обработчиков, используемых для затруднения дизассемблирования/отладки подопытного кода, а так же обсудим возможные контрмеры анти-анти-отладочных способов.

  

[ **[[https://www.evilfingers.com/publications/research_RU/anti-debug-07.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/anti-debug-07|DOC**]]**]

=== энциклопедия антиотладочных приемов — россыпи головоломок выпуск #00h (пилотный) ===

за бытность своей кодокопательской жизни мыщъх нарыл обширную (и достаточно полную) коллекцию антиотладочных приемов, надерганных из протекторов, вирусов, crack-me'сов плюс собственные идеи и разработки. систематизировав разрозненные факты и разложив их по полочкам, мыщъх решил разделить заначки своей норы с хакерским миром. вот так и возникла идея рубрики "антиотладка", главным образом посвященной NT- и UNIX-подобным операционным системам (W2K, XP, Vista, Linux, BSD) и x86-платформе. Виртуальные машины JVM и .NET так же как и 64-разрядные архитектуры пока еще находятся в исследовательской стадии, но мыщъх доберется и до них!

  

[ **[[https://www.evilfingers.com/publications/research_RU/anti-debug-#00.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/anti-debug-#00|DOC**]]**]

=== энциклопедия антиотладочных приемов — обработка необрабатываемых исключений выпуск #03h ===

отладчики, работающие через MS Debugging API (OllyDbg, IDA-Pro, MS VC), вынуждены мириться с тем, что отладочные процессы "страдают" хроническими особенностями поведения, "ломающих" логику программы, что (с огромной выгодной для себя!) используют защитные механизмы, ставящие хакеров в тупик. в частности, API-функция SetUnhandledExceptionFilter() под отладчиком вообще не вызывается и это вовсе не баг отладичка, а документированная фича системы!

  

[ **[[https://www.evilfingers.com/publications/research_RU/anti-debug-#03.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/anti-debug-#03|DOC**]]**]

=== энциклопедия антиотладочных приемов — кто сломал мой бряк?! выпуск #06h ===

когда в очередной раз на форуме спросили: почему установленная точка останова на срабатывает (а ведь должна!) или (что еще хуже) приводит программу к краху, мыщъх не выдержал, нервно защелкал хвостом и застучал лапами по клавиатуре, попытавшись ответить на этот вопрос раз и навсегда, собрав воедино огромное количество разрозненной инфы.

  

[ **[[https://www.evilfingers.com/publications/research_RU/anti-debug-#06.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/anti-debug-#06|DOC**]]**]

=== как хакнуть азиатку ===

восточными красавицами нынче "болеют" многие. увлечение востоком — это просто эпидемия какая-то. хакеры, живущие на глубине норы своего одиночества, отгородившиеся от мира четырьмя стенами и уткнувшиеся в монитор, обычно испытывают большие проблемы даже с обычными девушками, а уж тем более азиатками. как воплотить эту мечту в реальность?

  

[ **[[https://www.evilfingers.com/publications/research_RU/asian-gals-hack.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/asian-gals-hack|DOC**]]**]

=== ручная троянизация приложений под windows ===

время тупых троянов давно прошло. сегодня уже никто не пытается сокрушить диск или удалить все файлы под чистую. такой троян будет слишком заметен, а потому навряд ли получит большое распространение. гораздо заманчивее внедрить на компьютер бакдор или шпион для перехвата паролей, электронных кошельков, номеров кредитных карт и т. д. как это слелать? а вот как!

  

[ **[[https://www.evilfingers.com/publications/research_RU/asm.inject.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/asm.inject|DOC**]]**]

=== MBR своими руками ===

сегодня мы напишем свой менеджер мультизагрузки. это такая штука, что сидит в загрузочном секторе и грузит любую из нескольких установленных операционных систем по нашему выбору. он познакомит нас с прерыванием INT 13h, таблицей разделом и кое-чем еще.

  

[ **[[https://www.evilfingers.com/publications/research_RU/asm.MBR.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/asm.MBR|DOC**]]**]

=== захват и освобождение заложников в исполняемых файлов ===

конструирование вирусов — отличный стимул к изучению ассемблера! и хотя вирус в принципе можно написать и на Си, это будет как-то не по-хакерски и вообще неправильно! настоящие хакеры пишут только на FASM'е и только под Pain/Hypocrisy или на худой конец под группу Absu — запрещенную в большинстве стран Европы. ОК! затариваемся пивом, надеваем наушники, запускаем Multi-Edit или TASMED и погружаемся в мрачный chemical excrement кибернетического мира, ряды которого скоро пополняется еще одним зловредным созданием…

  

[ **[[https://www.evilfingers.com/publications/research_RU/asm.NTFS.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/asm.NTFS|DOC**]]**]

=== ассемблер — экстремальная оптимизация ===

ассемблер — это удивительный язык, открывающий дверь в мир больших возможностей и неограниченного самовыражения. состязания между программистами здесь — обычное дело. выигрывает тот, у кого нестандартный взгляд, необычный подход. зачастую, самое "тупое" решение — самое быстрое и правильное.

  

[ **[[https://www.evilfingers.com/publications/research_RU/asm-extoptimize.20kb.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/asm-extoptimize.20kb|DOC**]]**]

=== ассемблирование без секретов ===

в сети лежит множество ассемблерных листингов, но большинство из них находится в сильно разобранном состоянии и… не транслируется! как "причесать" листинг, внедрить его в свою программу, выбрать правильный транслятор и ключи командной строки — поведает мыщъх в этой статье.

  

[ **[[https://www.evilfingers.com/publications/research_RU/asm-howtocomp.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/asm-howtocomp|DOC**]]**]

=== ассемблерные извращения — натягиваем стек(черновик) ===

ассемблер представляет практически неограниченную свободу для самовыражения и всевозможных извращений, что выгодно отличает его от языков высокого уровня. вот мы и воспользуемся этой возможностью, извратившись не по детски и сотворив со стеком то, о чем приплюснутый си только мечтает.

  

[ **[[https://www.evilfingers.com/publications/research_RU/asm-stack-hck.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/asm-stack-hck|DOC**]]**]

=== сравнение ассемблерных трансляторов ===

проблема выбора "единственного правильного" ассемблерного транслятора мучает не только начинающих, но и профессиональных программистов. у каждого продукта есть своя когорта поклонниках и спор о преимуществах/недостатках рискует превратиться в священные войны с выносом тел погибших. на форумах такие дискуссии лучше не разводить и вещать в одностороннем порядке, как мыщъх, собственно, и поступил, сравнив MASM, TASM, FASM, NASM, YASM и некоторые другие ассемблеры по всему спектру критериев, значимость которых каждый должен оценивать сам.

  

[ **[[https://www.evilfingers.com/publications/research_RU/asm-translator.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/asm-translator|DOC**]]**]

=== война миров: ассемблер против си ===

действительно ли эффективны (неэффективны) си-компиляторы и насколько большой выигрыш можно получить, переписав программу на языке ассемблера. какую цену за это придется заплатить? об этих и многих других вопросах, волнующих хакерскую общественность уже несколько лет, мыщъх постарался дать предельно объективный и непредвзятый ответ.

  

[ **[[https://www.evilfingers.com/publications/research_RU/asm-vs-c.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/asm-vs-c|DOC**]]**]

=== любовь с эвристикой в непристойных позах(и avi-картинках) ===

по каким критериям эвристики вершат свой суд? разработчики антивирусов не разглашают алгоритмов, наивно полагая, что тем самым они усложняют жизнь хакерам, но стоит затащить эвристик в постель, как все тайное сразу же станет явным. стратегия механизма принятия решений легко определяется экспериментально. для этого даже не потребуется брать в лапы дизассемблер, достаточно просто сравнить "честные" программы с "нечестными" и выяснить чем они отличаются.

  

[ **[[https://www.evilfingers.com/publications/research_RU/av8way.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/av8way|DOC**]]**]

=== демонстрационные ролики к статье об эвристики ===

серия из трех коротких роликов, снятых мыщъем под музыку готической группы с непечатным названием, но очаровательным женским вокалом, запечатлевших наиболее интересные и пикантные моменты работы (если это траханье можно назвать работой) с эвристиками, после которого сразу становится видно кто из них реально крут, а кто только гавкать на честные файлы умеет. показана рабочая обстановка "вирусоносного" компьютера мыщъх'а, а так же некоторые хитрые приемы работы с клавиатурой и макросами, позволяющими задвинуть в сторону мыщъх. впервые в живую продемонстрирована "хирургическая операция" в PE-файла в hex-редакторе от начала и до конца, что значительно упрощает ее повторение всеми остальными (поскольку, это моя первая мыщъх'ая мультимедийная презентация, то на измену не высаживаться и ногами не бить).

  

[ **[[https://www.evilfingers.com/publications/research_RU/av8way-avi.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/av8way-avi|DOC**]]**]

=== антивирусы в корпоративной среде ===

от качества антивируса во многом зависит надежность корпоративной сети. но какой из них выбрать? на рынке присутствует множество игроков: AVP, Dr. Web, Trend-Micro, Symantec, NOD32, McAfee, продукты которых мы тщательно протестировали на широком спектре потребительских характеристик, описав полученные результаты в настоящей статье.

  

[ **[[https://www.evilfingers.com/publications/research_RU/av-corp.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/av-corp|DOC**]]**]

=== антивирусы в корпоративной среде(дополнения) ===

антивирусы в корпоративной среде(дополнения).

  

[ **[[https://www.evilfingers.com/publications/research_RU/av-corp-addons.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/av-corp-addons|DOC**]]**]

=== как обмануть антивирус? ===

антивирусы настолько доверчивые существа, что обмануть их может любой желающий. регулярное обновление сигнатурных баз — условие обязательное, но, увы, недостаточное для защиты от малвари, разработкой которой занимаются не только пионеры, но и профессиональные программисты. вот только несколько трюков, способных ослепить любой, даже самый крутой и навороченный антивирус.

  

[ **[[https://www.evilfingers.com/publications/research_RU/av-fools.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/av-fools|DOC**]]**]

=== армирование антивирусов и брандмауэров ===

очень часто антивирусы и брандмауэры превращаются из охотника в жертву. в борьбе с активной малварью еще и не такое случается. и хотя разработчики всячески пытаются защититься от посягательств со стороны зловредного кода, воздвигая целый комплекс средств противовоздушной обороны, при схватке с грамотно спроектированным зловредным кодом они обречены на поражение. как усилить защиту уже существующих антивирусов/брандмауэров, не вмешиваясь в их машинный код и не ковыряя исходные тексты, которых у нас все равно нет? как заковать антивирус/брандмауэр в надежную броню, способную противостоять активной малвари? мыщъх знает. и сейчас расскажет. не волнуйтесь, владения ассемблером для этого не потребуется — статья ориентирована на простых пользователей.

  

[ **[[https://www.evilfingers.com/publications/research_RU/av-shield.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/av-shield|DOC**]]**]

=== защищенная ось без антивирусов и тормозов ===

некоторые воспринимают антивирус как неотъемлемую часть операционной системы и просто не мыслят свое существование без кучи защитных пакетов от разных производителей, свободно пропускающих заразу, но вызывающих жуткие тормоза и целый ворох конфликтов, вплоть до выпадения в BSOD. самый лучший антивирус — это сама ось! нужно только научиться правильно ею пользоваться!

  

[ **[[https://www.evilfingers.com/publications/research_RU/av-test-drive.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/av-test-drive|DOC**]]**]

=== экономика резервирования данных ===

подходы к резервированную данных довольно различны: на одних предприятиях существует жестко выработанная политика, которой все сотрудники должны следовать неукоснительно, на других же резервирование осуществляется стихийно — в случайное время, случайными людьми, на первый же попавшийся носитель. многие авторы, углубясь в техническую сторону проблемы, совершенно забывают об [про] экономическую составляющую, и в некоторых случаях затраты на _плановое_ резервирование превышают _возможные_ (и, зачастую, маловероятные) убытки от потери данных!

  

[ **[[https://www.evilfingers.com/publications/research_RU/backup-economy.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/backup-economy|DOC**]]**]

=== выбор носителей для резервирования ===

все знают, что нужно резервироваться, но не все делают это правильно. рынок предлагает множество разнообразных носителей: cd, dvd, zip… но не говорит, чем отличается один от другого. давайте сравним носители по удобству, стоимости, надежности и т.д., чтобы каждый смог осмысленно выбрать носитель своего предпочтения.

  

[ **[[https://www.evilfingers.com/publications/research_RU/backup-howto.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/backup-howto|DOC**]]**]

=== сидя на голом железе ===

в программировании голого железа есть какое-то непередаваемое словами очарование в котором мало практической пользы, но зато огромное эстетическое удовлетворение и наслаждение. сегодня мы спустимся на самый низкий уровень, который только возможно достигнуть на IBM PC! держитесь, мы будем программировать не только без операционной системы, но даже без BIOS'а!

  

[ **[[https://www.evilfingers.com/publications/research_RU/bare-hw.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/bare-hw|DOC**]]**]

=== легенды и мифы прошивки BIOS ===

пожалуй, ни один из компонентов ПК не окружен таким количеством слухов и домыслов, как BIOS. между тем, приписываемое ему мистическое влияние на производительность и стабильность системы сильно преувеличено и гоняться за новыми прошивками, право же, не стоит. эта статья рассказывает когда и как следует обновлять BIOS и какую выгоду из этого можно извлечь…

  

[ **[[https://www.evilfingers.com/publications/research_RU/BIOS.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/BIOS|DOC**]]**]

=== BIOS-моддинг ===

модификация BIOS'а таит в себе практически неограниченные возможности: экстремальный разгон системы, разблокирование заблокированных фич, исправление ошибок разработчиков, неуловимые вирусы, "украшательства" под свой вкус — это высший пилотаж хакерства, требующий знания железа и умения держать дизассемблер в руках. это дремучий лес, в котором очень легко заблудится, но я покажу вам кратчайший путь.

  

[ **[[https://www.evilfingers.com/publications/research_RU/BIOS.modding.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/BIOS.modding|DOC**]]**]

=== BIOS-моддинг ===

если процессор это сердце компьютера, то BIOS — его душа. Прошивка определяет все! Возможности системы можно значительно расширить, если внедрить в BIOS свой собственный модуль, делающий что-то полезное, например, защищающий компьютер от вторжения, воющий с антивирусами или разблокирующий заблокированные возможности и разгоняющий машину до сверхсветовых скоростей. Одним словом, хачить BIOS не только можно, но и нужно!

  

[ **[[https://www.evilfingers.com/publications/research_RU/BIOS.patch.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/BIOS.patch|DOC**]]**]

=== BIOS-моддинг (Lite) ===

если процессор это сердце компьютера, то BIOS — его душа. Прошивка определяет все! Возможности системы можно значительно расширить, если внедрить в BIOS свой собственный модуль, делающий что-то полезное, например, защищающий компьютер от вторжения, воющий с антивирусами или разблокирующий заблокированные возможности и разгоняющий машину до сверхсветовых скоростей. Одним словом, хачить BIOS не только можно, но и нужно!

  

[ **[[https://www.evilfingers.com/publications/research_RU/BIOS.patch.lite.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/BIOS.patch.lite|DOC**]]**]

=== алхимия прошивки видео-BIOS ===

экстремальный разгон требует экстремальных мер — наращивания тактовой частоты, увеличения напряжения, смены прошивки. нам нужен точный рецепт, чтобы соединить все эти реагенты воедино и получить желаемый результат. и этот рецепт лежит перед вами ### находится в ваших руках!

  

[ **[[https://www.evilfingers.com/publications/research_RU/BIOS-video.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/BIOS-video|DOC**]]**]

=== сишные трюки (0xC выпуск) ===

сегодняшний выпуск посвящен проблемам удаленной диагностики ошибок. это когда у пользователя падает программа, а воспроизвести ситуацию у себя на месте у нас на месте — не получается. удаленную отладку (по модему и/или интернету) не предлагать, т.к. далеко не всякий пользователь на это согласиться и все что нам остается — внедрить в программу дополнительный проверочный код.

  

[ **[[https://www.evilfingers.com/publications/research_RU/c-tricks-0Ch.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/c-tricks-0Ch|DOC**]]**]

=== сишные трюки (0xD выпуск) ===

Препроцессор в Си — великая вещь, однако, его возможности существенно ограничены и зачастую, чтобы осуществить задуманное приходится извращаться не по детски. Достаточно часто программистам требуется получить случайное число, уникальное для каждого билда, но не меняющееся от запуска программы к запуску. Существует множество решений этой проблемы. В частности, линкер ulink использует штамп времени, содержащийся в заголовке PE-файла, однако, этот способ системно-зависимый и что самое неприятное неработающий на некоторых UNIX-подобных осях, где ELF-заголовок вообще не проецируется на адресное пространство процесса.

  

[ **[[https://www.evilfingers.com/publications/research_RU/c-tricks-0Dh.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/c-tricks-0Dh|DOC**]]**]

=== сишные трюки (0xE выпуск) ===

сегодняшний выпуск трюков посвящен двум любопытным, но малоизвестным возможностям языка си — "триграфам" (trigraph) и "диграфам" (digraph), в основном встречающихся в соревнованиях по непонятному программированию, однако, в некоторых (достаточно редких) случаях "разваливающих" программу, написанную без учета их существования.

  

[ **[[https://www.evilfingers.com/publications/research_RU/c-tricks-0Eh.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/c-tricks-0Eh|DOC**]]**]

=== сишные трюки (0xF выпуск) ===

ну вот, наконец, мы добрались и до вопросов стиля программирования и вытащили из копилки три любопытных трюка, способствующих ясности листинга и страхующих программиста от совершения неявных ошибок (особенно при работе в коллективной среде). впрочем, удобство это вопрос привычки и предмет непрекращающихся священных войн, граничащих с корпоративными стандартами, диктующими свои правила оформления листинга, так что прежде чем применять мыщъхиные трюки на практике проконсультируйтесь с адвокатом. шутка.

  

[ **[[https://www.evilfingers.com/publications/research_RU/c-tricks-0fh.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/c-tricks-0fh|DOC**]]**]

=== сишные трюки (1Ah выпуск) ===

си – самый низкоуровневый из всех высокоуровневых языков, идеологически близкий к ассемблеру. настолько близкий, что способный позаимствовать многие чисто ассемблерные фичи, существенно упрощающие решение многих задач и реализуемые без использования ассемблерных вставок, то есть средствами самого языка.

  

[ **[[https://www.evilfingers.com/publications/research_RU/c-tricks-1Ah.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/c-tricks-1Ah|DOC**]]**]

=== сишные трюки (1Bh выпуск) ===

вольности, допускаемые Си/Си++ в отношении указателей (что отличает их от Java/.NET и других "правильных" языков), обеспечивают гибкость, компактность и высокое быстродействие целевого кода. однако, подобная демократия таит в себе скрытую угрозу и всякий указатель становится источником непредсказуемых побочных эффектов, разваливающих программу!

  

[ **[[https://www.evilfingers.com/publications/research_RU/c-tricks-1Bh.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/c-tricks-1Bh|DOC**]]**]

=== сишные трюки (1Ch выпуск) ===

доброкачественная инициализация переменных — явление достаточно редкое, можно даже сказать уникальное. анализ открытых исходных текстов и дизассемблирование закрытых двоичных модулей показывает, что большинство программистов не имеют никакого представления о внутренней кухне компилятора, совершая грубые ляпы, о которых мы сейчас и поговорим!

  

[ **[[https://www.evilfingers.com/publications/research_RU/c-tricks-1Ch.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/c-tricks-1Ch|DOC**]]**]

=== сишные трюки (1Dh выпуск) ===

современные процессоры быстры как мустанги, но все-таки даже мустангу не догнать реактивный самолет возросших потребительских потребностей с динамически изменяющейся геометрией крыла, скомпенсировать турбулентность которого могут только предвычисленные табличные алгоритмы, переносящие центр тяжести со времени выполнения на стадию компиляции. казалось бы, ну что тут такого? просто заполняем таблицу и все! так ведь нет! террористы сидят в засаде в нас уже летит томагавк!

  

[ **[[https://www.evilfingers.com/publications/research_RU/c-tricks-1Dh.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/c-tricks-1Dh|DOC**]]**]

=== сишные трюки (1Eh выпуск) ===

борьба с хакерами на высоком сишном уровне (без ассемблерных вставок!) продолжается и сегодня мы рассмотрим технику обфускации указателей на данные и функции, продемонстрировав системно-независимые подходы — легкие в реализации, но устойчивые ко взлому.

  

[ **[[https://www.evilfingers.com/publications/research_RU/c-tricks-1Eh.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/c-tricks-1Eh|DOC**]]**]

=== сишные трюки (1Fh выпуск) ===

язык си не предоставляет никаких средств для временного отключения блоков кода и большинство программистов делают это с помощью комментариев. казалось бы что может быть проще и о каких трюках тут вообще говорить? на самом же деле, комментарии не только не единственный, но и едва ли не самый худший прием среди прочих о которых мы сейчас и поговорим!

  

[ **[[https://www.evilfingers.com/publications/research_RU/c-tricks-1Fh.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/c-tricks-1Fh|DOC**]]**]

=== сишные трюки (8й выпуск) ===

Начнем издалека. Программирование — это своего рода дзен, это поединок кода с мыслю, а поединок это уже кун фу, а кун фу это когда ты "сначала ты не знаешь, что нельзя делать то-то, потом знаешь, что нельзя делать то-то, потом ты понимаешь, что иногда таки можно делать то-то, ну а потом ты понимаешь, что помимо того-то существует еще шестьдесят девять способов добиться желаемого, и все из них практически равноправны, но когда тебя спрашивают "как мне добиться желаемого", ты быстро перебираешь в уме эти шестьдесят девять способов, прикидываешь то общее, что в них есть, вздыхаешь и говоришь: "вообще-то, главное - гармония" и на вопрос обиженных учеников: "а как ее добиться?", ты говоришь: "никогда не делайте то-то".

  

[ **[[https://www.evilfingers.com/publications/research_RU/c-tricks-8.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/c-tricks-8|DOC**]]**]

=== сишные трюки (10h выпуск) ===

этот выпуск трюков в некотором смысле особенный, а особенный он, потому что юбилейный (в шестнадцатеричной нотации). мыщъх долго готовился к такому знаменательному событию, отбирая самые вкусные трюки, но… в конце концов трюков оказалось столько (и один вкуснее другого), что пришлось просто подкинуть монетку, выбрав четыре трюка наугад.

  

[ **[[https://www.evilfingers.com/publications/research_RU/c-tricks-10h.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/c-tricks-10h|DOC**]]**]

=== сишные трюки (11h выпуск) ===

сегодня мы поговорим о статических/динамических массивах нулевой длинны. "а разве бывают такие?" — спросит недоверчивый читатель. не только бывают, но и утверждены стандартом, а так же активно используются всеми, кто о них знает (правда, знают о них немногие, и разработчики компиляторов в том числе).

  

[ **[[https://www.evilfingers.com/publications/research_RU/c-tricks-11h.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/c-tricks-11h|DOC**]]**]

=== сишные трюки (12h выпуск) ===

кто-то в шутку сказал, что программисты в среднем тратят 10% времени на написание программы и 90% — на ее отладку. разумеется, это преувеличение и правильно спроектированная программа должна отлаживать себя сама или по крайней мере автоматизировать этот процесс. сегодняшний выпуск трюков, как вы уже догадались, посвящен магии отладки.

  

[ **[[https://www.evilfingers.com/publications/research_RU/c-tricks-12h.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/c-tricks-12h|DOC**]]**]

=== сишные трюки (13h выпуск) ===

в прошлом выпуске мы говорили о том как упросить отладку. сегодня же займемся обратной задачей, сосредоточив свое внимание на анти-отладочных приемах, препятствующих взлому программ. сразу же предупредим — все они системно-зависимы и выходят за рамки классического Си, а потому: применять их или не применять — супер неоднозначный вопрос, но если вы все же их применяете, то эта статья научит вас применять их _правильно_

  

[ **[[https://www.evilfingers.com/publications/research_RU/c-tricks-13h.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/c-tricks-13h|DOC**]]**]

=== сишные трюки (14h выпуск) ===

о переполняющихся буферах написано много, о переполнении целочисленных/вещественных переменных — чуть меньше, а ведь это одна из фундаментальных проблем языка си, доставляющая программистам массу неприятностей и порождающая целых ворох уязвимостей разной степени тяжести, особенно если программа пишется сразу для нескольких платформ. как быть, что делать? мыщъх делится своим личным боевым опыт (с учетом всех травм и ранений, понесенных в ходе сражений), надеясь, что читатели найдут его полезным, а я тем временем в госпитале с сестричкой…

  

[ **[[https://www.evilfingers.com/publications/research_RU/c-tricks-14h.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/c-tricks-14h|DOC**]]**]

=== сишные трюки (15h выпуск) ===

сегодня мы займемся укрощением gets и подобным ей функциям, возвращающим заранее непредсказуемый объем данных — быть может десяток байт, а быть целую сотню мегабайт. ограничивать предельный объем (как это часто делается) негуманно, а в некоторых случаях — невозможно или же требует серьезного редизайна всего кода, но если немножко схитрить, то ни ограничивать, ни редизайнить не потребуется, все будет работать и так!

  

[ **[[https://www.evilfingers.com/publications/research_RU/c-tricks-15h.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/c-tricks-15h|DOC**]]**]

=== сишные трюки (16h выпуск) ===

сегодня у нас несколько необычный выпуск. своеобразный юбилей. если перевести номер в шестнадцатеричную систему (забыв о том, что он _уже_ записан в ней), мы получим число 10h, в "круглости" которого сомневаться не приходится. ошибка?! конечно! вот и поговорим об ошибках, которые только с виду ошибки, а на самом деле интересные хакерские трюки, срывающие крышу даже опытным программистам! короче, мы немного похулганим… не вздумайте показывать описанные трюки ни преподавателям, ни работодателям!!!

  

[ **[[https://www.evilfingers.com/publications/research_RU/c-tricks-16h.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/c-tricks-16h|DOC**]]**]

=== сишные трюки (17h выпуск) ===

прожорливость современных программ обгоняет темпы роста объемов оперативной памяти бюджетных компьютеров и потому все вокруг тормозит и высаживается на конкретную измену. как уменьшить потребности программ в памяти _увеличив_ их в размерах? шутки в сторону! чем больше "весит" программа тем меньше памяти она потребляет. вот такая, с позволения сказать, практическая магия программирования.

  

[ **[[https://www.evilfingers.com/publications/research_RU/c-tricks-17h.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/c-tricks-17h|DOC**]]**]

=== сишные трюки (18h выпуск) ===

долгое время мы витали вокруг чистого ANSI C, без реверансов в сторону нестандартных расширений от различных производителей, которых развелось столько, что игнорировать их, все равно, что добывать огонь трением и писать гусиными перьями, поэтому наш сегодняшний выпуск повещен весьма щепетильной теме интимных взаимоотношений Си с платформой .NET и управляемым (managed) кодом, а любовный треугольник, как известно — самая нестойкая конструкция.

  

[ **[[https://www.evilfingers.com/publications/research_RU/c-tricks-18h.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/c-tricks-18h|DOC**]]**]

=== сишные трюки (19h выпуск) ===

очередная порция трюков от мыщъх'а — загрузка dll с турбо-наддувом. прямого отношения к си не имеет, однако, работает (не без изменений, конечно) как под windows, так и Linux/BSD, ускоряя загрузку динамических библиотек в десятки и даже тысячи раз, а как дополнительный бонус — затрудняет дизассемблирование программы и препятствует снятию дампа, что очень даже хорошо!

  

[ **[[https://www.evilfingers.com/publications/research_RU/c-tricks-19h.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/c-tricks-19h|DOC**]]**]

=== сишные трюки (0xA выпуск) ===

сегодняшний выпуск трюков посвящен двоичным деревьям — этим простым, но в тоже время мощнейшим структурам данных, без не обходится практически ни одна серьезная программа. как раскрыть их потенциал, используя двоичные деревья с максимальной эффективностью, вот в чем вопрос!

  

[ **[[https://www.evilfingers.com/publications/research_RU/c-tricks-A.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/c-tricks-A|DOC**]]**]

=== сверхбыстрый импорт API-функций ===

окруженный компьютерами, опутанный проводами, мыщъх сидел в глубине своей хакерской норы и точил зверский план, который должен был обогнать Microsoft и ведь обогнал! да еще как обогнал! скорость импорта возросла на порядок, отлично работая как на древней 9x, так и на новом Windows Server 2003, включая все промежуточные системы, причем без грамма ассемблерного кода! все на 100% Си!

  

[ **[[https://www.evilfingers.com/publications/research_RU/c-tricks-III-q-import.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/c-tricks-III-q-import|DOC**]]**]

=== сишные трюки от мыщъх'а (5й выпуск) ===

Допустим, нам потребовалось прочитать значение ячейки памяти некоторого процесса и вывести ее на экран. Или распечатать дескриптор заданного окна. Да все что угодно!

  

[ **[[https://www.evilfingers.com/publications/research_RU/c-tricks-V.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/c-tricks-V|DOC**]]**]

=== си'шные трюки VI выпуск ===

Огромным недостатком языка Си (за который бы голову оторвать его создателям) является отсутствие операторов циклического битового сдвига, которые присутствуют практически на всех процессорах и без которых не обходится ни подсчет CRC32, ни вычисление корректирующих кодов Рида-Соломона, ни куча других подобных алгоритмов.

  

[ **[[https://www.evilfingers.com/publications/research_RU/C-tricks-VI.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/C-tricks-VI|DOC**]]**]

=== сишные трюки от мыщъх'а (4й выпуск) ===

в этом, четвертом по счету выпуске, мы рассмотрим трюки так или иначе связанные с памятью: дефрагментируем кучу, разберемся как правильнее передавать переменные по ссылке или по значению и когда их нужно инициализировать, а когда нет.

  

[ **[[https://www.evilfingers.com/publications/research_RU/c-trics-IV.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/c-trics-IV|DOC**]]**]

=== сишные трюки (7й выпуск) ===

В Си массивы начинаются с нуля, а во многих других языках — с единицы, что сильно напрягает при переходе с одного языка на другой и еще больше — при переносе программ. Приходится вносить множество правок в самых разных местах и потом долго отлаживать программу. Да и сами сишники далеко не в восторге от того, что индекс последнего элемента массива размером N равен N-1. Это служит не только источником досадных ошибок, но в некоторых случаях снижает производительность.

  

[ **[[https://www.evilfingers.com/publications/research_RU/c-tricks-vii.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/c-tricks-vii|DOC**]]**]

=== сишные трюки от мыщъх'а ===

си — это не только мощный, но еще и "демократический" язык, свободный от глупых запретов и ограничений, сдерживающих полет хакерской мысли как это делают паскаль и си++. нестандартные приемы программирования высоко ценятся хакерами, но ненавистны "законопослушным" программистам, называющих их хаками, но прежде чем судить, нужно увидеть хотя бы один хороший хак.

  

[ **[[https://www.evilfingers.com/publications/research_RU/c-triks.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/c-triks|DOC**]]**]

=== как заточить exploit под себя ===

в сети валяется множество демонстрационных (proof-of-concept) exploit'ов, создающих файл на "жертвенном" диске или выводящих сообщение об уязвимости на экран. для атаки на удаленные системы они не пригодны, и даже если нам посчастливиться встреть боевой exploit, открывающий shell, вовсе не факт, что он заведется без предварительной доработки…

  

[ **[[https://www.evilfingers.com/publications/research_RU/exploit4uself.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/exploit4uself|DOC**]]**]

=== exploits review 1Bh выпуск ===

в середине августа Microsoft порадовала нас очередной порцией заплаток, допускающих удаленный захват управления системой. практически все они относятся к MS Office, файлы которого давно стали международным стандартом де-факто и сколько непатченных систем можно захачить — остается только гадать…

  

[ **[[https://www.evilfingers.com/publications/research_RU/exploit-review-0x1B.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/exploit-review-0x1B|DOC**]]**]

=== exploits review 1Ch выпуск ===

с началом осени хакеры вернулись из мест не столь отдаленных (морей, лесов, степей и прочих мест лишения своды, в смысле отдыха с семьей на природе вдали от компьютера), а тут Google подогнала свежий браузер Chrome (перехаченный FireFox), рвущий IE как Тузик грелку (по количеству обнаруженных дыр), а Крис Вебер вместе с Крисом Касперски обнаружили и обосновали принципиально новый тип атак, продемонстрировав его на подопытной Sun Java, сорвав ей крышу необычным стековым переполнением.

  

[ **[[https://www.evilfingers.com/publications/research_RU/exploit-review-0x1C.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/exploit-review-0x1C|DOC**]]**]

=== exploits review 1Dh выпуск ===

количество критических дыр, обнаруженных в Windows за последние два месяца, просто потрясает воображение — глаза разбегаются, лапы разъезжаются (по клавиатуре), хвост идет кувырком, не в силах выбрать каким уязвимостям отдавать предпочтение, а каким нет, к тому же дыр намного больше, чем это кажется. с уязвимостью в GDI+ ассоциирован только один бюллетень безопасности, но ошибок там (в том числе и не исправленных)… затыкая старые дыры, MS пробивает новые…

  

[ **[[https://www.evilfingers.com/publications/research_RU/exploit-review-0x1D.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/exploit-review-0x1D|DOC**]]**]

=== exploits review 1Eh выпуск ===

в конце октября в Малайзии состоялась конференция HITB (Hack In The Box), где мыщъх зачитал доклад, посвященный ошибкам ЦП, допускающих локальные и удаленные атаки на систему, что вызвало огромный общественный интерес и потому сегодняшний обзор сплоитов мы решили посвятить процессорным багам, продемонстрировав технику вторжения в чужие компьютеры.

  

[ **[[https://www.evilfingers.com/publications/research_RU/exploit-review-0x1E.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/exploit-review-0x1E|DOC**]]**]

=== exploits review 8й выпуск ===

Links это такой шустрый текстовой браузер (широко известный в узких кругах), изначально реализованный на Linux'е и успешно портированный на множество операционных систем всех мастей (xBSD, HPUX, OS/2, MacOSX, Win32…) и породивший множество клонов (самый известный из которых Elinks — [[http://elinks.or.cz|http://elinks.or.cz]]), распространяемых, как и сам Links, на бесплатной основе в открытых текстах — [[http://links.sourceforge.net|http://links.sourceforge.net]]. в силу своей чрезвычайной конструктивной простоты и отсутствии поддержки скриптов с прочими тяжеловесными элементами, долгое время (на пару с другим консольным браузерем рысем — lynx), он по праву считался самым безопасным "судном" для web-серфинга. мыщъх активно пользовался им сам (см. рис. 1) и даже рекомендовал его другим. но вот, на стыке 2006 и 2007 годов усилиями хакера Teemu Salmela в нем обнаружилась огромная дыра, позволяющая атакующему исполнять любые SMB-команды на машине жертвы, просматривающей зараженную HTML-страничку с помощью Links'a (естественно, SMB-клиент должен быть установлен).

  

[ **[[https://www.evilfingers.com/publications/research_RU/exploit-review-0x008.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/exploit-review-0x008|DOC**]]**]

=== exploits review 18h выпуск ===

этот необычный во всех отношениях обзор посвящен… ошибкам отладчиков, приводящим к утрате контроля над отлаживаемым приложением еще на стадии загрузки exe-файла в память, что для исследователей малвари зачастую заканчивается катастрофой — только хотел взглянуть на очередного зверька под отладчиком на своей основной машине как отладчик проскакивает точку входа и живчик поселяется на компьютере, ищи его потом!

  

[ **[[https://www.evilfingers.com/publications/research_RU/exploit-review-0x18.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/exploit-review-0x18|DOC**]]**]

=== exploits review 19h выпуск ===

этот обзор еще более необычен, чем предыдущий и посвящен он… ошибкам процессоров, обнаруженных за последнюю пару месяцев и существенно облегчающих нашу хакерскую жизнь — даже если операционная система не содержит дыр (например, OpenBSD), удаленная атака все равно остается возможной благодаря дефектом проектирования процессора!

  

[ **[[https://www.evilfingers.com/publications/research_RU/exploit-review-0x19.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/exploit-review-0x19|DOC**]]**]

=== exploits review 7й выпуск ===

в популярном (и при том совершенно бесплатном!) программном обеспечении для создания blog'ов — WikyBlog ([[http://www.wikyblog.com|www.wikyblog.com]]), отпочковавшимся от не менее популярной свободной энциклопедии Wikipedia ([[http://www.wikipedia.org|www.wikipedia.org]]), обнаружены множественные дыры, связанные с некорректной фильтрацией пользовательского ввода данных в полях "login" и "search", размещенных на странице Панели Управления ([[http://www.wikyblog.com/Special/Main/ControlPanel|www.wikyblog.com/Special/Main/ControlPanel]]) и позволяющие атакующему выполнять произвольный HTML/JavaScript/VBScript-код в контексте уязвимого сайта, воруя cookies, содержащие данные авторизации. уязвимость была обнаружена хакерским коллективом HackersCenter IT Security Research Team [HSC], описавших ее на своем сайте в короткой заметке, датируемой 1 декабря 2006 года [[http://www.hackerscenter.com/archive/view.asp?id=26544|http://www.hackerscenter.com/archive/view.asp?id=26544]] и уже на следующий день перекочевавшую на Security Focus: [[http://www.securityfocus.com/bid/21406|http://www.securityfocus.com/bid/21406]].

  

[ **[[https://www.evilfingers.com/publications/research_RU/exploit-reviews-0x007.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/exploit-reviews-0x007|DOC**]]**]

=== exploit review – июнь 2006 ===

6 июня Tavis Ormandy обнаружил уязвимость библиотеки ZLIB версии 1.2.2 и более ранних, приводящую к переполнению буфера с возможностью выполнения произвольного кода на пораженной машине. Ошибка контроля допущена в функции inflate_table(), расположенной в файле inftrees.c.

  

[ **[[https://www.evilfingers.com/publications/research_RU/exploits-review.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/exploits-review|DOC**]]**]

=== exploits review 0Ah выпуск ===

дополнительные защитные средства (такие, как антивирусы, персональные брандмауэры, etc) зачастую _сами_ становятся объектом атаки и вместо обещанного рекламой усиления защиты мы получаем новые дыры, одна из которых была обнаружена David'ом Matousek'ом (основателем и руководителем одноименной исследовательской компании — Matousec - Transparent security, [[http://www.matousec.com|www.matousec.com]]).

  

[ **[[https://www.evilfingers.com/publications/research_RU/exploits-review-0x0A.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/exploits-review-0x0A|DOC**]]**]

=== exploits review 0Bh выпуск ===

сегодняшний обзор exploit'ов мы посвятим Windows Vista, количество дыр в которой, несмотря на все заявления Microsoft, довольно значительно, и многие из них — критические (а ведь постави Висты только начались). Microsoft едва успевает выпускать заплатки, а хакеры тем временем находят все новые и новые дыры.

  

[ **[[https://www.evilfingers.com/publications/research_RU/exploits-review-0x0B.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/exploits-review-0x0B|DOC**]]**]

=== exploits review 0Ch выпуск ===

персональный компьютер стремительно превращается в "интеллектуальный терминал", подключенный к сети. все больше и больше производителей мигрируют в сторону ActiveX-компонентов, лавинообразный рост уязвимостей в которых сподвинул мыщъх'а на детальное описание этой проблемы, поглотившей весь сегодняшний обзор exploit'ов. мы не только покажем как "реанимировать" exploit'ы, выловленные в дикой природе, но и расскажем о технике самостоятельно поиска дыр в ActiveX-компонентах.

  

[ **[[https://www.evilfingers.com/publications/research_RU/exploits-review-0x0C.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/exploits-review-0x0C|DOC**]]**]

=== exploits review 0Dh выпуск ===

летняя жара, накрывшая добрую половину Европы вместе с Северным Кавказом и прилегающей к нему мыщъхиной норой, была отмечена всплеском дыр в Windows CE, ростом уязвимостей в Горящем Лисе (включая все производные от него продукты), традиционными дефектами в IE и MS Office, но в целом интересных дыр очень мало. настолько мало, что выбирать фактически не из чего. жара плавит мозги, кондиционеры не справляются и до осени на хакерском фронте наступает затишье.

  

[ **[[https://www.evilfingers.com/publications/research_RU/exploits-review-0x0D.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/exploits-review-0x0D|DOC**]]**]

=== exploits review 0Eh выпуск ===

еще не началась массовая миграция леммингов на Вислу, а дыры в ней уже обнаруживаются косяками. наш сегодняшний обзор вновь посвящен этой операционной системе, которая, вопреки всем заверениям корпорации Microsoft намного более дырява, чем предшествующая ей Xрюша.

  

[ **[[https://www.evilfingers.com/publications/research_RU/exploits-review-0x0E.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/exploits-review-0x0E|DOC**]]**]

=== exploits review 0Fh выпуск ===

виртуальные машины (BOCHS, VMWare) предназначены для усиления безопасности компьютера и активно используются для запуска подозрительных программ, исследования вирусов, червей, exploit'ов, etc. однако, как и любое другое программное обеспечение, виртуальные машины не свободны от ошибок и потому представляют собой весьма соблазнительную мишень для разнообразных атак, которым и посвящен наш сегодняшний выпуск.

  

[ **[[https://www.evilfingers.com/publications/research_RU/exploits-review-0x0F.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/exploits-review-0x0F|DOC**]]**]

=== exploits review II ===

11 июля 2006 Mariano Nuñez Di Croce, сотрудник копании CYBSEC S. A. (cybsec.com), опубликовал сообщение о переполнении буфера в Microsoft Windows DCHP-клиенте (технически реализованном как сервис), приводящем к возможности удаленного выполнения кода с привилегиями SYSTEM (что повыше администратора будет!), при условии, что атакующий и жертва находятся в одной подсети: cybsec.com/vuln/CYBSEC-Security_Pre-Advisory_Microsoft_Windows_DHCP_Client_Service_Remote_Buffer_Overflow.pdf; сообщение тут же подхватила Microsoft, выпустив оперативную заплатку вместе с описанием проблемы на TechNet:microsoft.com/technet/security/Bulletin/MS06-036.mspx, где уязвимости был присвоен критический уровень опасности. Аналогичную оценку выставила и французская компания FrSIRT:frsirt.com/english/advisories/2006/2754.

  

[ **[[https://www.evilfingers.com/publications/research_RU/exploits-review-0x002.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/exploits-review-0x002|DOC**]]**]

=== exploits review III ===

18 апреля 2006 года обнаружилась дыра в процессорах AMD K7/K8 позволяющая одному процессору заглянуть внутрь сопроцессорного контекста другого процесса, что ведет к утечке данных и упрощает атаку на криптографические системы: [[http://www.securityfocus.com/bid/17600|www.securityfocus.com/bid/17600]]. для быстрого переключения контекста Linux и BSD-системы используют пару команд fxsave/fxrstor, сохраняющих/восстанавливающих регистры сопроцессора в/из оперативной памяти. коварство fxrstor заключается в том, что она сохраняет указатель команд (FIP), указатель данных (Data Pointer) и опкод последней инструкции _только_ в том случае, если бит ES (exception summary) в статусном слове сопроцессора x87 установлен. при переключении контекста ось не обнуляет эти данные и они становятся доступны "посторонним" процессам: kernel.org/pub/linux/kernel/v2.6/ChangeLog-2.6.16.9.

  

[ **[[https://www.evilfingers.com/publications/research_RU/exploits-review-0x003.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/exploits-review-0x003|DOC**]]**]

=== exploit review (4й выпуск) ===

в конце августа 2006 года Daniel Bleichenbacher выступил с докладом на конференции криптоаналетиков, где показал, что при стечении определенных обстоятельств цифровая подпись RSA может быть подделана в прямом смысле слова — одной бумагой и карандашом (даже без использования кластера суперкомпьютеров). виною тому не сам алгоритм RSA, а ошибки его реализации. одной из таких реализаций оказался знаменитый проект OpenSSL, которой вплоть до версии 0.9.8c использовал RSA ключи с экспонентой 3, удаляющие padding-поля PKCS #1 до генерации хэш-суммы, которая позволяла удаленному атакующему подделать PKCS #1 сигнатуру, подписанную RSA-ключом и препятствующую корректной проверке различных цифровых сертификатов, использующих PKCS.

  

[ **[[https://www.evilfingers.com/publications/research_RU/exploits-review-0x004.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/exploits-review-0x004|DOC**]]**]

=== exploit review (5'й выпуск) ===

в службе общих файлов и принтеров обнаружилась ошибка, о которой рапортовали сразу два человека: Gerardo Richarte из Core Security Technologies и Matthew Amdur из VMWare, а так же исследовательские группы NS Focus и Fortinet. послав специальным образом сконструированный пакет, любой неавторизованный злоумышленник, может вызвать основательное разрушение внутренних структур драйвера SRV.SYS, что приводит либо к отказу в обслуживании, либо к захвату управления на уровне нулевого кольца, что дает неограниченную власть над компьютером, образец пакета-разрушителя содержится в exploit'е, написанным хакером cocoruder'ом (frankruder#hotmail.com) и опубликованным Senthil Velan'ом; подробности об уязвимости содержатся в бюллетене безопасности Microsoft, зарегистрированном под номером MS06-063: [[http://www.microsoft.com/technet/security/Bulletin/MS06-063.mspx|http://www.microsoft.com/technet/security/Bulletin/MS06-063.mspx]].

  

[ **[[https://www.evilfingers.com/publications/research_RU/exploits-review-0x005.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/exploits-review-0x005|DOC**]]**]

=== exploits review 9й выпуск ===

после предновогодней лавины дыр, хлынувшей сквозь весь спектр программных и аппаратных продуктов, сотрясающие их словно неожиданно проснувшейся вулкан, считавшийся давно потухшим, в январе-феврале наступило ленивое затишье. не считая очередной порции дыр в IE, Office и Mozille, никаких новых потрясений не последовало и счет открытых уязвимостей пошел на единицы, о самых интересных их которых мыщъх и собирается рассказать.

  

[ **[[https://www.evilfingers.com/publications/research_RU/exploits-review-0x009.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/exploits-review-0x009|DOC**]]**]

=== exploits review 10h выпуск ===

сегодняшний (юбилейный) обзор exploit'ов посвящен дефектам реализации видеоплееров. "живое общение" через Webcam, просмотр потокового сетевого видео, открытие avi-файлов, полученных из ненадежных источников — все это категорически небезопасно и чревато полным захватом управления над компьютером-жертвой.

  

[ **[[https://www.evilfingers.com/publications/research_RU/exploits-review-0x10.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/exploits-review-0x10|DOC**]]**]

=== exploits review 10h выпуск ===

сегодняшний (юбилейный) обзор exploit'ов посвящен дефектам реализации видеоплееров. "живое общение" через Webcam, просмотр потокового сетевого видео, открытие avi-файлов, полученных из ненадежных источников — все это категорически небезопасно и чревато полным захватом управления над компьютером-жертвой. не ожидали?! вот и мыщъх не ожидал, пока его нору едва на подломали!

  

[ **[[https://www.evilfingers.com/publications/research_RU/exploits-review-0x10-g.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/exploits-review-0x10-g|DOC**]]**]

=== exploits review 11h выпуск ===

висла захватывает рынок ударными темпами, а тут еще Server 2008 RC0 обозначился, позиционируемый как самая безопасная ось из всех существующих, что плохо согласуется с действительностью и количество ошибок, обнаруживаемых как в самой системе, так и входящих в ее состав прикладных компонентах, неуклонно растет, причем практически все ошибки — критические, то есть допускающие возможность удаленного захвата управления.

  

[ **[[https://www.evilfingers.com/publications/research_RU/exploits-review-0x11.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/exploits-review-0x11|DOC**]]**]

=== exploits review 12h выпуск ===

текущий обзор посвящен компании Abode, в продуктах которой обнаружено множество знаменательных дыр, допускающих возможность удаленного захвата управления, чем уже с успехом воспользовались черви, вызвав очередную волну эпидемии.

  

[ **[[https://www.evilfingers.com/publications/research_RU/exploits-review-0x12.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/exploits-review-0x12|DOC**]]**]

=== exploits review 13h выпуск ===

последний месяц собрал богатый урожай критических ошибок самого разного калибра, форм-фактора и типоразмера, поразивших в том числе и Linux с Open-BSD (чего уже давно не случалось!), но, как водятся, самые сочные дыры традиционно созревают в висле и хрюше, которым посвящен нас сегодняшний full disclose, приправленный тройкой более мелких уязвимостей.

  

[ **[[https://www.evilfingers.com/publications/research_RU/exploits-review-0x13.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/exploits-review-0x13|DOC**]]**]

=== exploits review 14h выпуск ===

новогоднюю ночь мыщъх провел наедине с самым близким ему существом — с монитором. ковырял разные оси. и наковырял! в одном только ядре висты шесть дыр, болтающихся там со времен NT. половина из которых — критические. и это не считая мелких брызг в прочих программных продуктах! под бой курантов мыщъх реализован принципиально новый тип атак на ring-3 стек (условно названный им stack-crossover attack). в общем, рождественские праздники оказались необычайно продуктивными и два последующих обзора exploit'ов решено посвятить описанию багов, собственноручно обнаруженных мыщъхем. демонстрационные exploit'ы прилагаются, а вот заплаток пока еще нет и неизвестно когда они вообще будут…

  

[ **[[https://www.evilfingers.com/publications/research_RU/exploits-review-0x14.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/exploits-review-0x14|DOC**]]**]

=== exploits review 15h выпуск ===

парад дыр в NT продолжается! как и в прошлом выпуске, мыщъх делится своими находками, впрочем, не претендуя, что это именно _его_ находки, но, во всяком случае, их явного описания в сети не нашлось, да и так ли важно, кто первый сказал "гав"?! главное, что это реальные дыры, работающие на всех современных операционных системах от Microsoft от W2K по Вислу включительно. да будет свет! тушите свечи! ведь настоящие хакеры дебажат в полной темноте и точат ништяки на глубине норы!

  

[ **[[https://www.evilfingers.com/publications/research_RU/exploits-review-0x15.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/exploits-review-0x15|DOC**]]**]

=== exploits review 16h выпуск ===

чем глубже в windows, тем больше дыр, поток которых прекращается не собирается, отрывая весьма соблазнительные перспективы для хакерских атак, как локальных, так и удаленных, к которым ни Microsoft, ни сторонние разработчики не готовы и которым придется конкретно напрячься, чтобы разрулить ситуацию, а мы к тому времени нароем новые дыры, так что никто без работы не останется.

  

[ **[[https://www.evilfingers.com/publications/research_RU/exploits-review-0x16.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/exploits-review-0x16|DOC**]]**]

=== exploits review 17h выпуск ===

после потока интересных дыр, обрушившегося на наши головы в конце зимы — начале весны этого года, наступило неожиданное затишье (перед бурей?!) и за последнее время не обнаружено ни одной сколь ни будь значительной уязвимости, которую было бы можно использовать для массированных хакерских атак, поэтому, приходится довольствоваться дичью поменьше, благо, таковая имеется, а вот заплатки — отсутствуют и в сети находится куча беззащитных рабочих станций и серверов.

  

[ **[[https://www.evilfingers.com/publications/research_RU/exploits-review-0x17.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/exploits-review-0x17|DOC**]]**]

=== exploits review 6й выпуск ===

урожай принято собирать по осени и собирать, действительно, есть что. никто не может сказать, что эта осень не оправдала своих надежд: очередная порция дыр в ms windows, ms office, IE 7, mozill'e, OpenSSL (затронувший в том числе и марштуизаторы CISCO)… один баг интереснее другого, мыщъх разрывался на части, желая рассказать обо всем и вот… отобрал самые интересные дыры на его взгляд.

  

[ **[[https://www.evilfingers.com/publications/research_RU/exploits-reviews-0x006.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/exploits-reviews-0x006|DOC**]]**]

=== "мнение экспертов" о Desktop Unix ===

"мнение экспертов" о Desktop Unix.

  

[ **[[https://www.evilfingers.com/publications/research_RU/exp-ops.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/exp-ops|DOC**]]**]

=== мнение экспертов/безопасность сети ===

мнение экспертов/безопасность сети/

  

[ **[[https://www.evilfingers.com/publications/research_RU/exp-sec.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/exp-sec|DOC**]]**]

=== бороться или победить (над спамом), мнение эксперта, мыщъх'а (серого, пещерного) ===

бороться или победить (над спамом), мнение эксперта, мыщъх'а (серого, пещерного).

  

[ **[[https://www.evilfingers.com/publications/research_RU/exp-spam.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/exp-spam|DOC**]]**]

=== война миров: ext2fs и ext3fs взгляд под необычным углом ===

о преимуществах и недостатках файловой системы ext3fs написано много и по общему мнению она обеспечивает лучшую надежность за счет снижения производительности, однако, далеко не всегда ext3fs отстает от ext2fs и в некоторых случаях она даже ее обгоняет, причем значительно.

  

[ **[[https://www.evilfingers.com/publications/research_RU/ext2fs-ext3fs.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/ext2fs-ext3fs|DOC**]]**]

=== hex-ray – декомпилятор нового поколения ===

начинающие реверсеры, еще не вкурившие в асм, постоянно спрашивают на хакерских формах: где бы им раздобыть декомпилятор для си или паскаля? декомпиляторов-то много, но вот результат… без дизассемблера ни один хвост не разобраться, даже если дунет. и вот, наконец — свершилось! Ильфак (автор легендарного дизассемблера IDA Pro) выпустил декомпилятор нового поколения HexRays, делающий то, что другим не под силу. мир вздрогнул от восторга (реклама вообще обещала чудо), порождая сейсмические волны впечатлений: от оргазма, до полного отвращения. истина же, как водится, где-то посередине и представляет интерес обозначить эту середину, рассмотрев слабые и сильные стороны декомпилятора, а так же области его применения.

  

[ **[[https://www.evilfingers.com/publications/research_RU/hex-rays.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/hex-rays|DOC**]]**]

=== прячем трафик от админа ===

до сих пор рассматриваемые нами способы маскировки трафика сводились к сокрытию сетевых соединений, но на физическом уровне весь "левый" трафик элементарно обнаруживался снифферами и прочими защитными средствами, вот хакеры и напряглись, решив эту проблему путем создания секретных пассивных каналов, передающих информацию без генерации какого-либо трафика вообще. исходные тексты "движков" выложены в сеть и все, что нам нужно — это разобраться как прикрутить их к нашему кей-логгеру или удаленному шеллу, чем мы сейчас и займемся, но сначала покурим.

  

[ **[[https://www.evilfingers.com/publications/research_RU/hidden-traffic.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/hidden-traffic|DOC**]]**]

=== прячем файлы и папки ===

заныкать гейму от начальства и порнушку от жены/детей — весьма потребное дело. сам мыщъх велел! в сети существует множество утилит, специально предназначенных для этих целей (как коммерческих, так и бесплатных), но качество маскировки и удобство пользования в большинстве случаев оставляют желать лучшего, однако, при желании "шапку невидимку" можно смастерить и самостоятельно! штатные средства операционной системы таят в себе множество удивительных возможностей, о которых догадываются далеко не все пользователи.

  

[ **[[https://www.evilfingers.com/publications/research_RU/hide-fd.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/hide-fd|DOC**]]**]

=== большие проблемы маленьких серверов ===

домашние ftp/http сервера сейчас воздвигают многие хакеры, совершенно не представляя во что они ввязываются. все это безумно затягивает и не отпускает назад, но проблемы остаются проблемами, они растут и накапливаются словно снежный ком, с которым потом уже не справиться, если только заранее не продумать концепцию сервера вплоть до мелочей, исправление которых на ранних стадиях проходит довольно безболезненно, но вот потом… мыщъх делится своим многолетним опытом воздвижения, администрирования и эксплуатации малых ftp/web/smtp/pop3-серверов.

  

[ **[[https://www.evilfingers.com/publications/research_RU/home-ftp.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/home-ftp|DOC**]]**]

=== хакеры любят мед ===

последнее время появляются все более и более изощренные системы борьбы с хакерами, одним из которых является honeypot – своеобразный капан для атакующих. сколько молодых парней отправились за решетку с его помощью! даже в нашей, традиционно лояльной к хакерам стране, имеется несколько случаев условных осуждений. если так пойдет и дальше, то хакерствовать станет просто невозможно, если, конечно, не задавить идею honeypot'ов в зародыше, доказав ее неэффективность.

  

[ **[[https://www.evilfingers.com/publications/research_RU/honeypot.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/honeypot|DOC**]]**]

=== hot-patch ядер Linux/BSD/NT ===

наложение заплаток на ядро обычно требует перезагрузки системы, что не всегда приемлемо (особенно, в отношении серверов), однако, [при наличии хорошей травы] ядро можно залатать и в "живую". аналогичным образом поступают и защитные системы, rootkit'ам, и прочим программы, модифицирующие ядро на лету, но! практически все они делают это неправильно! ядро нужно хачить совсем не так! мыщъх укажет верный путь, пролегающий сквозь извилистый серпантин технических проблем и подводных камней, особенно характерных для многопроцессорных систем.

  

[ **[[https://www.evilfingers.com/publications/research_RU/hot-patch.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/hot-patch|DOC**]]**]

=== на чем писать, как писать, с кем писать ===

современные программные комплексы уже не программируются на одном языке и представляют конгломерат гибридного типа. правильный выбор технологии программирования очень важен. без преувеличения, он определяет судьбу продукта, сроки реализации, трудоемкость разработки, расширяемость и т. д. оставьте священные войны "Паскаль против Си" или "Си против Ассемблера". перед нами стоит вполне конкретная задача: создать конкурентоспособный продукт, нацеленный на рыночный успех. программирование "для души" здесь не рассматривается, поскольку искусство и маркетинг несовместимы.

  

[ **[[https://www.evilfingers.com/publications/research_RU/howto.prg.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/howto.prg|DOC**]]**]

=== скрытый потенциал ручных сборок ===

UNIX-программистам свойственно не зажимать исходники и подавляющее большинство программ распространяются именно так, однако, народ тяготеет к готовым бинарным сборкам, зачастую даже не догадываясь каких возможностей он оказывается лишен! многие пользователи перекомпилируют программы, но немногие делают это правильно! ручная сборка — достаточно сложный, взаимно противоречивый и неочевидный процесс, который мы сейчас попробуем заточить.

  

[ **[[https://www.evilfingers.com/publications/research_RU/howtomake.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/howtomake|DOC**]]**]

=== аппаратные антивирусы – серые кардиналы магистральных каналов ===

активность червей, едва не заваливших Интернет, за последние несколько лет резко сошла на нет, вольному хакерству пришел конец — провайдеры развернули распределенную систему обнаружения вторжения с датчиками, сенсорами и адаптивными сигнатурными базами. теперь все больше и больше атак захлебываются не успев даже начаться. условия игры изменились, да и не игра это уже а битва за выживание! что ж! мы принимаем вызов!

  

[ **[[https://www.evilfingers.com/publications/research_RU/HW-AV.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/HW-AV|DOC**]]**]

=== аппаратные платы шифрования — находка для шпиона ===

надежные криптосистемы — важнейшее звено любого защитного комплекса. ассортимент предлагаемых решений достаточно широк и простилается от программных пакетов до плат аппаратного шифрования, которые в глазах неспециалистов кажутся намного более стойкими уже хотя бы потому, что они "аппаратные". однако, не все "железки" одинаково полезны, более того, далеко не все "железки" полностью состоят из железа и многие из них имеют ту же самую стойкость, что и программные решения.

  

[ **[[https://www.evilfingers.com/publications/research_RU/hw-kaleidoscope-crypt.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/hw-kaleidoscope-crypt|DOC**]]**]

=== электронные ключи — камень на шее ===

электронные ключи (в просторечии именуемые "хаспами") пользуются огромной популярностью у разработчиков программного обеспечения и яростной ненавистью у конечных пользователей и не за их стойкость ко взлому (все защищенные "хаспами" пакеты давно поломаны), а за проблемы, которые они создают. есть ли достойная альтернатива "железкам", устраивающая всех — как по одну строну прилавка, так и по другую? попробуем ответить на этот вопрос!

  

[ **[[https://www.evilfingers.com/publications/research_RU/hw-kaleidoscope-hasp.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/hw-kaleidoscope-hasp|DOC**]]**]

=== HDD + Ethernet = файловый сервер ===

внешние жесткие диски с поддержкой Ethernet получают все больше и больше распространение, зачастую влюбляя в себя с первого же взгляда. трудно называть другую такую же вещь — дешевую, удобную и просто приятную. однако, когда медовый месяц заканчивается и на губах появляется привкус полыни, администраторы начинают судорожно искать пути решения проблем о существовании которых они раньше и не подозревали…

  

[ **[[https://www.evilfingers.com/publications/research_RU/hw-kaleidoscope-hdd.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/hw-kaleidoscope-hdd|DOC**]]**]

=== USB FLASH плюс аппаратное шифрование — взгляд очевидца ===

занимаясь восстановлением данных c различных накопителей, автор долгое время отказывался ковырять зашифрованные FLASH-накопители с утерянными паролями, считая это пустой тратой времени, пока однажды с удивлением не обнаружил, что во многих случаях поддержка аппаратного шифрования, заявленная производителем, представляет собой сплошную фикцию! вот так чертик из табакерки!

  

[ **[[https://www.evilfingers.com/publications/research_RU/hw-kaleidoscope-usb.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/hw-kaleidoscope-usb|DOC**]]**]

=== аппаратные средства удаленного администрирования ===

широко используемые в настоящее время программные средства удаленного администрирования годятся лишь для "подсобных" работ по хозяйству. ни залезть в настройки BIOS'а, ни переустановить операционную систему они не в состоянии! для этого нужен физический доступ к серверу, а до него еще добраться нужно! а вот если докупить немного железа, то никуда добираться не потребуется! систем аппаратного администрирования сегодня развелось как грязи, но мыщъх поможет в них сориентироваться!

  

[ **[[https://www.evilfingers.com/publications/research_RU/hw-remote.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/hw-remote|DOC**]]**]

=== аппаратные и программные комплексы на арене безопасности ===

на рынке присутствует множество защитных механизмов всех мастей: брандмауэров, систем обнаружения вторжений, honey-pot'ов и т. д. в грубом приближении их можно разделить на аппаратные и программные решения, между которыми развернулась нешуточная борьба в умах пользователей, внезапно оказавшихся в шкуре буриданового осла, стоящего на равном расстоянии между двух одинаковых кучек сена. но философские концепции нас волнуют меньше всего и гораздо интереснее сопоставить надежность, расширяемость, совокупную стоимость владения и другие потребительские критерии, без указания конкретных торговых марок, чтобы автора не обвинили в PR'е и рекламе.

  

[ **[[https://www.evilfingers.com/publications/research_RU/hw-vs-sft.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/hw-vs-sft|DOC**]]**]

=== гипноз под отладкой ===

практически все слышали о гипнозе: от газетных историй о зомбировании до многотомных самоучителей, недостатка в которых испытывать не приходится, но попытки применить полученные знания на практике конкретно обламываются, факты из разных источников ни разу не стыкуются друг с другом и чем настойчивее пытаешься разобраться, тем все больше убеждаешься, что… среднестатистический психолог разбирается в гипнозе ничуть не больше, чем свинья в апельсинах. но мы-то с вами хакеры, а не философы! применив к гипнозу систематический подход, мы не только выясним чем же он является на самом деле, но с огромным удивлением обнаружим, что попадаем под его влияние чуть ли не по несколько раз на дню!

  

[ **[[https://www.evilfingers.com/publications/research_RU/hypnosis-dbg.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/hypnosis-dbg|DOC**]]**]

=== секреты ассемблирования дизассемблерных листингов ===

дизассемблер IDA Pro (как и любой другой) умеет генерировать ассемблерные листинги, однако, их непосредственная трансляция невозможна и прежде чем ассемблер проглотит наживку, приходится совершить немало телодвижений, о самых значимых из которых мыщъх и рассказывает в этой статье.

  

[ **[[https://www.evilfingers.com/publications/research_RU/ida2asm.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/ida2asm|DOC**]]**]

=== obj файлы на топчане или линковка дизассемблерных файлов ===

в прошлой статье этого цикла мы подошли к тому, что ассемблировали дизассемблерный листинг, поборов все ошибки транслятора и получив в итоге… неработоспособный obj файл, вызывающий у ликера хроническое недержание error'ов. сегодня мы продолжим заниматься извращенным сексом (кама-сутра отдыхает), обогащаясь новыми знаниями и пополняя свой словарный запас матерных слов.

  

[ **[[https://www.evilfingers.com/publications/research_RU/ida2asm-link.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/ida2asm-link|DOC**]]**]

=== IDA-Pro 5.3 – новое оружие в руках хакера возможности, которых мы так давно ждали ===

свершилось! IDA-Pro 5.3 уже в продаже (и даже Осле)! ослепительный фейерверк новых фич, срывающих крышу и расширяющих границы хакерского создания до пределов нирваны. полностью переписанный отладчик, сотни исправленных ошибок, дефектов и глюков старой версии, более полная экстракция отладочной инфы из pdb файлов, модули для iPhone, Symbian OS, Linux'а и куча-куча всего того, о чем прежде оставалось всего лишь мечтать.

  

[ **[[https://www.evilfingers.com/publications/research_RU/IDAPro-53.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/IDAPro-53|DOC**]]**]

=== идеальный ПК для кодера ===

что такое идеальный ПК? это бесконечная тактовая частота, неограниченная оперативная память и чудовищно надежный жесткий диск простилающийся до самых границ вселенной. вряд ли такой компьютер будет когда-нибудь создан на практике, во всяком случае в ближайшие несколько лет нам придется оперировать с конечными числами, однако, выбрать достойную конфигурацию можно уже сейчас.

  

[ **[[https://www.evilfingers.com/publications/research_RU/idealpc.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/idealpc|DOC**]]**]

=== обход IDS ===

за несколько прошедших лет системы обнаружения вторжений выросли из ясельного возраста и уже не бьют хакеров совочком по голове, а мочат их вовсю, вцепляясь мертвой хваткой, словно трехглавый пес цербер. количество IDS все растет и уже шагу нельзя ступить, чтобы не вляпаться в какой-нибудь кал, и если мы не научимся летать ниже радаров, нас просто превратят в shit. как и любая другая сущность IDS имеет свои слабости, знание которых позволяет ее обходить.

  

[ **[[https://www.evilfingers.com/publications/research_RU/IDS-down.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/IDS-down|DOC**]]**]

=== секс с IFRAME или как размножаются черви в Internet Explorer'e ===

старый год уходит, а дыры в программах остаются. количество незалатанных машин исчисляется миллионами — о лучшем подарке к новому годы хакеры не могли и мечтать (а настоящие хакеры справляют новый год не в обнимку с бутылкой шампанского, а в компании монитора). недавно в IE было найдено очередное переполнение буфера — на этот раз в теге IFRAME и уже появился эксплоит. не совсем работающий, но уже растиражированный по всей сети. как отремонтировать его? как переписать shell-код? как защитить свой компьютер от атак?

  

[ **[[https://www.evilfingers.com/publications/research_RU/IFRAME_exp.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/IFRAME_exp|DOC**]]**]

=== обмани себя сам — иллюзии в океане безумия ===

мир, который мы видим, и мир, существующий на самом деле, это две большие разницы. обманы зрения встречаются на каждом шагу, искажая наше восприятие окружающей действительности, которая, согласно Дзен-учению, представляет собой одну большую иллюзию, заключенную в черепной коробке нашего сознания, на пределами которой никакого мира вообще нет. а что есть? только умелые манипуляции, взятые на вооружение художниками, архитекторами, модельерами, не говоря уже о рекламе…

  

[ **[[https://www.evilfingers.com/publications/research_RU/illusions.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/illusions|DOC**]]**]

=== возможные невозможные фигуры: ломаем черепную коробку психологии восприятия ===

сегодняшний выпуск "писхо" посвящен невозможным фигурам, которые легко нарисовать, но которые срывают крышу при попытке представить какой физической реальности они могут соответствовать, причем срывают настолько конкретно, что назад она (крыша) уже не возвращается ;) это настоящий ключ к подсознанию. путь в иной мир, вдохновляющий многих художников на творческий прорыв за пределы пространства. посмотрев работы Эшера понимаешь, что курить смысла нет — ибо срывать уже нечего.

  

[ **[[https://www.evilfingers.com/publications/research_RU/impossible-possible.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/impossible-possible|DOC**]]**]

=== возможные невозможные фигуры: ломаем черепную коробку психологии восприятия [lite] ===

сегодняшний выпуск "писхо" посвящен невозможным фигурам, которые легко нарисовать, но которые срывают крышу при попытке представить какой физической реальности они могут соответствовать, причем срывают настолько конкретно, что назад она (крыша) уже не возвращается ;) это настоящий ключ к подсознанию. путь в иной мир, вдохновляющий многих художников на творческий прорыв за пределы пространства-времени. посмотрев работы Эшера понимаешь, что курить смысла нет — ибо срывать уже нечего.

  

[ **[[https://www.evilfingers.com/publications/research_RU/impossible-possible.lite.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/impossible-possible.lite|DOC**]]**]

=== IPv6 –демократия или диктатура? ===

активное вторжение протокола IPv6 в нашу жизнь продолжается: все больше и больше операционных систем, маршрутизаторов, разработчиков серверов и прочего программного обеспечения рапортует о его поддержке, вызывая у пользователей естественное недоумение: что это такое, зачем оно вообще нам нужно и как обстоят дела с (не)безопасностью? попробуем ответить на эти вопросы без лишней воды, затронув не только давно протоптанные темы, но и заглянув в малоизвестные заповедные уголки, куда еще не ступала нога человека (но мыщъх там пасется уже давно).

  

[ **[[https://www.evilfingers.com/publications/research_RU/IPv6.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/IPv6|DOC**]]**]

=== java под атакой ===

долгое время java считалась _абсолютно_ безопасной, однако, лавинообразный рост открывшихся уязвимостей доказал обратное, впрочем, ничуть не помешав jav'e продолжить завоевание рынка, в результате чего сейчас наблюдается яростный шквал хакерских атак, часть которых отражается путем установки последних обновлений, часть же не может быть отражена в принципе, поскольку носит концептуальный характер, требующий радикального пересмотра архитектуры Java-машины, что быстро не делается. давайте попробуем познакомится со всеми этими атаками поближе.

  

[ **[[https://www.evilfingers.com/publications/research_RU/java-attack.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/java-attack|DOC**]]**]

=== основы взлома мобильных игр ===

надоело платить за мобильные игры? заколебала череда бесконечных смертей? хочется переделать спрайты/тексты/заставку под свой вкус? нет ничего проще!!! мобильные игры весьма компактны и потому просты для взлома и анализа. надругаться над ними сможет даже начинающий хакер, а эта статья поможет ему сделать первые шаги, после которых он будет оттачивать хакерское мастерство уже самостоятельно.

  

[ **[[https://www.evilfingers.com/publications/research_RU/java-hack.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/java-hack|DOC**]]**]

=== java на мобильных телефонах — атаки и угрозы ===

многие компании активно используют сотовые телефоны в служебных целях, доверяя им не только связь, но и конфиденциальную информацию, совершенно не задумываясь о возможных последствиях. практически все модели телефонов содержат серьезные дефекты в системе безопасности и количество хакерских атак на них неуклонно растет. наибольшую угрозу представляют java-мидлеты скачиваемые пользователями из различных ненадежных источников в полной уверенности, что "безопасная" java не позволит им сделать ничего дурного. настало время развеять это заблуждение!

  

[ **[[https://www.evilfingers.com/publications/research_RU/java-mobile.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/java-mobile|DOC**]]**]

=== java на smart-картах ===

java проникла и на smart-карты, используемые во многих организациях в качестве электронных "пропусков" и ключей доступа к секретным объектам, что предъявляет чрезвычайно высокие требования к их безопасности, но требования эти, увы, не соблюдаются, а мы еще удивляется почему самолеты падают!

  

[ **[[https://www.evilfingers.com/publications/research_RU/java-smart.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/java-smart|DOC**]]**]

=== призраки ядра или модули-невидимки ===

потребность в создании "невидимых" модулей ядра растет с каждым днем — антивирусная индустрия набирает обороты, на рынке присутствует множество virginity-checker'ов, проверяющих систему на предмет дефлорации, в хакерских (и даже совсем не хакерских!) журналах опубликована масса статей, рассказывающих как прятать модули от штатных средств ОС, в результате чего старые трюки палятся еще на излете и уже не работают. требуется что-то принципиально новое! главным образом речь пойдет про LINUX, но предложенные приемы с ничуть не меньшим успехом можно использовать в NT и BSD.

  

[ **[[https://www.evilfingers.com/publications/research_RU/LKM-hide.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/LKM-hide|DOC**]]**]

=== контрразведка с soft-ice в руках ===

антивирусы (даже со всеми апдейтами) далеко не всегда распознают малварь и опытные хакеры доверяют только своим собственному хвосту, отладчику soft-ice и другому низкоуровневому инструментарию, позволяющему пробурить нору до самого ядра и разоблачить зловредные программы, где бы они ни скрывались!

  

[ **[[https://www.evilfingers.com/publications/research_RU/malware-discover.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/malware-discover|DOC**]]**]

=== Mandriva One Spring 2007 — отдави пингвину лапы ===

Mandriva – это рыба. типа минтая. мороженного. или отмороженного? а, неважно! главное – это разновидность пингвина, которая рвется на российский рынок все чаще и чаще встречаясь на ноутбуках и десктопах, в связи с чем возникает вопрос — что это за птица такая и стоит ли ее выбирать? мыщъхЮ проигравшись с системой несколько дней (на самом деле, с учетом ковыряния в драйверах — гораздо больше), высказывает свое ХО по этой проблеме.

  

[ **[[https://www.evilfingers.com/publications/research_RU/mandriva-one.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/mandriva-one|DOC**]]**]

=== выбор правильной материнской платы и жестких дисков для сервера ===

как среди тысяч материнских плат и сотен наименований жестких дисков выбрать модели, наилучшим образом подходящие для сервера? при достаточно скудном бюджете? "промышленные" сервера от крупных производителей — не предлагать, они просто не стоят тех денег, которые за них просят и при достаточном опыте общения с железом, надежный сервер можно собрать и самостоятельно. вот об этом самом опыте (удачных находках, досадных ошибках и неожиданных разочарованиях) мыщъх и собирается рассказать.

  

[ **[[https://www.evilfingers.com/publications/research_RU/mb4srv.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/mb4srv|DOC**]]**]

=== ядра, процессоры, кластеры и все-все-все ===

спектр вычислительных машин, представленных на рынке, довольно широк и простилается от многоядерных процессоров до кластеров (причем кластеры не образуют монолитный блок, а делятся на типы и подтипы). большинство многопроцессорных систем предназначено для решения узкого круга задач и разница между ними не только количественна (стоимость/производительность), но и качественная (отказоустойчивость, распределенность в пространстве). многопроцессорных систем общего назначения не существует, даже если они и позиционируются производителем в качестве таковых. не верьте! производители заблуждаются. факты и только факты!

  

[ **[[https://www.evilfingers.com/publications/research_RU/mcpu-vs-cluster.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/mcpu-vs-cluster|DOC**]]**]

=== восстановление данных своими руками ===

резервная копия – последний рубеж обороны против беспощадной энтропии, но иногда случается так, что гибнет и она. существует множество фирм, занимающихся восстановлением данных за деньги, но далеко не всегда они их восстанавливают. и тогда…

  

[ **[[https://www.evilfingers.com/publications/research_RU/media-rec.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/media-rec|DOC**]]**]

=== охота и рыбалка в динамической памяти ===

памяти свойственно утекать, образовывая мощные осадочные пласты в адресном пространстве, которые уже никогда-никогда не вернулся обратно в общий пул, а потому сколько бы виртуальной памяти у нас ни было — рано или поздно она таки заканчивается, что особенно актуально для серверов и рабочих станций, пилотируемых в круглосуточном режиме без ежедневных перезагрузок. и хотя разработчики периодически исправляют ошибки, реальной помощь от них ждать не приходится и мы остаемся со своими проблемам один на один…

  

[ **[[https://www.evilfingers.com/publications/research_RU/mem-leacks-RT.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/mem-leacks-RT|DOC**]]**]

=== параллельные миры: война на выживание ===

вторжение в адресное пространство чужого процесса — вполне типичная задача, без которой не обходятся ни черви, ни вирусы, ни шпионы, ни распаковщики, ни… даже легальные программы! возможных решений — много, а способов противостояния еще больше. чтобы не завязнуть в этом болоте мыщхъ решил обобщить весь свой хвостовой опыт в единой статье, относящейся главным образом к LIUNUX'у и различным кланам BSD.

  

[ **[[https://www.evilfingers.com/publications/research_RU/memory-war-II.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/memory-war-II|DOC**]]**]

=== тайные рычаги подсознания методы психовизуальной атаки ===

этой статьей мы открываем новую рубрику. хватит хакать программы! давайте хакать (под)сознание или следить, чтобы не захачили наше. мыщъх не будет гнать волну, мыщъх раскроет реальные технологии с кучей примеров, чтобы каждый мог сам проверить работают они или нет. а проверять тут есть что. от "дизассемблирования" рекламных роликов и репортажных фотографий, до чисто щенячьих радостей: как находить "болевые" точки чужого сознания, как реально затащить красотку в постель независимо от ваших внешних данных, как подмять под себя начальника, как расширить сознание до границ вселенной и постичь вещи совершенно непостижимые для окружающих и все это, повторяюсь, на конкретных примерах! и, между, прочим, без грибов!

  

[ **[[https://www.evilfingers.com/publications/research_RU/mind-ctrl-01-base.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/mind-ctrl-01-base|DOC**]]**]

=== тайные рычаги подсознания методы психовизуальной атаки [Lite] ===

этой статьей мы открываем новую рубрику. хватит хакать программы! давайте хакать (под)сознание или следить, чтобы не захачили наше. мыщъх не гонит волну (типа цунами), мыщъх раскрывает реальные технологии манипуляций с кучей примеров, чтобы каждый мог проверить работают они или нет. а проверять тут есть что. от "дизассемблирования" рекламных роликов и репортажной съемки, до чисто щенячьих радостей: как затащить красотку в постель, как подмять под себя начальника, как расширить сознание до границ вселенной и постичь вещи, совершенно непостижимые для окружающих. и все это, повторяюсь, на конкретных примерах! и, между, прочим, без грибов!

  

[ **[[https://www.evilfingers.com/publications/research_RU/mind-ctrl-01-base-lite.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/mind-ctrl-01-base-lite|DOC**]]**]

=== азартные игры (под)сознания ===

мир, который мы видим (обоняем, слышим, осязаем) не является тем миром, которым он является. софистка? а вот и нет! мир, как категория сознания, и мир, как физическая реальность, ‑ это две разные сущности, разделенные пропастью подсознания. обрабатывая данные, зарегистрированные органами чувств, наш мозг выбирает простейший способ интерпретации, основанный на предыдущем опыте, но отнюдь не на реальной картине дел. мы уже касались этой темы в статье "возможный невозможный мир", а теперь разовьем ее во всех направлениях, рассказав о практиках, позволяющих расширять сознание, видеть вещи, слышать звуки, которых не видят и не слышат другие. нет, это не шизофрения и даже не Дзен, скорее йога, а точнее лишь крошечный островок в океане подсознания, что плещется внутри нас.

  

[ **[[https://www.evilfingers.com/publications/research_RU/mind-hazard.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/mind-hazard|DOC**]]**]

=== поток сознания II ===

…какое-то оживление наблюдается… мыщхъ делает массу дел, но ничего толком не успевает, а времени _совсем_ нет! то есть абсолютно! я как бы откладываю жизнь "на потом", между тем вот она – жизнь, и никакой другой – "настоящей" – жизни не будет. трудно научиться жить завтра, но еще труднее жить "сейчас".

  

[ **[[https://www.evilfingers.com/publications/research_RU/mind-stream.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/mind-stream|DOC**]]**]

=== поток создания 2 + n ===

….был день и в этот день мыщъх заглянул на самое дно своего одиночества, точнее, выглянул оттуда, высунулся из колодца и на душе стало так хреново, что сразу же захотелось назад. а начиналось все так…

  

[ **[[https://www.evilfingers.com/publications/research_RU/mind-stream-2.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/mind-stream-2|DOC**]]**]

=== поток сознания 3 ===

….проснулся около полудня, заснув вчера уже после 4х часов. ну полуднем это было можно назвать лишь в большой натяжкой. в моей норе царила полутьма, с окон давило серое небо, слышалось как дует порывистый ветер. вставать совершенно не хотелось, но впереди была куча дел, так что пришлось поднапрячь свой хвост (зато уже начинаю постепенно смещаться к своему обычному нормальному ночному графику), но делам осуществиться не удалось. практически сразу же отрубили свет. сейчас сижу на упсе ("сижу" — в переносном смысле). упса с честью выдержала 3 с небольшим часа, оставив еще 39% энергии на борту, а мыщъх тем временем лихорадочно шарил по сети в поисках чего бы того хорошего зажевать. узнал много нового, а нарыл еще больше! нервничал, конечно!

  

[ **[[https://www.evilfingers.com/publications/research_RU/mind-stream-3.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/mind-stream-3|DOC**]]**]

=== рецепты недетского похудания для дистрибутивов или секрет обрезания клитора ;) ===

жилплощадь новейших жестких дисков исчисляется тысячами гектар и заполнить такой объем одним лишь программным кодом нереально. музыка, видео — вот основной источник расходов! однако, достаточно многие пользователи до сих пор ютятся на десятке-другом гектар, что особенно актуально для ноутбуков, модернизация которых существенно затруднена, а древние (но все еще работающие) материнские платы винчестеров большого объема в упор не "видят", а поэтому, приходится обходится минимумом программ, выкидывая из них все лишнее. а лишнего в них много. рядовой дистрибутив ужимается в три и более раз! главное знать, что выкидывать, а что лучше оставить про запас!

  

[ **[[https://www.evilfingers.com/publications/research_RU/mini-distr.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/mini-distr|DOC**]]**]

=== противодействие дизассемблеру во сне и наяву или семь советов начинающему программисту ===

чтобы выжить в этом агрессивном мире и защитить свою программу от взлома, нужно сразить отладчик и дизассемблер наповал. А как это сделать? Вот об этом мы и поговорим!

  

[ **[[https://www.evilfingers.com/publications/research_RU/mkdsmhdr.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/mkdsmhdr|DOC**]]**]

=== фундаментальные проблемы многопроцессорных систем ===

многопроцессорные системы долгое время были уделом суперкомпьютеров, мощных серверов и высокопроизводительных рабочих станций. но вот они хлынули в массы, чего массы никак не ожидали. никто же ведь не предупреждал, что помимо достоинств многопроцессорным системам присущи еще и недостатки, многие из которых носят фундаментальный характер, вынуждающий инженеров искать компромиссные решения, за которые приходится расплачиваться конечным потребителям. увы, реальность такова, что многопроцессорная система это действительно очень сложная вещь (намного сложнее чем пылесос) и чтобы не попасться на удочку рекламной пропаганды необходимо обладать определенными знаниями, хотя бы на базовом уровне.

  

[ **[[https://www.evilfingers.com/publications/research_RU/mpcu-fundamental.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/mpcu-fundamental|DOC**]]**]

=== mplayer – real time strategy: битва за улучшения видеоряда ===

mplayer – популярный кросс платформенный видеоплеер с огромным количеством функций и поистине безграничными возможностями по исправлению дефектов мастеринга DVD (и кривых рипов, выкаченных из сети), которые до этого приходилось преодолевать off-line перекодировкой в редакторах нелинейного видео-монтажа. час фиксим баги, четыре часа перекодируем, после чего часа два смотрим фильм (если он стоит того). а mplayer позволяет делать это в режиме реальном времени без отрыва рук от производства, тьфу, от клавиатуры.

  

[ **[[https://www.evilfingers.com/publications/research_RU/mplayer-unix.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/mplayer-unix|DOC**]]**]

=== по следам MS IE OBJECT tag exploit'а ===

бурный поток времени ### мутная река времени приносит новые дыры, за ними следуют exploit'ы, постепенно оседающие в желудках червей и rootkit'ов. от дыры до ее практической реализации проходит долгий путь, при этом многие технические подробности остаются за кадром и начинающие хакеры никак не могут понять как проектируются exploit'ы. хотите заглянуть в полумрак хакерской кухни, узнав как хакеры делают это?

  

[ **[[https://www.evilfingers.com/publications/research_RU/mshtml-exploit.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/mshtml-exploit|DOC**]]**]

=== Microsoft как армагедон XXI века ===

вред, наносимый монополизмом Microsoft, огромен и затрагивает он не только IT-индустрию, но и все общество в целом. попытки разрубить эту гиду мечом Фемиды закончились полным провалом, но… помимо законов (которые, все равно никто не соблюдает), в этом мире существуют и другие силы, гораздо более могущественные и способные смять Microsoft словно карточный домик. весь вопрос в том _как_ это сделать и _нужно_ ли это делать вообще?

  

[ **[[https://www.evilfingers.com/publications/research_RU/ms-mono.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/ms-mono|DOC**]]**]

=== MSR-регистры на службе хакера ===

популярные дебагеры (soft-ice, syser, olly) используют базовые отладочные возможности, появившиеся еще в 80386 и совершенно игнорируют тот факт, что процессоры изрядно подросли и обросли целым комплексом отладочных механизмов термоядерного типа, реализованных в виде нестандартных расширений, управляемых посредством специальных MSR-регистров с помощью которых мы можем перехватывать системные вызовы, трассировать ветвления в реальном времени, дампить содержимое регистров общего назначения на каждом такте и делать еще множество других удивительных вещей, существенно упрощающих взлом защищенных программ.

  

[ **[[https://www.evilfingers.com/publications/research_RU/MSR-hacker.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/MSR-hacker|DOC**]]**]

=== virustotal своим руками, лапами и хвостом ===

онлайновая антивирусная служба [[http://www.virustotal.com|www.virustotal.com]] завоевала бешенную популярность. многие хотят прикрутить к своему сайту что-то похожее, но не знают как. зачем это нужно? во-первых, чтобы поднять посещаемость, а, во-вторых, пополнить собственную коллекцию вирусов, червей и прочей малвари свежими экземплярами. [[http://www.virustotal.com|www.virustotal.com]] не раскрывает своих секретов, но мыщъх уже давно разобрал его по винтикам и теперь работает над улучшенной реализаций.

  

[ **[[https://www.evilfingers.com/publications/research_RU/myvirustotal.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/myvirustotal|DOC**]]**]

=== найти и уничтожить — методы обнаружения (ре)трансляторов сетевых адресов ===

внедрение безлимитных тарифов привело к появлению целой армии "партизанок", скрывающихся за NAT/Proxy-серверами и злостно уклоняющимися от исполнения своего воинского долга, тьфу, от абонементной платы. за одним IP-адресом могут прятаться десятки "уклоненцев" и, чтобы их прищемить, администратор должен выявить присутствие трансляторов сетевых адресов и/или proxy-серверов на клиентских узлах, используя доступное программное обеспечение, что всегда под рукой.

  

[ **[[https://www.evilfingers.com/publications/research_RU/NAT-discover.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/NAT-discover|DOC**]]**]

=== NDR-атаки проблемы и решения ===

несмотря на все усилия и многомиллионные вложения в защитные средства, спаммеры уходить со сцены не собираются, разрабатывая новые виды изощренных атак, жертвой которых может стать практически каждый и если вовремя не контратаковать, полезные сообщения буквально утонут в лавине непрошеной рекламной корреспонденции. эта статья главным образом ориентирована на простых пользователей и владельцев домашних серверов, за ошибки конфигурации которых приходится расплачиваться не только разными неудобствами, но еще и трафиком, а трафик (особенно исходящий) — обычно денег стоит.

  

[ **[[https://www.evilfingers.com/publications/research_RU/NDR-attack.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/NDR-attack|DOC**]]**]

=== сниффинг в условиях приближенных к боевым ===

сниффер для хакера — это как катана для самурая. вот только самураев нынче много, а достойного оружия — мало. плохо, когда сниффер отказывается работать, но еще хуже, когда он работает неправильно, например, в упор не видит трафик или некорректно его декодирует, теряя пароли и другую жизненно важную информацию…

  

[ **[[https://www.evilfingers.com/publications/research_RU/netrf-sniff.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/netrf-sniff|DOC**]]**]

=== кража со взломом или "выдирание" программ без дистрибутива ===

хочется перенести программу на другой компьютер, но дистрибутив утерян или не обозначен, а если даже и обозначен — жаль терять свои настройки. знакомая ситуация, не правда ли? существует множество утилит "клонирования" программ, но все они требуют обязательного наличия инсталлятора. а у нас его нет. зато есть лапы, усы, голова и хвост. головой мы будем думать, хвостом — шевелить, а лапами стучать по клавиатуре.

  

[ **[[https://www.evilfingers.com/publications/research_RU/nodistr.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/nodistr|DOC**]]**]

=== давим спам на сервере и клиенте ===

методики борьбы со спамом непрерывно совершенствуются: образуются распределенные центры, ведущие "черные списки", создаются изощренные программные фильтры, предназначенные как для провайдеров, так и для простых людей. какие технические средства сопротивления существуют на данный момент, чем они отличаются от друг друга, где их достать и как правильно настроить и установить? поразительно, но даже крупные провайдеры зачастую совершенно не осведомлены в этих вопросах. бедные их клиенты… собственно, главным образом, статься рассчитана на администраторов локальных сетей, поскольку с клиентской стороны очень мало что можно сделать…

  

[ **[[https://www.evilfingers.com/publications/research_RU/no-spam.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/no-spam|DOC**]]**]

=== шесть правил непопадания в спаммерские базы ===

когда спаммерские харвестры бороздят сетевое пространство в поисках майл-адресов, а пользователи, погребенные под тоннами рекламной макулатуры, высаживаются на конкретную измену, не понимая каким же образом стервятникам удалось добыть их адрес на этот раз, ведь, казалось бы, были предприняты все меры предосторожности! методики сбора майл-адресов довольно продвинуты и одним лишь блужданием по паутине совсем не ограничиваются. ниже будет показано как максимально обезопасить себя от нежелательной корреспонденции.

  

[ **[[https://www.evilfingers.com/publications/research_RU/no-spam-base.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/no-spam-base|DOC**]]**]

=== полиморфные технологии на службе спаммеров ===

ожесточенная борьба со спамерами не приводит к их вымиранию, напротив — побуждает разрабатывать новые виды оружия. все что нас не убивает — делает сильнее! извечная проблема меча и щита, превратившая каменные топоры в атомные бомбы. если в остальных статьях мыщъх говорил, как фильтры борются со спаммерами, то сейчас развернет свой хвост на 180 градусов, показав откуда от торчит.

  

[ **[[https://www.evilfingers.com/publications/research_RU/no-spam-poly.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/no-spam-poly|DOC**]]**]

=== экстремальный разгон NTFS скрытые рычаги управления файловой системой ===

NTFS – одна из самых сложных (а, может быть, даже самая сложная) файловая система из всех, когда-либо разработанных человечеством за всю историю существования компьютерной индустрии. ее разработчики, в стремлении объять необъятное, скрестили передовые технологии в области баз данных, поиска, сжатия и шифрования информации, вот только забыли доделать рычаги управления…

  

[ **[[https://www.evilfingers.com/publications/research_RU/NTFS-S2K3.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/NTFS-S2K3|DOC**]]**]

=== разгон NTFS ===

дисковая подсистема — одно из самых "узких" мест компьютера, правильная настройка которой зачастую увеличивает производительность в несколько раз (в то время как разгон процессора в лучшем случае дает десятки процентов). мы не можем рассказать обо всех файловых системах, поэтому остановимся на NTFS как на самой популярной.

  

[ **[[https://www.evilfingers.com/publications/research_RU/NTFS-speedup.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/NTFS-speedup|DOC**]]**]

=== хак ядра NT ===

ядро операционной системы — это место, куда стекаются хакеры, черви, rootkit'ы, брандмауэры, протекторы исполняемых файлов, защиты от копирования, антивирусы и прочая нечисть, ведущая между собой жестокую конкурентную борьбу за выживание, проявляющуюся себя голубым экранам смерти. как захачить ядро по всем правилам? так, чтобы без конфликтов?

  

[ **[[https://www.evilfingers.com/publications/research_RU/nt-kernel-hack.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/nt-kernel-hack|DOC**]]**]

=== подъем рухнувшей NT ===

операционные системы семейства NT очень надежны и "сами по себе" падают крайне редко. обычно систему роняют кривые программы, вирусы и непродуманные действия пользователя. как поднять упавшую NT и вернуть все свои данные? без паники! сейчас мыщъх расскажет и покажет!

  

[ **[[https://www.evilfingers.com/publications/research_RU/NT-up.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/NT-up|DOC**]]**]

=== сколько стоит упасть и отжаться ===

важнейшая характеристика всякой операционной системы — ее надежность (в контексте устойчивости к сбоям) и среднее время "регенерации" после падений. давайте сравним насколько устойчива Windows и насколько — конкурирующая с ней Linux и почетный клан xBSD.

  

[ **[[https://www.evilfingers.com/publications/research_RU/NT-vs-nix-crash.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/NT-vs-nix-crash|DOC**]]**]

=== обфускация и ее преодоление ===

несколько лет назад, когда кибервойны казались оконченными и хакеры поломали все и вся, программисты неожиданно применили мощное оружие обфускации, созданное самими же хакерами, и направленное против них. адекватных методик противостояния на сегодняшний день не существует, но первые шаги в этом направлении уже сделаны!

  

[ **[[https://www.evilfingers.com/publications/research_RU/obfuscation.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/obfuscation|DOC**]]**]

=== стандартный нестандартный приплюснутый си ===

Священные войны вокруг языков программирования идут давно, но все как-то мимо писсуара и совсем не в тему. Обычный тезис: "покажите мне пример, который нельзя реализовать на моем любимом XYZ и тогда я съем свою тюбетейку". Ага! Еще козырек намазать маслом, чтобы было легче глотать!

  

[ **[[https://www.evilfingers.com/publications/research_RU/oldnewcpp.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/oldnewcpp|DOC**]]**]

=== языки, которые мы потеряли ===

позади нас осталось целое кладбище языков. не прижившихся парадигм, вымерших концепций. идей, опередивших свое время. для будущего не осталось ничего. все, что только было можно придумать — уже придумано, реализовано, опробовано и… выброшено на свалку за ненадобностью. эпоха великих открытый давно прошла и нам осталось лишь обезьянничать, двигаясь от золотого века в деградирующую тьму чудовищных лингвистических решений. назад возврата нет. а все потому, что…

  

[ **[[https://www.evilfingers.com/publications/research_RU/oldnewlang.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/oldnewlang|DOC**]]**]

=== языки, которые мы потеряли ===

В Лиспе (Lisp) и Форте (Forth), созданных в 1958 и 1970 годах соответственно, самомодификация была вынесена на уровне языка, что позволяло реализовывать высокоэффективные программы, построенные на динамических алгоритмах. Уникальнейшей особенностью Форта (не реализованная ни в каком другом языке) была и остается возможность "честной" модификации Форт-машины, то есть непосредственно самого транслятора, который при желании со стороны программиста можно вообще полностью переписать штатными средствами самого языка!

  

[ **[[https://www.evilfingers.com/publications/research_RU/oldnewlang-addons.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/oldnewlang-addons|DOC**]]**]

=== неофициальные сборки ольги — неформальный обзор ===

OllyDbg стал стандартным user-land отладчиком, взятым на вооружение хакерами, тут же захотевшими ее улучшить (ее — потому, что Ольга женское имя), в результате чего появилось множество нестандартных сборок (модов) — одни фиксят ошибки Ольги, другие расширяют функционал, третьи — скрывают ее от протекторов… количество модов перевалило за третий десяток и чтобы разобраться в этом хозяйстве мыщъх предлагает свой неформальный обзор.

  

[ **[[https://www.evilfingers.com/publications/research_RU/olly-modz.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/olly-modz|DOC**]]**]

=== on-line patching в секретах и советах ===

off-line patch (он же bit-hack) это когда мы грузим программу в hiew и правим там пару байт (7xh на ECh, например). а если программа упакована? тогда у нас два пути — распаковать ее и хакнуть в off-line, или же, дождавшись завершения распаковки, модифицировать память процесса на лету, проворно обходя ловушки типа проверки CRC. вот об этом способе мы и будем говорить!

  

[ **[[https://www.evilfingers.com/publications/research_RU/online-patch.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/online-patch|DOC**]]**]

=== почему OpenBSD рулез ===

Операционная система OpenBSD (как, впрочем, и все остальные никсы) построена по принципу "тяжело в учении, легко в бою". Ее сложно освоить, зато потом можно пить пиво и ничего не делать. Все операции осуществляются парой клавиш (не горячих клавиш, а командной строки), внутренности программ открыты и легко стыкуются друг с другом. По сути OpenBSD представляет собой великолепную интегрированную среду программирования, где всякую задачу достаточно решить всего один лишь раз, после чего она загонятся в скрипт, вызываемый в любое время и любой степени опьянения. Здесь нет никаких мышей, здесь не приходится ломать голову как же заставить систему делать то, что нам необходимо — в какое скрытое меню залезть, какой комбобокс потискать и какую (радио)кнопку нажать. В распоряжении администратора имеется хорошо документированный набор примитивов, из которых как из кирпичиков строиться все остальное. А построить из них можно все, что угодно — главное инженерное мышление иметь!

  

[ **[[https://www.evilfingers.com/publications/research_RU/OpenBSD-rulezz.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/OpenBSD-rulezz|DOC**]]**]

=== смертельная схватка: Open BSD vs. Server 2003 – битва за безопасность ===

OpenBSD – самая защищенная операционная система, Server 2003 – самая распространенная (речь, разумеется, идет о серверной нише), поэтому, представляет интерес сравнить двух лидеров на предмет (не)безопасности, проанализировав их устойчивость как к удаленным, так и к локальным атакам, поскольку инсайдеры представляют ничуть не меньшую угрозу, чем хакеры, находящие периметром охраняемой зоны.

  

[ **[[https://www.evilfingers.com/publications/research_RU/OpenBSD-vs-S2K3.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/OpenBSD-vs-S2K3|DOC**]]**]

=== так ли открыты открытые исходники? ===

затхлый воздух давно непроветриваемых корпоративных секретов уже ощущается и в россии. открытые исходники встречаются с большим энтузиазмом, словно глоток свежего воздуха. они активно продвигаются и позиционируются как идеальное средство от всех проблем. попробуем разобраться насколько это так…

  

[ **[[https://www.evilfingers.com/publications/research_RU/opensource.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/opensource|DOC**]]**]

=== Open Source на корпоративном рынке легенды и их разоблачение ===

открытое программное обеспечение ожесточенно конкурирует с закрытым, причем борьба носит не только (и не столько) технический, сколько идеологический характер. Microsoft и другие монстры проталкивают свои, зачастую не самые лучшие, решения, запугивая ужасами, которые несет открытое программное обеспечение. давайте попробуем основательно разобраться кто прав, а кто виноват!

  

[ **[[https://www.evilfingers.com/publications/research_RU/open-src-corp.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/open-src-corp|DOC**]]**]

=== мощь и беспомощность автоматической оптимизации ===

к концу 90х годов компиляторы по своей эффективности вплотную приблизились к ассемблеру, однако, все еще существует множество конструкций, неподдающихся автоматической оптимизации, но легко трансформируемых вручную. покажем как надо и как не надо оптимизировать программы на примере: Microsoft Visual C++, Intel C++, Borland Builder, GCC и Hewlett-Packard C++.

  

[ **[[https://www.evilfingers.com/publications/research_RU/optimize-help.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/optimize-help|DOC**]]**]

=== почему оси ненадежны — тенденции развития хакерских атак ===

эта статья возникла в результате бесед с Самуелем Джебамаи (Samuel Jebamani) — ведущим разработчиком антивирусной компании K7 Computing (малоизвестной в России, но захватившей четверть японского рынка). обсуждая тенденции развития операционных систем и анализируя источники возможных угроз, мы пришли к любопытным, хотя и противоречивым выводам, которые наверняка будут интересны широкой аудитории читателей, бизнес которых так или иначе связан с компьютерной безопасностью.

  

[ **[[https://www.evilfingers.com/publications/research_RU/OS-insecure.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/OS-insecure|DOC**]]**]

=== почему оси ненадежны — тенденции развития хакерских атак [Lite] ===

эта статья возникла в результате бесед с Самуелем Джебамаи (Samuel Jebamani) — ведущим разработчиком антивирусной компании K7 Computing (малоизвестной в России, но захватившей четверть японского рынка). обсуждая тенденции развития операционных систем и анализируя источники возможных угроз, мы пришли к любопытным, хотя и противоречивым выводам, которые наверняка будут интересны широкой аудитории читателей, бизнес которых так или иначе связан с компьютерной безопасностью.

  

[ **[[https://www.evilfingers.com/publications/research_RU/OS-insecure-nopic.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/OS-insecure-nopic|DOC**]]**]

=== скоростной лохотрон ===

быстрее! еще быстрее!! совсем быстрее!!! стоп — дым идет. да… трудно разогнать асфальтовый каток. а еще вспоминается анекдот как русские летчики изменяли геометрию крыла, пытаясь отцепиться от боинга. разгон окружен мифами, тайнами, сплетнями и… спекуляциями. вот только некоторые из них.

  

[ **[[https://www.evilfingers.com/publications/research_RU/overclock-facker.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/overclock-facker|DOC**]]**]

=== разгон мышей или скоростной web-серфинг для экстремалов ===

так… память, процессор, видео, диски, операционную и файловую систему мы уже разогнали. неразогнанной осталась только мышь. мышь еще никто не разгонял. а мы вот возьмем и разгоним! да так, что производительность всей системы возрастет в несколько раз!

  

[ **[[https://www.evilfingers.com/publications/research_RU/overclock-mouse.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/overclock-mouse|DOC**]]**]

=== экстремальный разгон DDR-памяти ===

подсистема памяти – все еще остается одним из самых узких мест ПК и ее разгон может существенно увеличить производительность. но ведь может и не увеличить! память достаточно сложная штука и дремучий лес настроек наугад не пересечешь. производители пошли на встречу пользователям, вложив в их руки рычаги управления всеми подсистемами компьютера, но как пользоваться ими – не объяснили. подавляющее большинство настроек либо вообще не описано в прилагаемой документации, либо описано слишком кратно, а информация, подчерпнутая из Интернета недостоверна и взаимно противоречива. статья ориентирована главным образом одно/двух канальные контролеры DDR-памяти, однако, во много будет интереса и пользователям умирающей SDR-памяти. DDR II память в силу своей новизны и незначительных конструктивных отличий от DDR здесь не рассматривается.

  

[ **[[https://www.evilfingers.com/publications/research_RU/overDDR.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/overDDR|DOC**]]**]

=== наведение порядка в хаосе атак или классификация ошибок переполнения ===

дыра — это нора, а в норе — ароматный ужин, как правило, состряпанный из переполняющихся буферов, которым посвящены десятки тысяч статей и разработаны сотни защитных механизмов, от обилия которых рябит в глазах и без систематического руководства новичку очень легко свернуть голову или зажевать прокисший ужин, соблазнившись статьей двух-трех летней давности, забыв о том, что методики атак на ошибки переполнения — весьма скоропортящейся продукт. вот мыщъх и притаранил свежачок!

  

[ **[[https://www.evilfingers.com/publications/research_RU/overflow-all.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/overflow-all|DOC**]]**]

=== основы ядерной инженерии ===

традиционно Windows считается закрытой системой, залезть внутрь которой на предмет "чего-то там подкрутить" так же трудно, как и вылезти потом обратно. толи дело LINUX, позволяющая перестраивать себя как угодно, вплоть до замены ядра. на самом деле, менять ядра можно и в Windows, главное знать как! эта статья затрагивает следующие системы: Windows NT, 2000, XP, 2003. пользователи Windows 9x/Me, увы, отдыхают.

  

[ **[[https://www.evilfingers.com/publications/research_RU/overHAL.hacker-edition.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/overHAL.hacker-edition|DOC**]]**]

=== борьба с утечками ресурсов и переполняющимися буферами на языковом и внеязыковом уровне ===

с утечками ресурсов и переполняющимися буферами программистское сообщество борется уже лет тридцать, но все безуспешно. в этой статье мыщъх делится своими собственными трюками и находками. на "серебряную пулю" они не претендуют, но ликвидируют значительное количество ошибок с минимальными накладными расходами.

  

[ **[[https://www.evilfingers.com/publications/research_RU/overleacks.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/overleacks|DOC**]]**]

=== турбо наддув для XP ===

Windows – создание неторопливое. Все лишние службы остановлены, диск только что дефрагментирован, а она все тормозит. Эта статья открывает дверь в мир высоких энергий и больших скоростей, радикально увеличивая производительность операционной системы и практически ничего не требуя взамен. В основном мы будем говорить о линейке Windows NT (к которой принадлежат W2K, XP и 2003), но и пользователи 9x найдут для себя кое-что интересное.

  

[ **[[https://www.evilfingers.com/publications/research_RU/overXP.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/overXP|DOC**]]**]

=== мануальная терапия нетрадиционного самоконтроля ===

если защита не будет препятствовать модификации своего собственного кода — ее немедленно хакнут, а если воспрепятствует — хакнут тем более. контроль утрачивает свою силу когда становится явным. лобовые решения здесь бесполезны! чтобы выжить, защитный механизм должен хитрить, используя все преимущества страничной организации виртуальной памяти. в этой статье автор делится с читателями передовыми идеями, выдранными из лучших защитных механизмов, которые только есть.

  

[ **[[https://www.evilfingers.com/publications/research_RU/page2pages.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/page2pages|DOC**]]**]

=== прикладная видеология ===

широкий ассортимент выбора камер видео-наблюдения превращает свободу выбора в проблему, особенно если ни потребитель, ни продавец не разбираются в технических характеристиках и разницу между avi и mpeg чувствуют на смутном интуитивном уровне, не подвластном логическому анализу. давайте попробуем разобраться какие стандарты хранения видеоинформации существуют и чем они _реально_ отличаются друг от друга.

  

[ **[[https://www.evilfingers.com/publications/research_RU/videologic.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/videologic|DOC**]]**]

=== прикладная видеология (добавления) ===

H.264 так же известный под именем AVC (Advanced Video Coding – Улучшенное Видео Кодирование) — отпрыск MPEG-4 — новый стандарт сжатия видео обеспечивающий лучшую компрессию при более высоком качестве. предполагается, что в будущем H.264 полностью вытеснит MPEG2 и MPEG4.

  

[ **[[https://www.evilfingers.com/publications/research_RU/videologic-adds.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/videologic-adds|DOC**]]**]

=== поиск малвари своими лапами и хвостом ===

как антивирусы детектят малварь всем хорошо известно. ни хвоста они ее не детектят, даже когда последнему ламеру ясно, что с компьютером что-то не то. живность резвиться и размножаются. виртуальные вселенные встают и рушатся в полный рост, а разные там KAV'ы и NOD'ы не мычат не телятся. короче, отправляем антивирусы в топку и включаем свой мозг (если нет своего, подойдет и чужой), зарываясь в недра операционной системы и проверяя на стерильность все "злачные" места обитания малвари.

  

[ **[[https://www.evilfingers.com/publications/research_RU/virii-h2f.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/virii-h2f|DOC**]]**]

=== компьютерные вирусы: прошлое, настоящее, будущее ===

Компьютерные вирусы прошли длительный эволюционный путь, присаливаясь к изменчивому миру операционных систем и защитных механизмов. По самым скромным подсчетам хакерами было написано порядка полумиллиона вирусов и разработано множество технологий противостояния различным защитным механизмам (полиморфизм, стелсирование, etc). Вирусы освоили практически все "экологические ниши": начав с исполняемых объектов, они продолжили наступление на файлы данных: сначала это были робкие эксперименты с макросами в документах MS Office, а затем все более смелые атаки на переполняющиеся буфера в jpg/gif/mp3/midi и прочих подобных форматах, считавшимися ранее принципиально недоступными для заражения.

  

[ **[[https://www.evilfingers.com/publications/research_RU/virii-history.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/virii-history|DOC**]]**]

=== компьютерные вирусы — эволюция или революция? ===

чтобы выработать оптимальную стратегию борьбы с вирусами, необходимо не только учесть все технические аспекты проблемы, но еще и разобраться с философскими концепциями: откуда берутся вирусы, кто их пишет, кто с ними борется, как они изменяют мир, почему возникают глобальные эпидемии и какое будущее нас ждет — мир за каменной стеной, где в угоду безопасности все запрещено и шаг влево/шаг вправо карается расстрелом на месте без предупреждения, или же абсолютная ничем не ограненная свобода и кибернетическая демократия?

  

[ **[[https://www.evilfingers.com/publications/research_RU/virii-history-lite.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/virii-history-lite|DOC**]]**]

=== итоги прошлого года или стратегия выживания разработчиков антивирусов (!!!*черновик*!!!) ===

вот сейчас мыщъх будет писать, а его будут бить, а потом травить. яду мне, яду… творится полный беспредел и кое-кто пытается сделать вид, что наводит порядок, машет метлой, сражается с невидимыми врагами и разводит прочую активность, являющуюся основой его бизнеса. но с норы мыщъха, вырытой среди холмов северного кавказа все видится слегка по другому, о чем мыщъх и решил написать.

  

[ **[[https://www.evilfingers.com/publications/research_RU/virii-smap.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/virii-smap|DOC**]]**]

=== виртуальные миры на стыке парадигмы эмуляции ===

виртуализаторы, доступные ранее только на майнфреймах, теперь стали доступными на PC, предоставив потребителям те же самые возможности, но за меньшие деньги. однако, все не так просто. в лагере разработчиков эмуляторов произошел раскол на методологической почве: одни производители пошли по пути чистой аппаратной виртуализации (например, Microsoft с ее Server 2008), другие же предпочти гибридные программно/аппаратные решения (яркий представитель которых — VM Ware). ну а на майнфреймы остались верны технологиям логического разбиения (login partition), так же называемых доменами (domain). естественно, каждая технология имеет свои сильные и слабые стороны, в которых мы сейчас и попробуем разобраться.

  

[ **[[https://www.evilfingers.com/publications/research_RU/virtual-world-why.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/virtual-world-why|DOC**]]**]

=== исследование Windows Vista/Server Longhorn ===

исследование Windows Vista/Server Longhorn.

  

[ **[[https://www.evilfingers.com/publications/research_RU/vista.stuff.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/vista.stuff|DOC**]]**]

=== глубины и вершины сетевого стека висты ===

сетевой стек висты был переписан с чистого листа. о лучшем подарке от Microsoft хакеры не могли и мечтать. раз новый — значит еще сырой и не протестированный. анализируя ранние бета-версии висты, исследовательская лаборатория корпорации Symantec обнаружила огромное количество дыр, что уже указывает на кромешное качество кодирования. сколько "сюрпризов" таится внутри этой твари никто не знает, а, значит, хакерам будет во что вонзить зубы!

  

[ **[[https://www.evilfingers.com/publications/research_RU/vista_netstack.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/vista_netstack|DOC**]]**]

=== "мнение экспертов" в номер IT Спец (бывший ХакерСпец) про Windows Vista ===

"мнение экспертов" в номер IT Спец (бывший ХакерСпец) про Windows Vista.

  

[ **[[https://www.evilfingers.com/publications/research_RU/vista-exp-q.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/vista-exp-q|DOC**]]**]

=== новая жизнь старого софта или хачим висту ===

всем известно как "хорошо" дружит висла с древним софтом, написанным до нее. и хотя сейчас ситуация уже не та, что пару лет назад — над проблемой совместимости активно работают с двух сторон баррикад: ms добавляет специальный "обходной" код для поддержки старых программ, а производители софта взяли за правило тестировать новые приложения под вислой и даже для ранее выпущенных версий имеются специальные заплатки, патчи и фиксы. однако, количество программ (и драйверов!) не совместимых с вислой по-прежнему велико и пока другие пользователи ждут у моря погоды, мы — хакеры — уже вовсю орудуем напильником и дизассемблером, главным образом ковыряя 32х битные системы (под них большое всего несовместимого софта), но и про x86-64 тоже стоит замолвить слово!

  

[ **[[https://www.evilfingers.com/publications/research_RU/vista-incompatible.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/vista-incompatible|DOC**]]**]

=== глубоководное погружение в недра vista/longhorn ===

чем _реально_ vista отличается от своей предшественницы XP? какие _объективные_ преимущества она дает? с какими _проблемами_ нам придется столкнуться при переходе? и стоит ли этот переход того? как обстоят дела с удобством использования, производительностью, безопасностью? мыщъх перерыл все ядро с сопредельными территориями, отделив зерна от шелухи рекламных плевел и теперь готов поделиться результатами своих исследований с общественностью.

  

[ **[[https://www.evilfingers.com/publications/research_RU/vista-intro.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/vista-intro|DOC**]]**]

=== вторжение в ядро вислы — спроси меня как! ===

пресс-релизы, распространяемые империей зла, пугают нас чудовищными имениями в ядре вислы, направленными на борьбу с малварью и фактически ставящей хакеров на грань выживания. кое-кто даже поговаривает, что вирусы скоро вымрут как мамонты. ну с вирусами ладно — покончить с ними нам обещают с завидной регулярностью, но все никак не кончат. хуже всего то, что висла накладывает серьезные ограничения на хаченье ядра, и на грани выживания оказываются совсем не вирусы, а… хакеры и легальные разработчики проактивных защитных средств. но… на самом деле, все эти слухи _очень_ сильно преувеличены и внедриться в ядро вполне реально.

  

[ **[[https://www.evilfingers.com/publications/research_RU/vista-kernel-hack.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/vista-kernel-hack|DOC**]]**]

=== археологические раскопки ядра vista/longhorn ===

ядро висты претерпело множество изменений: усилилась (не)безопасность, добавились новые дыры, оптимизация достигла такого предела, что затормозила даже двуядерные процессоры, но это уже дань техническому прогрессу. давайте, вооружившись шагающим экскаватором, раскорывыряем ядро и посмотрим какие реальные перемены в нем произошли со времен XP и стоит ли этот прогресс того, чтобы за него платить.

  

[ **[[https://www.evilfingers.com/publications/research_RU/vista-krnl.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/vista-krnl|DOC**]]**]

=== активация висты лапами и хвостом ===

многие энтузиасты, желающие пересесть на висту, столкнулись с проблемами активации системы, купленной в ближайшем ларьке в полном соответствии с действующим законодательством (sic!). и хотя в сети уже появилась куча "ломиков", большинство из них представляют собой троянские программы, созданные специально для заманивая доверчивых пользователей. между тем, активировать висту не просто, а _очень_ просто, надо только знать как ;)

  

[ **[[https://www.evilfingers.com/publications/research_RU/vista-wga.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/vista-wga|DOC**]]**]

=== побег из-под vm ware ===

многие хакеры и программеры гоняют сомнительные программы под VM Ware и прочими эмуляторами, считая, что они надежно защищены, однако, это не так! зловредный код может вырваться из эмулятора и покоцать основную систему. мыщъх детально исследовал этот вопрос и предлагает несколько сценариев возможных атак.

  

[ **[[https://www.evilfingers.com/publications/research_RU/vm-escape.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/vm-escape|DOC**]]**]

=== побег из-под vm ware [Lite] ===

многие хакеры и программеры гоняют сомнительные программы под VM Ware и прочими эмуляторами, считая, что они надежно защищены, однако, это не так! зловредный код может вырваться из эмулятора и покоцать основную систему. мыщъх детально исследовал этот вопрос и предлагает несколько сценариев возможных атак.

  

[ **[[https://www.evilfingers.com/publications/research_RU/vm-escape.lite.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/vm-escape.lite|DOC**]]**]

=== исследования ядра LINUX'а ===

ядро — это фундамент всей системы. на багистром ядре хорошего линуха не постоишь. разработчики не отходят от клавиатуры, выявляя все новые и новые ошибки, но баги размножаются быстрее! далеко не все ошибки "заразы" и лишь немногие из них допускают удаленное проникновение в систему. найти такой баг — большая удача! как хакеры исследуют ядро? какие инструменты используют? во об этом мы сейчас и поговорим!

  

[ **[[https://www.evilfingers.com/publications/research_RU/vmlinuz.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/vmlinuz|DOC**]]**]

=== виртуальные машины на службе системного администратора — за и против: практические советы по развертыванию виртуальной инфраструктуры в полевых условиях ===

виртуализация, широко распространенная в эпоху майнфреймов, с приходом к власти персоналок оказалась забытой на многие годы, деградировав до эмуляторов ZX-Spectrum'а, Amig'и и прочих 8-битных машин, но современные процессоры настолько мощны, что позволяют эмулировать самих себя (!) практически без тормозов, открывая дверь в виртуальный мир, находящий большое практическое применение в области системного администрирования, однако, здесь все не так просто и прежде, чем возводить виртуальную систему, следует взвесить все аргументы за и против.

  

[ **[[https://www.evilfingers.com/publications/research_RU/VM-pro-n-contra.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/VM-pro-n-contra|DOC**]]**]

=== разгон с паяльником в руках [Lite] ===

серьезный разгон требует серьезных решений. когда программным путем выжато все, что только возможно, а хочется разогнать еще, в руки берется паяльник и с картой делается то, что с ней должен не сделал производитель. в сети можно найти множество пошаговых руководств для любого железа, но это неинтересно. настоящие хакеры всегда полагаются только на себя.

  

[ **[[https://www.evilfingers.com/publications/research_RU/voltmod.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/voltmod|DOC**]]**]

=== разгон с паяльником в руках ===

серьезный разгон требует серьезных решений. когда программным путем выжато все, что только возможно, а хочется разогнать еще, в руки берется паяльник и с платой делается то, что не сделал производитель. в сети можно найти множество пошаговых руководств для любого железа, но это неинтересно. настоящие хакеры всегда полагаются только на самих себя и свой Х в смысле хвост!

  

[ **[[https://www.evilfingers.com/publications/research_RU/voltmod-final.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/voltmod-final|DOC**]]**]

=== сага о FSCTL_LOCK_VOLUME или дисковые тома под замком ===

набьем наш кальян травой, надербаненной на просторах MSDN, и раскурим малоизвестную, но очень интересную и актуальную тему блокировки дисковых томов как от непреднамеренного доступа (что полезно, когда винчестер находится в спячке), так и от жестокого вандализма (вирусных атак, например), чего можно добиться как штатными средствами операционной системы, так и мыщъх'иной утилитой, прилагаемой к журналу.

  

[ **[[https://www.evilfingers.com/publications/research_RU/volume-lock.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/volume-lock|DOC**]]**]

=== атака на VPN или жылдыз твой интернет ===

виртуальные частные сети (они же Virtual Private Network или сокращенно VPN) продвигаются как идеальное средство для передачи конфиденциальных данных через Интернет или беспроводные сети, неподвластное хакерским атакам; на самом деле в действительности все обстоит совсем не так…

  

[ **[[https://www.evilfingers.com/publications/research_RU/VPN.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/VPN|DOC**]]**]

=== записки варезника ===

программное обеспечение в xUSSR всегда считалось общенациональным достоянием и даже сейчас, когда хакеров приравнивают к террористам, а за нелегальное использование windows вполне реально загреметь в тюрьму, народ продолжает тянуть из сети варез, поскольку забота о голодающих корпоративных монстрах не входит в нашу задачу, напротив, мы предпримем все усилия, чтобы не стать их пищей. вопрос поставлен ребром — идет игра на выживание и несколько хитрых трюков никогда не помешают.

  

[ **[[https://www.evilfingers.com/publications/research_RU/warez.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/warez|DOC**]]**]

=== записки варезника (добавления) ===

За исключением небольшого количества бесплатных программ, все остальные требуют введения серийного номера либо при установке, либо в течении испытательного (trail'ного) срока, как правило составляющего 30 дней (иногда меньше, иногда больше). Некоторые программы вместо серийного номера используют ключевой файл, за который так же приходится платить, а платить, как известно не хочется, но даже если у нас завалялось некоторое количество убитых енотов с которыми не жалко расстаться, неразвитость систем оплаты создает огромные трудности, опускающие столбик мотивации к честной регистрации до абсолютного нуля… остается только найти ломик или другое средство взлома.

  

[ **[[https://www.evilfingers.com/publications/research_RU/warez-addon.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/warez-addon|DOC**]]**]

=== взлом и защита WebMoney ===

вопреки всем заверениям разработчиков система WebMoney катастрофически ненадежна и вскрывается буквально ногтем. существует множество червей, троянов и хакерских групп, специализирующихся на похищении электронных кошельков, кражи которых приняли массовый характер. хотите узнать как это делается и как обезопасить себя?

  

[ **[[https://www.evilfingers.com/publications/research_RU/webmoney.hack.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/webmoney.hack|DOC**]]**]

=== электронные деньги — доверять или нет? ===

стоит ли заводить электронный кошелек или послать его на ху? обеспечит ли он ожидаемый комфорт и удобство? не украдут ли наши денежки? какие платежные системы существуют и чем они отличаются друг от друга? вопросов много, а все ответы находятся под замком…

  

[ **[[https://www.evilfingers.com/publications/research_RU/webmoney.trust.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/webmoney.trust|DOC**]]**]

=== кто есть кто из азиатов ===

Можно ли по внешнему виду отличить корейца от японца, а японца от китайца? По этому вопросу существует два диаметрально противоположных мнения: одни утверждают, что отличить одного азиата от другого в общем случае невозможно, другие же говорят, что азиаты не образуют монолитный блок и отличаются меж собой примерно так же как армяне, грузины и азербайджанцы, но формализовать эти отличия очень трудно, особенно представителю иной расы.

  

[ **[[https://www.evilfingers.com/publications/research_RU/whoasian.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/whoasian|DOC**]]**]

=== хачим ядро xBSD ===

техника ### тактика внедрения в ядро xBSD и принципы перехвата системных функций мало чем отличаются от LINUX и NT, однако, здесь есть своя специфика, о которой мы и собираемся рассказать, подкрепив слова конкретными листингами, учитывающими архитектурные особенности FreeBSD, NetBSD и OpenBSD.

  

[ **[[https://www.evilfingers.com/publications/research_RU/xBSD-kernel.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/xBSD-kernel|DOC**]]**]

=== восстановление удаленных файлов под BSD ===

какой обладатель BSD не удалял файлов за которые потом был готов повеситься? особенно это легко сделать из командной строки, когда лишний пробел или символ звездочки трут все подчистую. а ведь xBSD это одна из наиболее популярных систем, под которой вращается множество серверов и рабочих станицей. разрушения данных случаются постоянно. хотите узнать как этому противостоять?

  

[ **[[https://www.evilfingers.com/publications/research_RU/xBSD-undelete.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/xBSD-undelete|DOC**]]**]

=== аппаратная виртуализация или эмуляция без тормозов ===

интерес к различного вида эмуляциям все растет и растет (кому не интересно запустить из-под Windows это загадочный LINUX или полюбоваться Mac OS?). единственный сдерживающий фактор это — (не)производительность. эмуляторы так тормозят… и вот в середине 2006 года в процессорах Intel и AMD наконец-то появилась аппаратная поддержка виртуализации, снижающая накладные расходы на эмуляцию в сотни раз! новая технология уже поддерживается VM Ware 5.5, XEN'ом и рядом других продуктов о которых мы сейчас и поговорим.

  

[ **[[https://www.evilfingers.com/publications/research_RU/XENnCo.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/XENnCo|DOC**]]**]

=== аналитическое сравнение XP и Vista – отличия ядер и ядерных компонентов ===

большинство статей, описывающих нововведения Висты концентрируются преимущественно на пользовательском интерфейсе и других сугубо прикладных аспектах, не обращая внимания на ядро, являющееся фундаментом ОС и в наибольшей степени определяющее устойчивость, безопасность, быстродействие системы. изменения ядра скрыты от взора пользователей, их нельзя обнаружить простым осмотром системы и без масштабных археологических раскопок тут не обойтись!

  

[ **[[https://www.evilfingers.com/publications/research_RU/XP2vista.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/XP2vista|DOC**]]**]

=== эффективный грабеж видео с youtube ===

задача: скачать потоковое видео с youtube, google и прочих подобных ресурсов с максимальным качеством, минимальным трафиком без всяких платных утилит, получив в итоге стандартный avi и/или mpeg-файл, проигрывающийся где угодно и на чем угодно. решение намного сложнее, чем можно подумать. существует множество программ и сетевых служб, предлагающих свои услуги, но… большинство из них либо нагло требуют денег, либо показывают рекламу, либо же выдают видео неоправданно низкого качества. на самом деле, чтобы решить проблему ничего, кроме браузера не нужно! главное — это правильно им воспользоваться!

  

[ **[[https://www.evilfingers.com/publications/research_RU/youtubed.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/youtubed|DOC**]]**]

=== техника оптимизации под LINUX III оптимизация циклов ===

большое тестовое сравнение Linux-компиляторов продолжается! тема сегодняшнего исследования — циклы и их оптимизация. в основном мы будем говорить о трех наиболее популярных компиляторах —GCC 3.3.4, Intel C++ 8.0 и Microsoft Visual C++ 6.0, к которым теперь присоединился и GCC 4.0.0 со своим новым оптимизатором циклов.

  

[ **[[https://www.evilfingers.com/publications/research_RU/linux.optimization.III.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/linux.optimization.III|DOC**]]**]

=== Linux Optimization Table ===

Linux Optimization Table.

  

[ **[[https://www.evilfingers.com/publications/research_RU/linux.optimization.table.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/linux.optimization.table|DOC**]]**]

=== упаковщики исполняемых файлов в LINUX/BSD и борьба с ними ===

большинство UNIX-программ распространяются в исходных текстах, но количество коммерческих продуктов с закрытым кодов неуклонно растет, зачастую распространясь в упакованном виде, что не только препятствует анализу, но и снижает производительность и ухудшает совместимость с "зоопарком" UNIX-клонов. покажем на примере UPX, ELFCrypt, Burneye и Shiva как кодокопатели освобождаются от упаковщиков.

  

[ **[[https://www.evilfingers.com/publications/research_RU/linux-unpack.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/linux-unpack|DOC**]]**]

=== жучки в электронных письмах ===

электронная почта была и остается одним из основным инструментов хакера (достаточно вспоминать письма с зловредными вложениями или эксплуатацию "дыр" популярных почтовых клиентов). атакующие применяют все более и более изощренные приемы, зачастую неизвестные широкой аудитории администраторов и специалистов по безопасности. сегодня мы поговорим о… ссылках на картинки и покажем на что они способны, а способы они на многое!

  

[ **[[https://www.evilfingers.com/publications/research_RU/mail-bugs.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/mail-bugs|DOC**]]**]

=== жучки в электронных письмах [Lite] ===

электронная почта была и остается одним из основным инструментов хакера (достаточно вспоминать письма с зловредными вложениями или эксплуатацию "дыр" популярных почтовых клиентов). атакующие применяют все более и более изощренные приемы, зачастую неизвестные широкой аудитории администраторов и специалистов по безопасности. сегодня мы поговорим о… ссылках на картинки и покажем на что они способны, а способы они на многое!

  

[ **[[https://www.evilfingers.com/publications/research_RU/mail-bugs-lite.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/mail-bugs-lite|DOC**]]**]

=== поиск малвари на Server 2003/XP своими руками ===

глобальных эпидемий не вспыхивало уже несколько лет, но локальные очаги заражения продолжают разрастаться, осваивая новые территории. хакеры проявляют большую активность и разработчики защитных комплексов (как правило, распространяемых на коммерческой основе) за ними, увы, не поспевают, увеличивая разрыв с каждым днем. pro-активные технологии элементарно обходится даже простейшими вирусами. root-kit'ы все глубже зарываются в ядра операционных систем и очень трудно найти администратора, ни разу не сталкивающегося с вредоносным программным обеспечением. баста! надоело! покажем как обнаруживать свыше 90% малвари бесплатным программным обеспечением (руки, голова и хвост по умолчанию прилагаются). главным образом мы будем говорить о Server 2003/XP, однако, сказанное во многом справедливо и для Server 2008/Vista.

  

[ **[[https://www.evilfingers.com/publications/research_RU/malware-discover-s2k3.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/malware-discover-s2k3|DOC**]]**]

=== поиск малвари на Server 2003/XP своими руками [Lite] ===

глобальных эпидемий не вспыхивало уже несколько лет, но локальные очаги заражения продолжают разрастаться, осваивая новые территории. хакеры проявляют большую активность и разработчики защитных комплексов (как правило, распространяемых на коммерческой основе) за ними, увы, не поспевают, увеличивая разрыв с каждым днем. pro-активные технологии элементарно обходится даже простейшими вирусами. root-kit'ы все глубже зарываются в ядра операционных систем и очень трудно найти администратора, ни разу не сталкивающегося с вредоносным программным обеспечением. баста! надоело! покажем как обнаруживать свыше 90% малвари бесплатным программным обеспечением (руки, голова и хвост по умолчанию прилагаются). главным образом мы будем говорить о Server 2003/XP, однако, сказанное во многом справедливо и для Server 2008/Vista.

  

[ **[[https://www.evilfingers.com/publications/research_RU/malware-discover-s2k3-lite.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/malware-discover-s2k3-lite|DOC**]]**]

=== универсальный метод обнаружения малвари ===

в Windows постоянно обнаруживаются новые дыры, через которые лезет малварь, создающая новые процессы или внедряющаяся в уже существующие. мыщъх ### автор этой статьи предлагает универсальный метод обнаружения малвари, основанный на определении подлинного стартового адреса потока, чего другие приложения (включая могучий отладчик soft-ice) делать не в состоянии.

  

[ **[[https://www.evilfingers.com/publications/research_RU/malware-discover-st.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/malware-discover-st|DOC**]]**]

=== универсальный метод обнаружения малвари [Lite] ===

в Windows постоянно обнаруживаются новые дыры, через которые лезет малварь, создающая новые процессы или внедряющаяся в уже существующие. автор этой статьи предлагает универсальный метод обнаружения малвари, основанный на определении подлинного стартового адреса потока, чего другие приложения (включая могучий отладчик soft-ice) делать не в состоянии.

  

[ **[[https://www.evilfingers.com/publications/research_RU/malware-discover-st.lite.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/malware-discover-st.lite|DOC**]]**]

=== профессиональное сжатие видео ===

эта публикация открывает цикл статей, посвященный вопросам обработки видеоинформации в домашних условиях, и в первую очередь — осмысленной настройке MPEG2/MPEG4 кодеков, увеличивающей степень сжатия (без видимой потери качества) в несколько раз по сравнению с "сертифицированными профилями", установленными по умолчанию.

  

[ **[[https://www.evilfingers.com/publications/research_RU/MPEG-pro-I.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/MPEG-pro-I|DOC**]]**]

=== профессиональное сжатие видео [Lite] ===

эта публикация открывает цикл статей, посвященный вопросам обработки видеоинформации в домашних условиях, и в первую очередь — осмысленной настройке MPEG2/MPEG4 кодеков, увеличивающей степень сжатия (без видимой потери качества) в несколько раз по сравнению с "сертифицированными профилями", установленными по умолчанию.

  

[ **[[https://www.evilfingers.com/publications/research_RU/MPEG-pro-I.lite.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/MPEG-pro-I.lite|DOC**]]**]

=== многоядерные процессоры и проблемы ими порождаемые ===

многоядерные и Hyper-Threading процессоры не только увеличивают производительность, но и порождают многочисленные проблемы — некоторые приложения (драйвера) начинают работать нестабильно, выбрасывая критические ошибки или обрушивая систему в голубой экран смерти. в чем причина такого поведения и как его избежать?

  

[ **[[https://www.evilfingers.com/publications/research_RU/multi-CPU.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/multi-CPU|DOC**]]**]

=== многоядерные процессоры и проблемы ими порождаемые [Lite] ===

многоядерные и Hyper-Threading процессоры не только увеличивают производительность, но и порождают многочисленные проблемы — некоторые приложения (драйвера) начинают работать нестабильно, выбрасывая критические ошибки или обрушивая систему в голубой экран смерти. в чем причина такого поведения и как его избежать?

  

[ **[[https://www.evilfingers.com/publications/research_RU/multi-CPU.lite.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/multi-CPU.lite|DOC**]]**]

=== судьба shell-кода на системах с неисполняемым стеком или атака на DEP ===

отчаявшись справиться со своими же собственными ошибками, компания Microsoft совместно с Intel и AMD реализовала технологию DEP, призванную покончить с удаленными атаками раз и навсегда, но этого не произошло и защиту удалось обойти…

  

[ **[[https://www.evilfingers.com/publications/research_RU/nx.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/nx|DOC**]]**]

=== переполнение буфера на системах с неисполняемым стеком [Uncensored] ===

отчаявшись справиться со своими же собственными ошибками, компания Microsoft совместно с Intel и AMD реализовала технологию DEP, призванную покончить с удаленными атаками раз и навсегда, но ни хрена она с ними не покончила и сейчас я расскажу почему… этого не произошло и защиту удалось обойти…

  

[ **[[https://www.evilfingers.com/publications/research_RU/nx.uncensored.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/nx.uncensored|DOC**]]**]

=== зарабатываем на Open Source ===

ожесточенная конкуренция между программистами, заставляет не только совершенствовать качество кода, но так же искать новые, более эффективные, бизнес схемы, использующие все доступные средства, в том числе и концепцию открытых исходных текстов, уверенно противостоящую компаниям-гигантам.

  

[ **[[https://www.evilfingers.com/publications/research_RU/open-money.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/open-money|DOC**]]**]

=== разгон и торможение Windows NT ===

разработчики ядра исполнительной системы говорят, что оно дает пищу всему остальному. И это отнюдь не преувеличение! на плохом фундаменте ничего хорошего не построишь и качество ядра в значительной мере определяет производительность всей операционной системы в целом. в комплект поставки Window NT входит большое количество разнообразных ядер (в том числе и нашумевшее ядро I486С по слухам значительно увеличивающее быстродействие системы). как оценить их производительность? обычные тестирующие пакеты для этого не подходят и адекватную методику измерений приходится разрабатывать самостоятельно с учетом архитектуры ядра Windows и специфической направленности возложенных на него задач.

  

[ **[[https://www.evilfingers.com/publications/research_RU/overHAL.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/overHAL|DOC**]]**]

=== использование ошибок синхронизации для атак ===

ошибки синхронизации потоков встречаются так же часто как переполняющиеся буфера и, точно так же как и переполняющиеся буфера, их можно использовать для удаленных атак с засылкой shell-кода, тем более, что пока от них никто не пытается защищаться, открывая тем самым огромные возможности для хакерства и первые ласточки (в смысле черви) уже выползли из гнезда…

  

[ **[[https://www.evilfingers.com/publications/research_RU/over-sync.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/over-sync|DOC**]]**]

=== использование ошибок синхронизации для атак [Lite] ===

ошибки синхронизации потоков встречаются так же часто как переполняющиеся буфера и, точно так же как и переполняющиеся буфера, их можно использовать для удаленных атак с засылкой shell-кода, тем более, что пока от них никто не пытается защищаться, открывая тем самым огромные возможности для хакерства и первые ласточки (в смысле черви) уже выползли из гнезда…

  

[ **[[https://www.evilfingers.com/publications/research_RU/over-sync.lite.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/over-sync.lite|DOC**]]**]

=== латание windows своими руками ===

дыры в windows обнаруживаются регулярно, но заплатки зачастую выходят с большим опозданием, создавая угрозу атаки, для отражения которой можно (в качестве временного решения) "заштопать" дыру самостоятельно. отсутствие исходных текстов существенно усложняет эту задачу и чтобы облегчить ее решение была написана эта статья, дающая краткий обзор основных методик и приемов, используемых "кодокопателями".

  

[ **[[https://www.evilfingers.com/publications/research_RU/patchs-self.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/patchs-self|DOC**]]**]

=== латание windows своими руками [Lite] ===

дыры в windows обнаруживаются регулярно, но заплатки зачастую выходят с большим опозданием, создавая угрозу атаки, для отражения которой можно (в качестве временного решения) "заштопать" дыру самостоятельно. отсутствие исходных текстов существенно усложняет эту задачу и чтобы облегчить ее решение была написана эта статья, дающая краткий обзор основных методик и приемов, используемых "кодокопателями".

  

[ **[[https://www.evilfingers.com/publications/research_RU/patchs-self.lite.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/patchs-self.lite|DOC**]]**]

=== как защищают программное обеспечение ===

потребность в защитных механизмах растет с каждым днем, но качество их реализации падает вниз стремительным домкратом. давным-давно сломан HASP, FLEX LM, ASProtect и другие широко разрекламированные решения, лишний раз подтверждая, что вы не можете доверять никакому коду, кроме своего собственного, но что делать, если вы и себе не уверены? эта статья перечисляет основные ошибки, совершаемые разработчиками и дает советы по усилению защиты. предполагается, что читатель имеет достаточный опыт программирования, поскольку в силу драконических ограничений на объем детали реализации пришлось опустить.

  

[ **[[https://www.evilfingers.com/publications/research_RU/protect.overview.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/protect.overview|DOC**]]**]

=== восстановление данных на NTFS разделах ===

эта статья открывает цикл публикаций, посвященный ручному восстановлению данных на NTFS-дисках без использования автоматизированных "докторов", зачастую только добивающих "пациента" вместо его лечения. мы коснемся всех аспектов проблемы – логические и физические дефекты, жесткие диски и съемные носители (CD-ROM, ZIP, магнитооптика, FLASH…), программные и аппаратные RAID-массивы и т. д. сегодня мы рассмотрим основные концепции хранения и организации данных на жестких дисках и поговорим о восстановлении загрузочных областей (таблицы разделов, boot-секторов) на обычных и динамических разделах.

  

[ **[[https://www.evilfingers.com/publications/research_RU/recorever.boot.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/recorever.boot|DOC**]]**]

=== восстановление данных на NTFS разделах [Lite 1] ===

эта статья открывает цикл публикаций, посвященный ручному восстановлению данных на NTFS-дисках без использования автоматизированных "докторов", зачастую только добивающих "пациента" вместо его лечения. мы коснемся всех аспектов проблемы – логические и физические дефекты, жесткие диски и съемные носители (CD-ROM, ZIP, магнитооптика, FLASH…), программные и аппаратные RAID-массивы и т. д. сегодня мы рассмотрим основные концепции хранения и организации данных на жестких дисках и соберем необходимый инструментарий.

  

[ **[[https://www.evilfingers.com/publications/research_RU/recover.boot.part1.lite.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/recover.boot.part1.lite|DOC**]]**]

=== восстановление данных на NTFS разделах [Lite 2] ===

сегодня мы продолжим говорить о восстановлении данных, сосредоточив свое внимание на загрузочных секторах, таблицах разделов, динамических дисках и всех сопутствующих им служебных структурах.

  

[ **[[https://www.evilfingers.com/publications/research_RU/recover.boot.part2.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/recover.boot.part2|DOC**]]**]

=== восстановление удаленных файлов под Linux ===

каждый из нас хотя бы однажды удалял ценный файл (а то и весь корневой каталог целиком!). резервной копии нет. времени на поиски утилит для восстановления — тоже. как быть? к счастью, все необходимое уже включено в ваш любимый дистрибьютив и всегда находится под рукой. если говорить кратко: debugfs, lsdel, stat, cat, dump, undel. если чуть подлиннее — читайте эту статью, рассказывающую о восстановлении данных на ext2fs и отчасти ext3fs разделах.

  

[ **[[https://www.evilfingers.com/publications/research_RU/recover.ext23fs.undel.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/recover.ext23fs.undel|DOC**]]**]

=== восстановление удаленных файлов под Linux [Lite] ===

каждый из нас хотя бы однажды удалял ценный файл (а то и весь корневой каталог целиком!). резервной копии нет. времени на поиски утилит для восстановления — тоже. как быть? к счастью, все необходимое уже включено в ваш любимый дистрибьютив и всегда находится под рукой. если говорить кратко: debugfs, lsdel, stat, cat, dump, undel. если чуть подлиннее — читайте эту статью, рассказывающую о восстановлении данных на ext2fs и отчасти ext3fs разделах.

  

[ **[[https://www.evilfingers.com/publications/research_RU/recover.ext23fs.undel.lite.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/recover.ext23fs.undel.lite|DOC**]]**]

=== потоковое аудио/видео вещание с VideoLAN [Lite] ===

прошло то время, когда для открытия собственной радио/теле-станции требовалось приобретать дорогостоящее оборудование, а так же собирать множество лицензий, любая из которых могла быть отозвана в самый неподходящий момент. теперь достаточно скачать бесплатный программный комплекс VideoLAN и, немного повозившись с его настройками, вещать хоть на локальную сеть, хоть на весь Интернет с максимально доступным для данного канала качеством, или же использовать VideoLAN в качестве обычного медиа-плеера, поддерживающего множество входных форматов с возможностью записи чужого потокового медиаконтента на жесткий диск.

  

[ **[[https://www.evilfingers.com/publications/research_RU/VideoLAN.lite.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/VideoLAN.lite|DOC**]]**]

=== техника внедрения и удаления кода из PE-файлов ===

настоящая статья предпринимает попытку систематизации и классификации существующих алгоритмов внедрения в PE32/PE64-файлы, способов визуальной идентификации потенциально опасного кода и методов его удаления, а так же дает некоторые рекомендации по предотвращению вирусного вторжения. публикация рассчитана на широкий круг читателей, знакомых с языком Си, и имеющих опыт системного программирования на операционных системах семейства Windows 9x и Windows NT.

  

[ **[[https://www.evilfingers.com/publications/research_RU/virii.win32.ex.2.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/virii.win32.ex.2|DOC**]]**]

=== путь воина – внедрение в pe/coff файлы ===

статья подробно описывает формат PE-файлов, раскрывая особенности внутренней кухни системного загрузчика и двусмысленности фирменной спецификации, предостерегая читателя от многочисленных ловушек, подстерегающих его пути внедрения своего кода в чужие исполняемые файлы. здесь вы найдете большое количество исходных текстов, законченных решений и наглядных примеров, упрощающих восприятие материала (а то вот некоторые жалуются, что мои статьи слишком сложные и непроходимые, словно таежный лес, в то время как другие обвиняют их в чрезмерной простоте и откровенной "ламеризации" ой, простите, "юзеризации" материала). статья ориентирована главным образом на Windows NT/9x и производные от них системы, но так же затрагивает и проблему совместимости с Windows-эмуляторами, такими, например, как wine и doswin32.

  

[ **[[https://www.evilfingers.com/publications/research_RU/virii.win32.ex.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/virii.win32.ex|DOC**]]**]

=== защита web-контента от кражи ===

готовых систем для защиты web-контента достаточно много, но все они слишком сырые, ненадежные, плохо совместимые с браузерами отличными от IE и, как правило, небесплатные. вот почему большинство web-мастеров пытаются смастерить что-то минимально работающее "на коленках", многократно переоткрывая колесо и наступая на одни и те же грабли. в этой статье мы покажем как надо и как не надо защищать web-контент от гнусных посягательств.

  

[ **[[https://www.evilfingers.com/publications/research_RU/web-def.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/web-def|DOC**]]**]

=== защита web-контента от кражи [Lite] ===

готовых систем для защиты web-контента достаточно много, но все они слишком сырые, ненадежные, плохо совместимые с браузерами отличными от IE и, как правило, небесплатные. вот почему большинство web-мастеров пытаются смастерить что-то минимально работающее "на коленках", многократно переоткрывая колесо и наступая на одни и те же грабли. в этой статье мы покажем как надо и как не надо защищать web-контент от гнусных посягательств.

  

[ **[[https://www.evilfingers.com/publications/research_RU/web-def.lite.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/web-def.lite|DOC**]]**]

=== взлом без проводов ===

масштабное внедрение беспроводных устройств протекает довольно болезненно и то тут, то там появляются сообщения об их взломе, который уже давно превратился в настоящий радио-спорт для тинейджеров. попробуем разобраться насколько велика угроза и что можно противопоставить коварным хакерам.

  

[ **[[https://www.evilfingers.com/publications/research_RU/wireless.hack.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/wireless.hack|DOC**]]**]

=== потоковое аудио/видео вещание с VideoLAN ===

прошло то время, когда для открытия собственной радио/теле-станции требовалось приобретать дорогостоящее оборудование, а так же собирать множество лицензий, любая из которых могла быть отозвана в самый неподходящий момент. теперь достаточно скачать бесплатный программный комплекс VideoLAN и, немного повозившись с его настройками, вещать хоть на локальную сеть, хоть на весь Интернет с максимально доступным для данного канала качеством, или же использовать VideoLAN в качестве обычного медиа-плеера, поддерживающего множество входных форматов с возможностью записи чужого потокового медиаконтента на жесткий диск.

  

[ **[[https://www.evilfingers.com/publications/research_RU/VideoLAN.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/VideoLAN|DOC**]]**]

=== два компьютера - один монитор, два монитора - один компьютер (Lite) ===

чтобы обустроить свой рабочий стол воистину по-хакерски (всем пионерам на зависть) необходимо разобраться с хитросплетениями кабелей, научившись подключать к одному компьютеру несколько мониторов и, наоборот, "запитывать" свой основной монитор от нескольких компьютеров, объединяя их в домашний кластер или даже группу кластеров, перемалывающих пароли со скоростью реактивного истребителя на форсаже.

  

[ **[[https://www.evilfingers.com/publications/research_RU/2PC1MON-lite.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/2PC1MON-lite|DOC**]]**]

=== три истории из жизни пен-тестера: проникновение внутрь охраняемого периметра корпоративных сетей ===

если вы считаете, что ваша корпоративная сеть надежна защищена — вы заблуждаетесь. нет такой сети, которую нельзя было бы взломать, не прилагая особых усилий, не располагая специальным оборудованием и не прибегая к явному криминалу (физическому вторжению с огнестрельным оружием). имея за своими плечами многолетний опыт хакерских атак (естественно, осуществляемых с ведома и согласия "жертвы"), автор этой статьи хочет рассказать о наиболее типичных ошибках администраторов, существенно упрощающих процедуру взлома.

  

[ **[[https://www.evilfingers.com/publications/research_RU/3story.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/3story|DOC**]]**]

=== охота за 25 кадром ===

25му кадру предписываются магические свойства мощного психического воздействия на подсознание, позволяющие управлять человеком вплоть до полного зомбирования. народ паникует и власти некоторых стран запрещают его использование аж на законодательном уровне (причем, прецеденты приостановки лицензий на телевещание уже имеются). на самом деле, ничего загадочного в 25ом кадре нет и при желании его можно не только дизассемблировать, но и даже сконструировать своими собственными руками, чем мы сейчас и займемся.

  

[ **[[https://www.evilfingers.com/publications/research_RU/25frame.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/25frame|DOC**]]**]

=== жизнь после BSOD ===

все знают что такое BSOD (он же "голубой экран смерти" — Blue Screen Of Death). это последний вздох операционной системы, после которого она сбрасывает дамп и уходит на перезагрузку, теряя все не сохраненные данные. однако, на самом деле BSOD еще не конец и если перезагрузку заменить на реанимациею, в 9 из 10 случаев можно возвратиться в нормальный режим и успеть зашутданить систему перед тем, как она умрет окончательно.

  

[ **[[https://www.evilfingers.com/publications/research_RU/after-BSOD.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/after-BSOD|DOC**]]**]

=== ночь живых мертвецов — активная защита против малвари (Lite) ===

броня крепка и кони наши быстры! антивирусы в смысле. да где же мы быстрых антивирусов видели?! они же тормозят как… ну прямо как танки! и ни хвоста не ловят! а малварь идет косяками и если ее не прищемить, она сожрет все данные и даже ни разу не подавится. персональные брандмауэры отдыхают, тихо куря в сторонке. до сих пор _реально_ действующие защитные комплексы были доступны лишь крупным провайдерам, теперь же они приходят в массы!

  

[ **[[https://www.evilfingers.com/publications/research_RU/AMP-Snort-adds.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/AMP-Snort-adds|DOC**]]**]

=== энциклопедия антиотладочных приемов — самотрассировка и прочие головоломки (выпуск #04h) ===

сегодня мы будем ломать мыщъхиный crack-me, напичканный антиотадочными приемами, основанных на особенностях обработки исключений отладчиками и на ошибках в debug engine, о которых мыщъх расскажет по ходу дела, демонстрируя интимные подробности основных хакерских инструментов — ольги, иды, syser'а, x86emu и прочих отладчиков.

  

[ **[[https://www.evilfingers.com/publications/research_RU/anti-debug-04.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/anti-debug-04|DOC**]]**]

=== энциклопедия антиотладочных приемов — локальное хранилище потока или TLS callbacks выпуск #05h ===

загадочная аббревиатура tls таит в себе намного больше секретов, чем это может показаться на первый взгляд. это мощнейшее оружие против отладчиков и дизассемблеров. в комбинации с упаковщиками tls превращается в гремучую термитную смесь термоядерного типа. мыщъх представляет исчерпывающее руководство по приготовлению и взлому tls.

  

[ **[[https://www.evilfingers.com/publications/research_RU/anti-debug-05.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/anti-debug-05|DOC**]]**]

=== энциклопедия антиотладочных приемов — трассировка — в погоне на TF, игры в прятки выпуск #01h ===

обзор анти-отладочных приемов мы начнем с базовых понятий, фундаментальным из которых является трассировка, то есть пошаговое исполнение кода. сначала мы узнаем зачем нужна трассировка, как и в каких целях она используется отладчиками, по каким признаком защитный код может определить, что его трассируют и какие примочки к отладчикам позволят хакеру избежать расправы.

  

[ **[[https://www.evilfingers.com/publications/research_RU/anti-debug-#01.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/anti-debug-#01|DOC**]]**]

=== энциклопедия антиотладочных приемов — трассировка — в погоне на TF, SEH на виражах выпуск #02h ===

охота на флаг трассировки подходит к концу и дичь уже хрустит на зубах. продолжив наши эксперименты с TF-битом, мы познакомимся со структурными и векторными исключениями, выводящими борьбу с отладчиками в вертикальную плоскость, где не действуют привычные законы и приходится долго и нудно ковыряться в недрах системы, чтобы угадать куда в следующий момент будет передано управление и как усмирить разбушевавшуюся защиту.

  

[ **[[https://www.evilfingers.com/publications/research_RU/anti-debug-#02.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/anti-debug-#02|DOC**]]**]

=== помоги себе сам или обзор Anti-Spy.info ===

альтернативу антивирусам, брандмауэрам и прочим автоматизированным сторожам представляют программы, позволяющую заглянуть под "капот" системы и самостоятельно разобраться в ситуации. с одной из такой программ — Anti-Spy.Info – мы сегодня познакомимся поближе.

  

[ **[[https://www.evilfingers.com/publications/research_RU/anti-spy-info-review.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/anti-spy-info-review|DOC**]]**]

=== ремонт, обслуживание и эксплуатация APC UPS ===

имея многолетний опыт работы с различными моделями UPS фирмы American Power Conversion, эксплуатируемых в жестких условиях сельских энергосетей, мыщъх делится советами, которых вы не найдете ни в техническом руководстве, ни в какой другой книге: как продлить жизнь UPS или даже воскресить умерший агрегат, вернув его к жизни, не будучи при этом электронщиком и не имея под рукой никакой измерительной аппаратуры кроме китайского мулитиметра.

  

[ **[[https://www.evilfingers.com/publications/research_RU/APC-UPS.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/APC-UPS|DOC**]]**]

=== ассемблерные головоломки или может ли машина понимать естественный язык? ===

машинные коды для непосвященных выглядят бессмысленной абракадаброй — это знаю все. но вот о том, что можно подобрать такую текстовую строку, воспринимаемую процессором как последовательность команд, делающих что-то полезное — догадываются немногие. практической пользы от этого, конечно, немного, зато какая гимнастика для мозгов!

  

[ **[[https://www.evilfingers.com/publications/research_RU/asm_text.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/asm_text|DOC**]]**]

=== экстремальный разгон процессора ===

непрерывный мониторинг внутреннего состояния процессора позволяет значительно повысить его разгонный потенциал, автоматически подстраиваясь под характер запросов конкретных приложений, основываясь на показании счетчиков производительности, которые легко считать крохотной ассемблерной программой.

  

[ **[[https://www.evilfingers.com/publications/research_RU/asm-CPUext.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/asm-CPUext|DOC**]]**]

=== ассемблер — экстремальная оптимизация ===

ассемблер — это удивительный язык, открывающий дверь в мир больших возможностей и неограниченного самовыражения. состязания между программистами здесь — обычное дело. выигрывает тот, у кого нестандартный взгляд, необычный подход. зачастую, самое "тупое" решение — самое быстрое и правильное.

  

[ **[[https://www.evilfingers.com/publications/research_RU/asm-extoptimize.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/asm-extoptimize|DOC**]]**]

=== blue pill/red pill — the matrix has windows longhorn ===

совершенствование stealth-технологий в конечном счете (в середине 2006 года) привело к созданию rootlik'ов принципиально нового типа, которых практически невозможно обнаружить, а тем более остановить. стоит только компьютеру проглотить "голубую пилюлю" как операционная система погружается в виртуальный мир, полностью контролируемый rootkit'ом. прежний, реальный, мир перестает существовать и, чтобы увидеть его, необходимо проглотить "красную пилюлю", над созданием которой бьются лучшие хакерские умы, но… пока не слишком успешно.

  

[ **[[https://www.evilfingers.com/publications/research_RU/blue-pill.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/blue-pill|DOC**]]**]

=== охота за Голубым Зубом ===

голубой зуб наступает! поголовье bluetooth-устройств стремительно нарастает, обрушиваясь на рынок снежной лавной. реклама утверждает, что протокол передачи данных надежно защищен, но эта защита легко расстреливается снайперской винтовкой с расстояния в несколько километров. хакеры уже давно ломают голубые зубья и эта статья рассказывает как.

  

[ **[[https://www.evilfingers.com/publications/research_RU/Bluetooth.hack.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/Bluetooth.hack|DOC**]]**]

=== взлом борландии ===

начинающие хакеры обычно испытывают большие трудности при взломе программ, написанных на DELHI и BUILDER, поскольку классические трюки, типа бряк на GetWindowTextA, не работают и чтобы не пилить серпом по яйцам (не блуждать во тьмах) требуется учитывать особенности библиотеки VCL, которая только с виду кажется неприступной, а действительности ломается даже проще, чем "чистые" Си-программы!

  

[ **[[https://www.evilfingers.com/publications/research_RU/borland-crk.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/borland-crk|DOC**]]**]

=== захват чужих ботнетов ===

воодушевленные разрушительной силой вирусных эпидемий, хакеры начали оснащать своих червей механизмами удаленного управления, превратив их в покорный инструмент с практически неограниченными возможностями применения. армада червей будет подчинятся любому, кто сможет подчинить ее себе, а подчинить ее проще простого…

  

[ **[[https://www.evilfingers.com/publications/research_RU/botnet.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/botnet|DOC**]]**]

=== бунт машин, восстание червей, парад багов в браузерах ===

кто верит в магомета, кто в аллаха, кто в иссуса, а кто-то в браузеры без дыр. попытка оспорить постулат веры приводит к священным войнам — декалитрам крови и гигабайтам флейма. провокация? нет, всего лишь статья в которой мы объективно сравниваем различные типы браузеров на предмет безопасности по куче критериев сразу, подтверждая сказанное не только всем весом своего авторитета (мыщъх'и они вообще немного весят), но и обширным фактическим материалом.

  

[ **[[https://www.evilfingers.com/publications/research_RU/bro-bugs.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/bro-bugs|DOC**]]**]

=== особенности печати в Linux принтерами фирмы Brother ===

поддержка Linux'а становится очень актуальной, особенно когда разговор заходит о государственных учреждениях, где Linux чувствует себя довольно уверенно, составляя существенную конкуренцию продукции Microsoft, однако, за открытость и бесплатность Linux'а приходится расплачиваться большим количеством проблем, в том числе связанных с поиском, установкой и настройкой драйверов различных устройств. фирма Brother поддерживает Linux, но Linux-сообщество (пока) не поддерживает фирму Brother со всеми вытекающими отсюда последствиями, рикошетом ударяющими по конечному пользователю.

  

[ **[[https://www.evilfingers.com/publications/research_RU/brother-MFC.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/brother-MFC|DOC**]]**]

=== управление печатающими устройствами программным обеспечением фирмы brother ===

эффективное управление печатающими устройствами немыслимо без специализированного программного обеспечения (штатные средства windows для этой цели не подходят и создают больше проблем, чем их решают). фирма brother (продукция которой хорошо известна и пользуется большим уважением на российском рынке) выпустила комплект утилит BrAdmin Professional, Web BRAdmin и BrAdmin Light, облегчающих системному администратору его и без того нелегкую жизнь и, кстати говоря, работающих не только с принтерами от самой brother, но и поддерживающих продукцию сторонних производителей!

  

[ **[[https://www.evilfingers.com/publications/research_RU/brother-soft.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/brother-soft|DOC**]]**]

=== техника переполнения кучи в xBSD ===

атаки на кучу (она же динамическая память) приобретают все большую популярность, но методы переполнения, описанных в доступных хакерских руководствах, по ходу дела оказываются совершенно неработоспособными. рассчитанные на древние системы, они не в курсе, что в новых версиях все изменилось. более того, Free-, Net- и Open-BSD используют _различные_ стратегии защиты кучи, особенности строения которой необходимо учитывать при написании exploit'ов. мыщъх проделал титаническую работу, исследовав _все_ версии _всех_ BSD-систем и теперь не успокоится пока не поделится добытой информации с читателями.

  

[ **[[https://www.evilfingers.com/publications/research_RU/BSD-heap-overflow.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/BSD-heap-overflow|DOC**]]**]

=== чтение и запись NTFS разделов под Linux/BSD ===

половина пользователей Linux/BSD уверена, что поддержка NTFS в них отсутствует. другая половина знает, что NTFS-тома доступы по крайней мере на чтение, но писать они опасаются, наслушавшись ужасных историй о разрушенных данных десятилетней давности, когда уже лет пять как драйвера отлажены и достаточно стабильны. однако, в работе с NTFS есть куча тонкостей, игнорирование которых приводит к развалу файловой системы. как избежать краха? как восстановить поломанный том? мыщъх знает. и не только знает, но и рассказывает.

  

[ **[[https://www.evilfingers.com/publications/research_RU/BSD-NTFS.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/BSD-NTFS|DOC**]]**]

=== переполнение буферов как средство борьбы с мега корпорациями ===

Грязное небо обречено плывущее над верхушками безликих бетонных небоскребов, погрязших в вонючей жиже потребительского барахла. Тотальная власть тирании мегакорпораций. Абсолютная закрытость информации и полное отсутствие свободы выбора… Это не воспаленная фантазия обкуренных фантастов. Это – реальность, которой с каждым днем все труднее и труднее противостоять. Дизассемблирование в ряде стран уже запрещено. Публичное описание технических деталей хакерских атак и уязвимостей на пороге запрета. Но все же, при всей своей мощи, мегакорпорации чрезвычайно уязвимы. Программное обеспечение дыряво до невозможности и чем больше заплат накладывается на продукт, тем уродливее и неустойчивее он становится. Так ударим же хакерским автопробегом по виртуальному бездорожью! предыдущий.

  

[ **[[https://www.evilfingers.com/publications/research_RU/buf.A.class.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/buf.A.class|DOC**]]**]

=== войны юрского периода II –черви возвращаются ===

Мы живем в неспокойное время. Интернет содрогается под ударами червей, и их активность стремительно усиливается. Ветер перемен приносит не только обрывки уничтоженной информации, но и свежесть надвигающейся бури. На горизонте собираются тучи, подсвечиваемые сполохами молний и подтверждающие серьезность своих намерений громовыми раскатами. Пять опустошительных эпидемий за три последних года, миллионы зараженных машин. И все из-за ошибок переполнения! Только по счастливой случайности и незлобному настрою вирусописателей, ни один из червей ни уничтожал информацию. А ведь мог бы! Только представьте, что произойдет с земной цивилизаций, если стратегически важные узлы лишатся всех своих данных. А ведь это произойдет… со временем…

  

[ **[[https://www.evilfingers.com/publications/research_RU/buf.B.worm.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/buf.B.worm|DOC**]]**]

=== спецификаторы под арестом или дерни printf за хвост ===

строки форматного вывода и спецификаторы не относятся к козырному оружию хакера. к ним прибегают лишь от бессилия, когда все остальные средства исчерпали себя, так и не дав результата. но загнанная в угол крыса загрызает собаку. забытый в казарме нож может стоить жизни. в конечном счете никто из нас не знает, что ему пригодиться. так почему бы вам не овладеть техникой фехтования спецификаторами? alt:строки форматного вывода представляют собой оружие многоцелевого назначения и хотя сфера их применения ограничена, а базирующиеся на них атаки немногочисленны и редки, владеть этой техникой необходимо хотя бы уже затем, чтобы не попасть впросак.

  

[ **[[https://www.evilfingers.com/publications/research_RU/buf.C.printf.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/buf.C.printf|DOC**]]**]

=== техника написания переносимого shell-кода ===

shell-код никогда заранее не знает куда попадет, поэтому он должен уметь выживать в любых условиях, автоматически адаптируясь под конкретную операционную систему, что не так-то просто сделать. подавляющее большинство хакеров именно на этом и прокалывались. немногие выжившие в поединке дали миру киберпространства то, в чем нуждались десятки червей, вирусов и их создателей…

  

[ **[[https://www.evilfingers.com/publications/research_RU/buf.D_API.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/buf.D_API|DOC**]]**]

=== SEH на службе контрреволюции ===

перезапись SEH-обработчика – это модный и относительно молодой механизм борьбы с защитой от переполнения буферов в Windows 2003 Server, также находящий себе и другие применения. это отличный способ перехвата управления и подавления сообщений о критических ошибках, демаскирующих факт атаки.

  

[ **[[https://www.evilfingers.com/publications/research_RU/buf.E.SEH.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/buf.E.SEH|DOC**]]**]

=== ultimate adventure или поиск дыр в двоичном коде ===

исходные тексты LINUX'а и других OpenSource систем в прямом смысле этого слова зачитаны до дыр и найти здесь что-то принципиально новое очень трудно. Windows – другое дело. непроходимые джунгли двоичного кода отпугивают новичков и огромные территории дизассемблерных листингов все еще остаются неизведанными. причудливые переплетения вложенных вызовов скрывает огромное количество грубых программистских ошибок, дающих неограниченную власть над системой. попробуйте их найти, а я покажу как.

  

[ **[[https://www.evilfingers.com/publications/research_RU/buf_bin.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/buf_bin|DOC**]]**]

=== дизассемблирование C# программам от A до Z ===

победоносное шествие .NET-платформы по миру все продолжается и продолжается, а вменяемых руководств по взлому как-то не наблюдается… сегодня мы расскажем как дизассемблировать Visual Basic/C# сборки (включая Cи++ программы откомпилированные в байт-код), как их патчить в hiew'е, вести отладку на уровне байт-кода, словном, заправим мозговые баки свежей порцией авиационного керосина, выведем двигатели на взлетный режим и дадим хороший старт, написав свой собственный crackme и тут же взломав его всеми доступными средствами.

  

[ **[[https://www.evilfingers.com/publications/research_RU/C#-diz.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/C#-diz|DOC**]]**]

=== кардинг по новому ===

одни хакеры ломают программы, другие — платежные системы. они не вламываются как грабители среди бела и дня и не кричат руки вверх мать вашу! они действуют скрытно, заметают следы и их очень-очень трудно найти. хоте узнать как реально работают кардеры? тогда вот эта статья!

  

[ **[[https://www.evilfingers.com/publications/research_RU/carding-new.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/carding-new|DOC**]]**]

=== ремонт CD/DVD приводов в домашних условиях ===

…будучи сложными электронно-оптико-механическими устройствами, CD/DVD-приводы относятся к самым ненадежным компонентам компьютера. причины поломок могут быть самыми разнообразными. чаще всего дохнет или теряет свою эмиссию лазер, еще чаще вылетает чипсет, особенно если оба двигателя привода и катушки фокусировки лазера навешаны на одну-единственную микросхему. про механические поломки и загрязнение оптических поверхностей я уже и не говорю. реально ли отремонтировать отказавший привод в домашних условиях или проще не трахаться, а купить новый?

  

[ **[[https://www.evilfingers.com/publications/research_RU/CD.rep.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/CD.rep|DOC**]]**]

=== завоевание Интернета или кто сказал "мяу" ===

дыра, обнаруженная в маршрутизаторах CISCO и обнародованная на хакерской конференции Black Hat 2005 USA, наделала столько шуму, что попала на страницы некомпьютерных газет. о ней много пишут, но все как-то в общих словах никакой конкретики. говорят о скором конце Интернета, пугают захватом управления над магистральными каналами связи, но исходных кодов эксплоита не показывают…

  

[ **[[https://www.evilfingers.com/publications/research_RU/CISCO.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/CISCO|DOC**]]**]

=== знакомство с багами или ошибки клиентских приложений ===

ошибки вездесущи. они сидят в любом приложении. стоит только тряхнуть посильнее и баги посыплются как перезревшие яблоки с осеннего дерева. только подставляй карман! для червей и хакеров это самый настоящий деликатес — источник великой силы, разбивающий оковы и открывающий все двери. забудем про вопросы "добра" и "зла" и познакомимся с ошибками поближе.

  

[ **[[https://www.evilfingers.com/publications/research_RU/client.err.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/client.err|DOC**]]**]

=== малоизвестные способы взлома клиент. программ или stealth-patching своими руками ===

борьба с защитами идет по всем направлениям и хакерские методики стремительно совершенствуются, уходя в конкретный отрыв от земли. между тем широкой крякерской общественности о них ничего неизвестно. ходят какие-то неясные слухи, но пошаговой инструкции взлома никто не предлагает. то есть, как это не предлагает? а мыщъх на что? известный квази-грызун делится некоторыми малоизвестными способами взлома клиентских приложений.

  

[ **[[https://www.evilfingers.com/publications/research_RU/client.hack.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/client.hack|DOC**]]**]

=== секреты командного интерпретатора ===

системы удаленного администрирования пользуются огромной популярностью и свежие версии идут нарасхват, поскольку прежние уже давно ловятся антивирусами. а антивирусы – это саксь и мас дай. к тому же настоящий хакер не может позволить себе зависеть от сторонних разработчиков, и весь необходимый инструментарий он должен уметь создавать самостоятельно. тем более, что ничего сложного в этом нет…

  

[ **[[https://www.evilfingers.com/publications/research_RU/cmd.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/cmd|DOC**]]**]

=== работа в команде — пособие по выживанию ===

почему-то все преимущественно говорят о технике _создания_ команды, чему посвящено множество статей, книг, семинаров и на выбор руководителя предлагается ряд методик, отработанных годами. но вот как _выжить_ в команде, реализовав свой творческий потенциал, обычно предпочитают умалчивать.

  

[ **[[https://www.evilfingers.com/publications/research_RU/cmd-srv.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/cmd-srv|DOC**]]**]

=== разбор коры в Linux и xBSD ===

как умру, похороните, на могильной плите напишите: "segmentation fault (core dumped)"… когда никсовая программа умирает, ее кора отделяется от эльфа и попадает в специальный файл, хранящий последний вздох усопшей. это словно "черный ящик", устанавливаемый на борту самолета и позволяющий реконструировать причины катастрофы при падении. записанная на древнем языке машинных кодов, кора подвластна только гуру, магам и чародеям. однако, с помощью магического свитка этой статьи даже простые смертные юзеры смогут приобщится к тайне, выучив пару-тройку волшебных заклинаний.

  

[ **[[https://www.evilfingers.com/publications/research_RU/core-linux.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/core-linux|DOC**]]**]

=== взлом через покрытие ===

мыщъх делится ### в этой статье описывается ### быстрый и эффективный метод взлома, основанный на анализе сравнения трасс программы до и после срабатывания защитного механизма, что позволяет мгновенно локализовать его дислокацию даже во многомегабайтной программе.

  

[ **[[https://www.evilfingers.com/publications/research_RU/coverage.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/coverage|DOC**]]**]

=== crackme, прячущий код на API-функциях ===

сейчас мы будем занимается увлекательным делом — писать crackme и пытать его на предмет взлома, а crackme будем молчать как партизан, потому что прячет защитный код на API-функциях, где до него не может дотянуться ни дизассемблер, ни дампер, ни даже отладчик. это древний прием, уходящий своими корнями в эпоху MS-DOS, но ничуть не хуже работающий и в мире Windows.

  

[ **[[https://www.evilfingers.com/publications/research_RU/crackme-APIthunk.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/crackme-APIthunk|DOC**]]**]

=== как подделывают CRC16/32 ===

алгоритм хеширования CRC16/32 считается несокрушимым и никто (исключая, быть может, богов) не может восстановить оригинальное содержание по контрольной сумме, но модифицировать файл так, чтобы его CRC16/32 не изменилось — проще просто. вот об этом мы и будем говорить!

  

[ **[[https://www.evilfingers.com/publications/research_RU/CRC32-reverse.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/CRC32-reverse|DOC**]]**]

=== проблемы создания CRM-систем: взгляд изнутри ===

если бы программисты строили дома, то первый залетевший дятел разрушил бы всю цивилизацию. у этой проблемы есть два решения: строить дома по уму или создать автоматизированную систему отстрела дятлов, которая в свою очередь потребует еще одной системы для своего обслуживания и так до бесконечности как в старой арабской сказке. качество программного обеспечения невелико и продолжает ухудшаться с каждым годом. почему? автор, принимавший опосредственное участие в создании нескольких CRM систем, решил поделиться с читателями некоторыми пикантными особенностями их производства.

  

[ **[[https://www.evilfingers.com/publications/research_RU/CRM-dyn.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/CRM-dyn|DOC**]]**]

=== сишные трюки (0xB выпуск) ===

сегодняшний выпуск трюков всецело посвящен хитроумным приемам программирования, затрудняющим дизассемблирование и отладку откомпилированной программы, то есть увеличивающих ее сопротивляемость взлому, причем все это — без всякого ассемблера и других шаманских ритуалов!

  

[ **[[https://www.evilfingers.com/publications/research_RU/C-tricks-0Bh.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/C-tricks-0Bh|DOC**]]**]

=== сишные трюки (9й выпуск) ===

Типизация, призванная оградить программиста от совершения ошибок, хорошо работает лишь на бумаге, а в реальной жизни порождает множество проблем (особенно при низкоуровневом разборе байтов), решаемых с помощью явного преобразования типов или, другим словами "кастинга" (от английского "casting").

  

[ **[[https://www.evilfingers.com/publications/research_RU/c-triks-9.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/c-triks-9|DOC**]]**]

=== сишные трюки от мыщъха ===

мыщъх продолжает делиться трюками и хитростями эффективного программирования на си. сегодня мы рассмотрим: строки, указатели, циклы, память и многое другие аспекты практического программирования, которые наверняка вызовут дикий "вой" у всех теоретиков от языка, но… они работают и это главное!

  

[ **[[https://www.evilfingers.com/publications/research_RU/c-triks-II.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/c-triks-II|DOC**]]**]

=== как избежать катастрофы? ===

От разрушения данных не застрахован никто, но при правильной политике резервирования вся процедура восстановления сводится к замене негодного винчестера на новый и переписыванию данных с архивного накопителя. Восстанавливать данные на старый диск даже при логических разрушениях категорически недопустимо, т. к. если в процессе копирования выяснится, что резервный носитель испорчен, вам придется делать харакири, поскольку вы только что лишились и оригинала, и копии.

  

[ **[[https://www.evilfingers.com/publications/research_RU/ddd.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/ddd|DOC**]]**]

=== охфисы: живые и мертвые ===

появление концепции "живого офиса" (life-office), работающего непосредственно через интернет, осталось незамеченной широкими кругами общественными (да и метафора так себе, выходит, что все традиционные офисные пакеты ,используемые до этого, — они не живые, а мертвые?!) Россиян эта проблема вообще не волнует, поскольку "живой" офис требует постоянного и притом высокоскоростного канала, а многие до сих пор сидят на dial-ip'е или выходят в сеть через тормозной GPRS. тем не менее сама тенденция выглядит _очень_ угрожающий и воображение рисует мрачные картины тотального контроля и монополизации…. можем ли мы остановить надвигающую чуму XXI века?

  

[ **[[https://www.evilfingers.com/publications/research_RU/dead-life-office.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/dead-life-office|DOC**]]**]

=== техника отладки приложений без исходных кодов ===

практически все знают, что программы взламываются отладчиком, но не все знают как. на самом деле, ничего сложного в этом нет. достаточно выучить несколько простых приемов и уже можно начинать ломать.

  

[ **[[https://www.evilfingers.com/publications/research_RU/debug.tech.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/debug.tech|DOC**]]**]

=== дежавю, нейросети и спам ===

что такое дежавю наверняка знает каждый, а кто не знает — тот может прочитать на вике, выбрав из кучи гипотез наиболее симпатичную и привлекательную (какая разница что выбирать? все они не состоятельны), поэтому представляет интерес поговорить о том, чего на вике нет, рассмотрев феномен дежавю с точки зрения последних достижений кибернетики. чувство нереальности происходящего, зачастую сопровождаемое беспричинным страхом и ощущение, что все это уже когда-то было, а теперь повторяется вновь, и мы даже знаем, что в следующее мгновение произойдет это дежавю — бесценный дар природы, мощнейший механизм предсказания вероятностных событий, которого нужно не бояться, а учиться управлять им!

  

[ **[[https://www.evilfingers.com/publications/research_RU/DejaVu.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/DejaVu|DOC**]]**]

=== деприпривация сна — советы от мыщъх'а ===

программисты относятся к тем людям, которым хронически не хватает времени — ударные темпы работы, куча различной документации, тонны спецификаций и десятки книг, не говоря уже о форумах, конференциях и прочих интересных вещах, окружающих нас. и ведь так хочется везде успеть и все узнать! неудивительно, что многие черпают недостающее время за счет сокращения сна, что позволяет не только переделать все дела, повысить кретивность, избавиться от депрессии, но и испытать измененное состояние сознание с аудио-/видео-галлюцинациями на легальных основаниях. однако, деприпривация сна (а именно так называется это явление) — довольно сложный процесс, далеко выходящий за рамки "вот не буду спать и все тут". мыщъх, практиковавший subj на протяжении десятилетий, делится своим собственным опытом и размышлениями по поводу и без.

  

[ **[[https://www.evilfingers.com/publications/research_RU/deprivation.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/deprivation|DOC**]]**]

=== распределенные хранилища информации ===

лучший способ сохранить информацию — разделить ее с миром (в смысле поделиться с друзьями). это общеизвестный факт! давайте попробуем автоматизировать процесс дележа, чтобы компьютер самостоятельно "рассеивал" данные по локальной сети…

  

[ **[[https://www.evilfingers.com/publications/research_RU/distributed-storage.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/distributed-storage|DOC**]]**]

=== троянизация приложений — технологии XXI века ===

в хакерской практике достаточно часто возникает потребность внедрить в готовый exe-файл свой код (не обязательно вредоносный ;-) так, чтобы он получал управление первым, не вызывал ругательств со стороны антивирусов и вообще по возможности вел себя максимально скрытно, не бросаясь в глаза. как это сделать? мыщъх знает как. и сейчас обстоятельно расскажет. но сначала слегка покурит. итак…

  

[ **[[https://www.evilfingers.com/publications/research_RU/dllmain.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/dllmain|DOC**]]**]

=== пираты карибского моря в локальной сети: погоня за DNS и воздвижение защитной стены ===

приватные локальные сети (получившие большую распространенность в последнее время) оказались совершенно беззащитными перед DNS-атаками, позволяющими перехватывать чужой трафик, а так же скрытно перенаправлять жертву на подложные сайты, занимающиеся сбором паролей или другой хакерской деятельностью. как реализуются такие атаки? можно ли от них защититься? вот об этом мы сейчас и поговорим!

  

[ **[[https://www.evilfingers.com/publications/research_RU/DNS-attack.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/DNS-attack|DOC**]]**]

=== смертельная схватка — атака на DNS: Дэн Каминский против Криса Касперски белые начинают и проигрывают ===

Дэн Каминский, сообщивший о дыре в DNS, вызвал бурный интерес общественности, подогреваемый замалчиванием деталей атаки, но хакеры реконструировали цепь событий, создав боевые exploit'ы, блокируемые только самыми свежими заплатками, проанализировав которые, мыщъх обнаружил намного более серьезные дыры чем Каминский…

  

[ **[[https://www.evilfingers.com/publications/research_RU/DNS-dk-kk.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/DNS-dk-kk|DOC**]]**]

=== безопасность DNS — вопросы без ответов, ответы в пустоту ===

DNS-протокол, ставший неотъемлемой частью всемирной сети, крайне небезопасен по своей природе, что делает его весьма привлекательным для хакеров, вынуждающих производителей выпускать многочисленные исправления. последняя крупная реконструкция состоялась в августе 2008 года, однако, не успела она завершиться как хакеры предложили новые типы атак, пробивающих свежие заплатки и все вернулась на круги своя. представляет интерес рассмотреть эволюцию защитных средств — быть может, это подскажет нам, что ждет нас в будущем.

  

[ **[[https://www.evilfingers.com/publications/research_RU/DNS-tend.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/DNS-tend|DOC**]]**]

=== windows на одной дискете ===

штатная конфигурация Windows весит сотни мегабайт, с каждым годом становясь все тяжелее и тяжелее. тем не менее, в максимально урезанном варианте система свободно умещается на одну дискету вместе с FAR'ом и парой-тройкой мелких программ. это чудо осуществляется с помощью утилиты doswin32, созданной гениальным хакером и удивительным человеком Юрием Хароном, о которой мы и собираемся рассказать.

  

[ **[[https://www.evilfingers.com/publications/research_RU/doswin32.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/doswin32|DOC**]]**]

=== колем дрова без помощи топора ===

если бы Microsoft строила автомобили, или здания… нашей цивилизации уже бы давно пришел конец. а все потому, что Microsoft _никогда_ бы не стоила ни того, ни другого. максимум предоставляя железобетонный каркас с шасси, на которых инженеры-пионеры цепляют что-то совершенно непотребное. в пресловутых экранах смерти и нестабильной работе Windows в подавляющем большинстве случаев виноваты драйвера _сторонних_ производителей и сейчас мыщъх расскажет как их обнаружить и удалить из системы.

  

[ **[[https://www.evilfingers.com/publications/research_RU/drivers.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/drivers|DOC**]]**]

=== Stealth-руткит нового поколения под Linux: охота на невидимку — ужас, переходящий в комедию ===

хакерская команда Immunity (известная своим клоном Ольги) в начале октября 2008 выпустила руткит под Linux 2.6, который средства массовой дезинформации уже окрестили принципиально новым и совершенно неуловимым, шокировав общественность мрачными картинами надвигающейся схватки антивирусов (которых под Linux практически нет) с чудовищным демоном имя которому DR-rootkit. а как все обстоит на самом деле?

  

[ **[[https://www.evilfingers.com/publications/research_RU/DR-rootkit.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/DR-rootkit|DOC**]]**]

=== скрытые возможности DSL модемов ===

после неторопливого Dial-Up'соединения, пронырливый DSL-модем кажется чудом! данные льются на жесткий диск стремительным гигабитным потоком, но… аппетит, как водится, приходит во время еды и через некоторое время ширины канала уже начинает не хватать и появляется желание хоть как-то его расширить, естественно, без дополнительных капиталовложений.

  

[ **[[https://www.evilfingers.com/publications/research_RU/DSL-hide.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/DSL-hide|DOC**]]**]

=== проблемы DVD на широкоформатных экранах ===

большинство лицензионных DVD не соответствуют критериям качества. записанные с грубыми нарушениями стандарта, они порождают многочисленные проблемы при их просмотре, особенно на широкоформатных домашних кинотеатрах. часть ошибок может быть устранена путем ремастеринга DVD на домашнем ПК, часть — лишь ослаблена до некоторой степени, чтобы просмотр фильма вызывал удовольствие, а не отвращение. сегодня в нашей тестовой лаборатории мы исследуем три популярных фильма на предмет соблюдения важнейшей потребительской характеристики — разрешения.

  

[ **[[https://www.evilfingers.com/publications/research_RU/DVD-aspect.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/DVD-aspect|DOC**]]**]

=== вооружение и разоружение DVD-проигрывателей или взгляд на линух из подвала китайца Ляо ===

часть людей предпочитает смотреть видео на компьютере, часть — использует для этой цели автономные DVD-проигрыватели главным недостатком которых является плохая поддержка "левых" MPEG4-форматов. народ во всю потрошит прошивки, но заснуть в аппарат новую версию кодека — задача, прямо скажем, не тривиальная. но знание никсов дает нам сто очков вперед.

  

[ **[[https://www.evilfingers.com/publications/research_RU/DVD-disarm.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/DVD-disarm|DOC**]]**]

=== правильный DVD-Rip своими руками, лапами, хвостом и усами ===

по сети гуляет огромное количество кривых DVD-Rip'ов, созданных непрофессионалами, и страдающих хроническим расстройством пищеварения и без тошноты смотреть их невозможно. а все потому, что сплошь и рядом используются полностью автоматические riper'ы с уровнем интеллекта не выше чем у дождевого червя. правильный rip – очень серьезное дело и доверять его автоматике ни в коем случае нельзя!

  

[ **[[https://www.evilfingers.com/publications/research_RU/DVDRip.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/DVDRip|DOC**]]**]

=== правильный DVD-Rip своими руками, лапами, хвостом и усами II (окончание) ===

сегодня мы продолжим углубление в тонкости "ручного" DVD-Rip'а, созданного по всем правилам науки, искусства и техники, который занимает минимум места, максимально совместим со всем и который при этом приятно смотреть.

  

[ **[[https://www.evilfingers.com/publications/research_RU/DVDRip-2.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/DVDRip-2|DOC**]]**]

=== вся правда о динамических дисках ===

динамические диски таят в себе множество загадок и скрытых подводных камней, отношение администраторов к ним далеко не однозначно и они уже успели подпортить себе репутацию, загубив немало данных, восстановление которых стоит денег и к тому же далеко не всегда обратимо. мыщъх, специализирующийся на "подъеме" файловых систем после падения, раскурил эту тему сразу же после того как получил диск с W2K и за это время нарыл немало полезной инфы, которой и делится с читателями.

  

[ **[[https://www.evilfingers.com/publications/research_RU/dyn-disks-truth.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/dyn-disks-truth|DOC**]]**]

=== секреты покорения эльфов ===

если загрузить исполняемый файл в hex-редактор, мы увидим цифры. много цифр. можно нажать на ноль, наслаждаясь как машинный код стирается под натиском нашей силы, но… это слишком просто и неинтересно. лучше собраться с умом и дописать несколько осмысленных ассемблерных строк! эта статья рассказывает о том, как устроены ELF-файлы, как они загружаются в память и как хакеры внедряют в них свои имплантанты.

  

[ **[[https://www.evilfingers.com/publications/research_RU/ELF-trj.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/ELF-trj|DOC**]]**]

=== $100.000 в неделю без затрат и телодвижений ===

хотите реальный рецепт как заработать кучу денег, не вступая в конфликт с законом, а только со своей совестью? не требуется никаких начальных вложений, только компьютер, Интернет (не обязательно скоростной) и… знание английского (хотя бы на уровне средней школы). это не развод! точнее, развод, но не вас.

  

[ **[[https://www.evilfingers.com/publications/research_RU/emoney-profit.updated.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/emoney-profit.updated|DOC**]]**]

=== сравнительный анализ эмуляторов ===

несколько лет назад основным оружием хакера был дизассемблер и отладчик. теперь же к ним добавляется еще и эмулятор, открывающий перед кодокопателями поистине безграничные возможности, ранее доступные только крупным компаниям, а теперь ставшие привычным атрибутом любого исследователя. что же это за эмуляторы такие и какие именно возможности они открывают?

  

[ **[[https://www.evilfingers.com/publications/research_RU/emu.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/emu|DOC**]]**]

=== малварь нового поколения или надругательство над точкой входа ===

в сентябре 2008 датчики распределенных антивирусных сетей зафиксировали необычную активность — эпидемия малвари нового поколения начала свое распространение практически одновременно с Индонезии, Вьетнама и Таиланда, обходя антивирусные преграды на форсаже. мыщъх с алиской это дело раскрутили, написав пару POC'ов, демонстрирующих технику сокрытия истинной точки входа в файл, что актуально не только для зловредных программ, но и для легальных протекторов.

  

[ **[[https://www.evilfingers.com/publications/research_RU/EP-abusers.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/EP-abusers|DOC**]]**]

=== аспект мнения мыщъха по некоторым вещам ===

В дизассемблировании намного больше искусства, чем науки. И хотя машинный анализ делает огромные успехи (достаточно взглянуть на последние версии IDA Pro), "сердцем" любого декомпилятора по-прежнему является человек. Отличие констант от смещений до сих пор остается фундаментальной проблемой дизассемблирования (так называемая "проблема offset'а"). В двоичном виде их представление идентично, но интерпретируются они по-разному. Нераспознанные смещения в свою очередь не позволяют отличать данные от команд и это вторая фундаментальная проблема дизассемблирования. Наконец, дизассемблеры не справляются (точнее практически не справляются) с анализом виртуальных функций, зашифрованного и самомодифицирующегося кода, поэтому приходится запрягать дизассемблер и отладчик в одну упряжку — дизассемблер реконструирует "скелет" алгоритма, а отладчик расшифровывает запакованные фрагменты кода и уточняет значение регистров ЦП и ячеек памяти в данной точке.

  

[ **[[https://www.evilfingers.com/publications/research_RU/expert.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/expert|DOC**]]**]

=== SQL Injection/XSS ===

SQL Injection/XSS.

  

[ **[[https://www.evilfingers.com/publications/research_RU/exp-inj.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/exp-inj|DOC**]]**]

=== бесконтактные интерфейсы — компьютер управляемый взглядом ===

в последние годы на рынке появились множество относительно дешевых бесконтактных устройств ввода, подчиняющихся… простому человеческому взгляду! ориентированные главным образом на людей с ограниченными возможностями, они, тем не менее, нашли применение в играх, сматртфонах, цифровых фотоаппаратах и прочей бытовой технике. хотите узнать как работают бесконтактные интерфейсы и как соорудить подобное устройство самостоятельно? тогда — эта статья для вас!

  

[ **[[https://www.evilfingers.com/publications/research_RU/eye-control.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/eye-control|DOC**]]**]

=== FAQ по взлому клиентских приложений и безопасности сетевых протоколов ===

FAQ по взлому клиентских приложений и безопасности сетевых протоколов.

  

[ **[[https://www.evilfingers.com/publications/research_RU/faq.client.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/faq.client|DOC**]]**]

=== faq по спаму ===

faq по спаму.

  

[ **[[https://www.evilfingers.com/publications/research_RU/faq-smap.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/faq-smap|DOC**]]**]

=== FAQ в SPY интервью с разработчиком компьютерных шпионов ===

на вопросы хакера (X) отвечает молодой человек в темных очках, представившийся x-dragon'ом (D), с которым мы встретились на безлюдном берегу безымянной реки, где поговорили на темы кибернетического шпионажа.

  

[ **[[https://www.evilfingers.com/publications/research_RU/faq-spyxx.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/faq-spyxx|DOC**]]**]

=== моем файлы чисто-чисто-чисто или идеальный сервер для идеальной файлопомойки ===

администраторы накопили огромный опыт по воздвижению и эксплуатации "бюджетных" файловых серверов, среди которых с большим отрывом лидируют сервера на базе MS W2K3, ставшим стандартом де-факто. никсы в этой роли смотрятся недостаточно убедительно, доставляя техническому персоналу кучу проблем. впрочем, W2K3 тоже не идеал и чтобы раскрыть его потенциал, а заодно помочь начинающим администраторам избежать классических ошибок, и была написана эта статья.

  

[ **[[https://www.evilfingers.com/publications/research_RU/fileserver.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/fileserver|DOC**]]**]

=== обход брандмауэров снаружи и изнутри ===

большинство (если не все) корпоративных сетей ограждены по периметру недемократично настроенными брандмауэрами, защищающих внутренних пользователей от самих себя и отпугивающих начинающих хакеров вместе с кучей воинствующих малолеток. между тем, для опытного взломщика даже качественный и грамотно настроенный брандмауэр – не преграда.

  

[ **[[https://www.evilfingers.com/publications/research_RU/firewall.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/firewall|DOC**]]**]

=== проблемы пакетных фильтров ===

Пакетные фильтры относятся к самому быстрому типу брандмауэров (программные прокси они же брандмауэры уровня приложений работают на порядок тормознее, поскольку вынуждены полностью пересобирать TCP-пакеты, что значительно увеличивает латентность; с домашними и офисными локалками они еще справляются, но на высокоскоростных каналах оказываются категорически неприменимы).

  

[ **[[https://www.evilfingers.com/publications/research_RU/firewall.adtriuble.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/firewall.adtriuble|DOC**]]**]

=== преодоление firewall'ов снаружи и изнутри ===

понатыкали тут брандмауэров! житья от них никакого! даже в XP появилось какое-то подобие на firewall, сильно анноящее, но никак не работающее. народ только и спорит насколько эта штука нужная и можно ли ее обойти. можно! и хакерский хвост мыщъх'а сейчас покажет как!

  

[ **[[https://www.evilfingers.com/publications/research_RU/firewall.II.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/firewall.II|DOC**]]**]

=== обход брандмауэров снаружи и изнутри ===

большинство (если не все) корпоративных сетей ограждены по периметру недемократично настроенными брандмауэрами, защищающих внутренних пользователей от самих себя и отпугивающих начинающих хакеров вместе с кучей воинствующих малолеток. между тем, для опытного взломщика даже качественный и грамотно настроенный брандмауэр – не преграда.

  

[ **[[https://www.evilfingers.com/publications/research_RU/firewall.lite.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/firewall.lite|DOC**]]**]

=== методы обхода брандмауэров ===

брандмауэры (они же firewall'ы) сейчас используются повсеместно. их встраивают в DSL-модемы, WiFi-точки доступа, маршрутизаторы, операционные системы, антивирусы и другие программные пакеты типа SyGate Personal Firewall или Outpost. но так ли они надежды, как утверждает реклама?

  

[ **[[https://www.evilfingers.com/publications/research_RU/firewall_thr.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/firewall_thr|DOC**]]**]

=== почему не фаерволят фаерволы ===

вот стоит фаервол, неприступный как скала. наивный юзер свято верит, что никакой червь, троян или хакер через этот фаервол не перелезет. фиг там! фаеры блокируют лишь единичные вторжения и шанс подцепить заразу от наличия/отсутствия фаервола не зависит. точнее, _практически_ не зависит, поскольку большинство юзеров даже не пытаются сконфигурировать свой фаерок, а на все его вопросы не задумываясь отвечают "да". возможности фаеров, конечно же, не безграничны, но в умелых руках они превращаются в мощное оружие, отражающее значительный процент атак.

  

[ **[[https://www.evilfingers.com/publications/research_RU/firewall-common-err.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/firewall-common-err|DOC**]]**]

=== пять козырных трюков спаммеров и меры борьбы с ними ===

мало того, что спамеры вредоносны, так они еще дьявольски хитры и нереально изворотливы. у них все тузы и козыря. чтобы нас не развели как лохов, приходится предпринимать кучу мер предосторожности и держать ухо востро. как говориться, кто предупрежден — тот вооружен!!! рассмотрим основные трюки спаммеров и покажем как им противостоять.

  

[ **[[https://www.evilfingers.com/publications/research_RU/five-smammers-tricks.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/five-smammers-tricks|DOC**]]**]

=== тыбрим данные с flash-модулей и CD/DVD ===

как сграбить содержимое флешек и CD/DVD-носителей (включая удаленные файлы!), не нарушив ни один пункт закона и оставшись при этом непойманным, неразоблаченным и непобитым? мыщъх, покурив хорошей травы, разработал специальную технологию, описание которой и предлагает всем желающим (а так же нежелающим, но просто интересующимся).

  

[ **[[https://www.evilfingers.com/publications/research_RU/flash-grab.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/flash-grab|DOC**]]**]

=== вечная жизнь в играх своими руками ===

получить бессмертие и полный боекомплект практически в любой игре — это реально! потребуется всего лишь hex-редактор и несколько минут свободного времени. мыщъх делится древними алхимическими рецептами, дошедшими до нас со временен ZX-SPECTRUM и накопившими огромный потенциал. хвост так и чешется его реализовать!

  

[ **[[https://www.evilfingers.com/publications/research_RU/for-ever.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/for-ever|DOC**]]**]

=== свобода воли или предопределенность? ===

Каждый из нас в той или иной форме задумывается: насколько все предопределено, существует ли судьба и можно ли ее обойти? Фатализм (т. е. вера в неизбежность) очень удобен нытикам, перекладывающих ответственность за все промахи и неудачи на злодейку-судьбу, но большинство здравомыслящих людей все-таки хотят управлять свой жизнью самостоятельно.

  

[ **[[https://www.evilfingers.com/publications/research_RU/free-or-choice.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/free-or-choice|DOC**]]**]

=== захват чужих WEB-аккаунтов через дыры в FS ===

многопользовательские операционные системы (к которым относятся Linux и xBSD) содержат огромное количество ошибок, приводящих к утечкам данных и утрате конфиденциальности, что особенно актуально для "промышленных" серверов, обслуживающих тысячи пользователей, имеющих право на установку своих собственных программ (например, PHP-скриптов). в ходе широкомасштабного исследования, проведенного мыщъх'ом, выяснилось, что никсы содержат фундаментальные уязвимости, позволяющие злоумышленникам получать доступ к удаленным данным других пользователей, среди которых помимо мусора зачастую находится очень много интересных вещей!

  

[ **[[https://www.evilfingers.com/publications/research_RU/fs-seek.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/fs-seek|DOC**]]**]

=== спроси эксперта ох, и тяжела ты, служба системного администратора! ===

спроси эксперта ох, и тяжела ты, служба системного администратора!

  

[ **[[https://www.evilfingers.com/publications/research_RU/fstat.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/fstat|DOC**]]**]

=== защита игр от взлома ===

игру мало написать! еще ее необходимо защитить так, чтобы не взломали (или взломали, но не сразу), причем защита должна быть максимально простой и предельно безглючной. на эту тему написано множество статей (от обзорно-познавательных, до углубленных в частную проблему), но очень мало "рецептурных" справочников, доходчиво объясняющих куда идти и что делать без лишней воды.

  

[ **[[https://www.evilfingers.com/publications/research_RU/game.protect.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/game.protect|DOC**]]**]

=== games.mail.ru — универсальный взлом за 3 минуты ===

проект games.mail.ru "крышует" многие условно-бесплатные игры, работающие всего один час, а затем требующие денег (или расплаты натурой). народ бьется в истерике, разрывая свой хвост напополам — платить за софт у нас не принято и унизительно (это все равно что платить за секс), а играть-то хочется! причем, серийные номера меняются чуть ли не каждый день и кряки, найденные в сети, не срабатывают. между тем, существует простой, элегантный и _универсальный_ способ взлома, доступный даже продвинутым пользователям, не разбирающимся ни в дизассемблере, ни в секретах хакерства!

  

[ **[[https://www.evilfingers.com/publications/research_RU/game-mail-ru.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/game-mail-ru|DOC**]]**]

=== проблемы переносимости мобильных игр ===

рынок мобильных игр растет взрывообразно, а вместе с ним растет и программистский интерес. это лакомый кусок рынка и практически всякий, кто хотя бы однажды создавал игру для ПК начинает поглядывать в сторону сотовых телефонов. разработка игр для мобильных устройств — занятие действительно несложное, но есть нюансы.

  

[ **[[https://www.evilfingers.com/publications/research_RU/game-mobile.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/game-mobile|DOC**]]**]

=== сетевые игры — идеи и решения ===

в наш век коммуникационных технологий всякая уважающая игра должна поддерживать мульплейер, то есть режим с несколькими игроками, связанными локальной сетью, модемом или даже интернетом. на первый взгляд это просто, но попытка практической реализации открывает целый ворох проблем, зачастую требующих совсем необычных решений.

  

[ **[[https://www.evilfingers.com/publications/research_RU/game-net.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/game-net|DOC**]]**]

=== гонки на вымирание, девяносто пятые выживают ===

среди компиляторов — хороших и разных — как выбрать единственно правильный свой? не верьте ни советам друзей, ни рекламным листкам, ни даже этой статье. но все-таки ее прочитайте. так вы узнаете сильные и слабые стороны популярах компиляторов и найдете сравнительные тесты их быстродействия.

  

[ **[[https://www.evilfingers.com/publications/research_RU/gcc.optimize.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/gcc.optimize|DOC**]]**]

=== gcc: компиляция на форсаже с турбо-наддувом ===

в оптимизации гораздо больше магии, чем науки. компилятор gcc поддерживает сотни ключей оптимизации, влияние большинства из которых на быстродействие программы весьма неоднозначно — в одном случае мы получаем колоссальный прирост производительности, в другом же — обвальное падение. причем, чем агрессивнее ведет себя оптимизатор, тем выше шансы, что откомпилированная программа развалится. поэтому разработчики, как правило, оставляют солидный "запас прочности" по оптимизации, позволяющий нам (не без риска, конечно) форсировать ключи компиляции, увеличивающие скорость работы программы в несколько раз.

  

[ **[[https://www.evilfingers.com/publications/research_RU/gcc-optimize-turbo.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/gcc-optimize-turbo|DOC**]]**]

=== погружение в технику и философию gdb или отладка двоичных файлов под gdb ===

GDB – один из самых мощных отладчиков из всех когда-либо созданных, однако, переход с soft-ice на gdb обычно протекает очень болезненно. запустив gdb, мы попадаем в совершенно иной мир, похожий на дремучий лес, в котором очень легко заблудиться, но мыщъх покажет как обустроить gdb для хакерский целей, вырыть уютную нору и сделать свои первые шаги на пути к истинному Дао gdb.

  

[ **[[https://www.evilfingers.com/publications/research_RU/gdb-bin.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/gdb-bin|DOC**]]**]

=== погружение в технику и философию gdb (окончание) ===

в этой статье мы проложим наше погружение в gdb, исследуя его возможности с точки зрения хакера, отлаживающего двоичные файлы без исходных текстов. мы рассмотрим технику изменения потока выполнения программы, точки останова и наблюдения, механизмы трассировки и средства работы с памятью. в общем, все то, что делает взломщиков счастливыми людьми.

  

[ **[[https://www.evilfingers.com/publications/research_RU/gdb-bin-II.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/gdb-bin-II|DOC**]]**]

=== генетический распаковщик своими руками ===

первое, что делает хакер ### исследователь когда берет в руки программу: смотрит упакована она или нет, и тут же бежит искать подходящий распаковщик, поскольку, большинство программ все-таки упакованы, а готовые распаковщики есть не для всех. обобщив свой опыт, мыщъх предлагает алгоритм универсального распаковщика, "снимающего" даже сложные полиморфные протекторы.

  

[ **[[https://www.evilfingers.com/publications/research_RU/genetic.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/genetic|DOC**]]**]

=== генетический распаковщик своими руками ===

прежде чем ломать, хакер берет программу и смотрит упакована она или нет и тут же бежит искать адекватный распаковщик (поскольку большинство защищенных программ упаковано), к сожалению, далеко не для всех упаковщиков/проекторов существуют готовые распаковщики… обобщив свой опыт борьбы с защитами, мыщъх предлагает алгоритм универсального распаковщика, пробивающего 99% защит.

  

[ **[[https://www.evilfingers.com/publications/research_RU/genetic-18.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/genetic-18|DOC**]]**]

=== генетический распаковщик своими руками ===

первое, что делает исследователь, когда берет в руки программу: смотрит упакована она или нет, и тут же бежит искать подходящий распаковщик, поскольку, большинство программ все-таки упакованы, а готовые распаковщики есть не для всех. обобщив свой опыт, автор предлагает алгоритм универсального распаковщика, "снимающего" даже сложные полиморфные протекторы.

  

[ **[[https://www.evilfingers.com/publications/research_RU/genetic-samag.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/genetic-samag|DOC**]]**]

=== у google под колпаком ===

право на privacy (защиту личной информации) уже и без того изрядно потрепанное в боях подверглось очередной атаке. на этот раз со стороны гиганта Google, шпионящего за нами с помощью закладок, встроенных в популярные браузеры (Горящий Лис, Опера), а так же панель Google Toolbar, установленную у миллионов пользователей. как обнаружить факт шпионажа (мыщъх, например, обнаружил это чисто случайно), какая именно информация передается, чем это нам грозит в практическом плане и можно ли предотвратить разгул безобразия своими собственными силами?

  

[ **[[https://www.evilfingers.com/publications/research_RU/google-spy.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/google-spy|DOC**]]**]

=== безопасный взлом через GPRS ===

сезон охоты на хакеров уже открыт! нас разыскивают спецслужбы всего мира. если ты релизишь варез, дизассмишь программы, отламываешь защиты, разводишь вирусов или атакуешь сеть — тебя сажают в тюрьму. чтобы остаться на свободе достаточно иметь сотовый телефон с GPRS-протоколом, паяльник, дизассемблер и немного смекалки…

  

[ **[[https://www.evilfingers.com/publications/research_RU/GPRS.hackd.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/GPRS.hackd|DOC**]]**]

=== дешевый GPGS или честный обман оператора ===

мобильный интернет все еще остается дорогой игрушкой, доступной только избранным. но не нужно быть хакером, чтобы удешевить трафик, а в некоторых случаях даже сделать его совсем бесплатным! и все это на совершенно легальных основаниях! не потребуется даже умения держать дизассемблер в руках! достаточно постой инженерной смекалки!

  

[ **[[https://www.evilfingers.com/publications/research_RU/GPRS.traff.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/GPRS.traff|DOC**]]**]

=== грабеж защищенного медиа контента в висте ===

магнатам медиа индустрии страшно не нравится бесконтрольное копирование аудио и видео и они всячески пытаются ему помешать. большой переполох среди пользователей вызвала новая инициатива Microsoft по созданию защитного механизма нового поколения, использующего зашифрованный цифровой поток, охраняемый по всему пути его следования и расшифровываемый только в видео-карте. сразу же возникает вопрос — как дальше жить и чем эту защиту ломать?

  

[ **[[https://www.evilfingers.com/publications/research_RU/grab-premium.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/grab-premium|DOC**]]**]

=== честный обмен провадера с помощью google web accelerator ===

интернет редко бывает хорошим и дешевым одновременно, что толкает многих хакеров на незаконные действия, зачастую заканчивающиеся условной судимостью, если не хуже, но мы пойдем другим путем — загрузим google web accelerator и путем ковыряния в настройках, выжмем из него все, на что он только способен (в том числе застав его работать на официально неподдерживаемой опере), сэкономив как на модемном подключении, так и на DSL, причем при настройках по умолчанию на DSL'е можно "попасть" на трафик, который google web accelerator генерирует в очень больших количествах.

  

[ **[[https://www.evilfingers.com/publications/research_RU/gweb-accel.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/gweb-accel|DOC**]]**]

=== на глубине мыщъх'а ===

…заканчивался один из самых мрачных периодов в истории мыщъха. больше месяца занимался черт знает чем, не работал, хотя и крутил хвостом, не отдыхал. все началось со звона в ушах, который пришел из ниоткуда и вместо того, чтобы уйти в никуда, прочно обосновался в моем мыщъхином пространстве. попытки избавиться от него с помощью фенозепама и пирацетама сначала породили сонливость, потом все опротивело, стало мрачным, появилось осознание, что чего-то тут не так, а идти некуда. стремительный полет ввысь угас как бычок в унитазе.

  

[ **[[https://www.evilfingers.com/publications/research_RU/h382.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/h382|DOC**]]**]

=== прикладные аспекты коммерческого взлома ===

хакерствовать, стабильно оставаясь на свободе, и получая постоянный приход в виде очередного подгона денег — намного интереснее, чем шить шаровары или протирать штаны в пыльной конторе, общаясь с людьми, которых совсем не хочется видеть, но приходится, а все потому, что большинство ходит на работу не из любви, к ней, а по необходимости. хакеры относятся к тем немногочисленным счастливчикам, на которых это правило не распространяется, но как найти себя среди звезд и терний?

  

[ **[[https://www.evilfingers.com/publications/research_RU/hack-jb-rem.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/hack-jb-rem|DOC**]]**]

=== записки хакера (разное) ===

Списки — популярные и во многом интересные структуры данных. Они естественным образом поддерживают быструю вставку и удаление элементов, но ни в одном известном мне руководстве не затрагиваются вопросы их сортировки. Ну да, конечно, в библиотеке STL есть класс list с готовым методом stort. Пользуйся – не хочу! Но универсальное решение по определению не есть хорошее. Это раз. Не все все программисты пользуются STL — это два. Наконец, в Си ничего подобного и в помине нет – это три. К тому же было бы полным непрофессионализмом взвывать list::sort, не задумываясь о том, как он работает. А правда, как? Давайте, не подглядывая в исходный код STL, попытаемся реализовать сортировку список самостоятельно.

  

[ **[[https://www.evilfingers.com/publications/research_RU/hacknote.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/hacknote|DOC**]]**]

=== чемоданчик хакера ===

чем вообще ломают программы? правильно, головой, задницей и руками. а только потом программами. но первичны все-таки программы, поскольку именно они формируют сознание, позволяя начинающему сделать свои первые шаги в дремучем лесу машинных кодов. вот только этих программ _настолько_ много, что новичок, попавший на хакерский сайт оказывается в полной растерянности — что качать, а что не надо. мыщъх дает предельно сжатый обзор хакерского софта, покрывающий потребности практически любого взломщика.

  

[ **[[https://www.evilfingers.com/publications/research_RU/hack-toolz.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/hack-toolz|DOC**]]**]

=== программирование денег лопатами ===

говорят, что наука — это удовлетворение собственного любопытства за чужой счет. программирование, между прочим тоже! графический интерфейс аляповатых приложений скрывает огромные денежные вложения и если вовремя подсуетиться, можно кое-что отхватить от этого куска. хотите узнать, какова ваша рыночная стоимость и как не продешевить на продаже продуктов своего труда?

  

[ **[[https://www.evilfingers.com/publications/research_RU/job.prg.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/job.prg|DOC**]]**]

=== программирование денег лопатами [lite] ===

говорят, что наука — это удовлетворение собственного любопытства за чужой счет. программирование, между прочим тоже! графический интерфейс аляповатых приложений скрывает огромные денежные вложения и если вовремя подсуетиться, можно кое-что отхватить от этого куска. хотите узнать, какова ваша рыночная стоимость и как не продешевить на продаже продуктов своего труда?

  

[ **[[https://www.evilfingers.com/publications/research_RU/job.prg.lite.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/job.prg.lite|DOC**]]**]

=== хакерские трюки или как поставить бряк на jmp eax ===

кодокопатели достаточно часто сталкиваются с необходимостью установить точку останова на произвольную машинную команду (например, jmp eax). форумы буквально пестрят вопросами, но x86-процессоры не предоставляют такой возможности и приходится действовать обходим путем, о существовании которого догадываются многие, но находит далеко не каждый.

  

[ **[[https://www.evilfingers.com/publications/research_RU/jump-eax.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/jump-eax|DOC**]]**]

=== некролог на Web-Money Keeper Classic ===

какую информацию собирает о нас система Web Money и можно ли ей доверять? мыщъх, просидевший за дизассемблером всю ночь напролет, пришел к весьма неутешительным выводам, которых придерживаются и другие пользователи. как обезопасить себя и обеспечить максимальную анонимность?

  

[ **[[https://www.evilfingers.com/publications/research_RU/keer-necrolog.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/keer-necrolog|DOC**]]**]

=== секреты кернел хакинга ===

кому не хотелось хакнуть ядро LINUX'а? каждый уважающий себя Линуксоид должен попробовать это сделать! ведь LINUX, в отличии от Windows, настоящий полигон для хакерства, таящий в себе неожиданные возможности. взять хотя бы лого, появляющееся на экране. пришла пора взять в руки GIMP и что-нибудь нарисовать.

  

[ **[[https://www.evilfingers.com/publications/research_RU/kernel.hacks.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/kernel.hacks|DOC**]]**]

=== жизнь без BSOD или скрытые рычаги управления ядром Server 2003 ===

голубой экран смерти — одна из самых больших неприятностей, которая только может случиться с сервером и хотелось бы, чтобы она происходила как можно реже, пускай даже ценой некоторого снижения производительности и увеличения потребления оперативной памяти. главным образом мы будем говорить о Server 2003 Standard Edition, хотя сказанное во многом справедливо и для остальных операционных систем линейки NT.

  

[ **[[https://www.evilfingers.com/publications/research_RU/kernel-noBSOD.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/kernel-noBSOD|DOC**]]**]

=== трюки от мыщъха ===

короче, решил мыщъх завести свою колонку, чтобы валить всякую полезную (и не очень) мелочь по поводу и без. эта подборка получилась через чур железной и для мыщъха вообще не характерной, так что в следующий раз основной упор будет сделан на Си и прилегающие к нему языки.

  

[ **[[https://www.evilfingers.com/publications/research_RU/kpnc_tricks_01.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/kpnc_tricks_01|DOC**]]**]

=== языки программирования будущего — анализ или пророчество ===

каким будут языки программирования через несколько лет? с пятидесятилетним опытом за плечами мы можем дать вполне объективный прогноз. языки эволюционируют намного медленнее программного обеспечения, создаваемого с их помощью и на радикального изменение ситуации рассчитывать не приходится, если только не…

  

[ **[[https://www.evilfingers.com/publications/research_RU/lang.prg.future.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/lang.prg.future|DOC**]]**]

=== жизнь после BDOS или night of the living undead II ===

голубой экран смерти — это последний вздох системы, после которого душа отделяется от тела (дамп памяти падает на диск) и компьютер уходит в перезагрузку, унося с собой все несохраненные данные… есть ли жизнь после смерти доподлинно неизвестно, но установка термоядерного отладчика типа soft-ice или syser'а позволяет взять ситуацию под свой контроль, вытаскивая систему из мира мертвых, в мир живых. мыщъх об этом уже писал ранее, но то было давно и неправда ;) сейчас другое время, иные операционные системы — XP SP2, Висла, Server 2003/2008, соответственно, древние ритуалы "воскрешения" требуют адоптации, в общем, тут есть куда махнуть хвостом!

  

[ **[[https://www.evilfingers.com/publications/research_RU/life-after-bsod.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/life-after-bsod|DOC**]]**]

=== основы термоядерной отладки с linice ===

достойных отладчиков ядерного уровня и под windows немного, а на linux их можно пересчитать по пальцам одной руки, да и те большей частью сырые, недоделанные или же позаброшенные, мхом позаросшие… сегодня мы поговорим о самом популярном и наиболее интересном из них — linice.

  

[ **[[https://www.evilfingers.com/publications/research_RU/linice.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/linice|DOC**]]**]

=== помощники компилятора ===

времена, когда компиляторы — компилировали, а программисты — программировали уже давно позади. современный компилятор это могучий инструмент, совмещающий в себе функциональность кухонного комбайна со стремительностью пикирующего бомбардировщика. когда же его возможностей оказывается недостаточно, на помощь приходит множество полезных (и не очень полезных) утилит, от изобилия которых начинает рябить в глазах. как же выбрать из всего этого хлама действительно нужное?

  

[ **[[https://www.evilfingers.com/publications/research_RU/linux.compil.stuff.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/linux.compil.stuff|DOC**]]**]

=== прятки в linux ===

простым и доходчивым языком мы расскажем, как спрятать свои файлы, процессы и сетевые соединения под осью типа Линух с ядрами версий 2.4 – 2.6, обобщая опыт хакерских атак нескольких последних лет. это не руководство по настройке adore, которых пруд пруди в сети, это — самоучитель по созданию собственных rootkit'ов, намного более крутых, надежных и неуловимых, чем adore и knark все вместе взятые.

  

[ **[[https://www.evilfingers.com/publications/research_RU/linux.hide.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/linux.hide|DOC**]]**]

=== перехват библиотечных функций в linux и bsd ===

как узнать какие функции вызывает подопытная программа? в windows существует целый арсенал шпионских средств, но linux-хакерам весь инструментарий приходится разрабатывать самостоятельно. сейчас мыщъх покажет как осуществляется перехват и подмена (!) системных и библиотечных функций в linux и *BSD.

  

[ **[[https://www.evilfingers.com/publications/research_RU/linux.hook.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/linux.hook|DOC**]]**]

=== перехват библиотечных функций в linux и bsd [lite] ===

как узнать какие функции вызывает подопытная программа? в windows существует целый арсенал шпионских средств, но linux-хакерам весь инструментарий приходится разрабатывать самостоятельно. сейчас мыщъх покажет как осуществляется перехват и подмена (!) системных и библиотечных функций в linux и *BSD.

  

[ **[[https://www.evilfingers.com/publications/research_RU/linux.hook.lite.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/linux.hook.lite|DOC**]]**]

=== шприц для *bsd или функции на игле ===

внедриться в адресное пространство чужого процесса — проще простого! в первой части статьи мы показали как сконструировать универсальный шприц-баян, теперь остается только замутить тот фармацевтический ### магический раствор, который будет введен внутрь чужеродных клеток машинного кода. навстречу нашей вакцине тут же устремится батальон иммунных тел, готовых сожрать ее в один момент (и ведь сожрут же!), но мыщщъх знает один хитрый рецепт…

  

[ **[[https://www.evilfingers.com/publications/research_RU/linux.hook-sub2.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/linux.hook-sub2|DOC**]]**]

=== захватываем ring 0 в Linux ===

нулевое кольцо дает полную власть над процессором, позволяя делать с ним все, что угодно. на этом уровне исполняется код операционной системы, загружаемые модули ядра и кое что еще. считается, что LINUX надежно оберегает нулевое кольцо от хакерского вторжения, но это не так. за последние несколько лет обнаружено множество дыр, некоторые из которых остаются не залатанными до сих пор.

  

[ **[[https://www.evilfingers.com/publications/research_RU/linux.ring0.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/linux.ring0|DOC**]]**]

=== второе рождение утерянных данных восстановление удаленных файлов под LINUX'ом ===

для восстановления удаленных файлов существует множество готовых утилит, но далеко не все и не всегда они работают как ожидается. намного надежнее (и интереснее!) восстанавливать данные вручную. сейчас мы погрузимся в мир файловой системы ext2fs и посмотрим какие шестеренки приводят ее в движение.

  

[ **[[https://www.evilfingers.com/publications/research_RU/LINUX.undelete.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/LINUX.undelete|DOC**]]**]

=== трепанация двоичных файлов под Linux ===

рост коммерческого программного обеспечения под Linux, распространяющегося без исходных текстов, вызывает озабоченность сообщества Open Source, заинтересованного в создании открытых версий проприетарных продуктов, основная сложность клонирования которых состоит отнюдь не в кодировании, а в расшифровке протоколов обмена и форматов файлов. эту часть работы берут на себя хакеры, свободно владеющие отладчиком, разбирающиеся в дизассемблировании и знающие массу эффективных приемов реверсинга, о некоторых из которых мыщъх и собирается рассказать.

  

[ **[[https://www.evilfingers.com/publications/research_RU/linux-bin-autopsy.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/linux-bin-autopsy|DOC**]]**]

=== турбо-перенос драйверов из Windows в LINUX/BSD ===

главный недостаток UNIX-подобных систем — отсутствие нормальных драйверов под кучу "вкусного" оборудование, с которым Windows справляется без проблем. на самом деле, проблему можно решить и эта статья рассказывает как.

  

[ **[[https://www.evilfingers.com/publications/research_RU/linux-drivers.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/linux-drivers|DOC**]]**]

=== хачим сотовые телефоны с линухом на борту ===

ворвавшись на мобильные платформы, по прошествии нескольких лет "промышленной" эксплуатации Linux чувствует себя вполне уверенно, успешно конкурируя с Symbian OS/Windows CE, и общая в свою верю все больше и больше производителей сотовых телефонов, число которых стремительно растет. Linux на мобильном это уже не экзотика, а реальность, насчитывая сотни разнообразных моделей, которые любой желающий может хачить, ковыряясь в недрах ядра и наращивая его функционал, что безумно интересно, но, к сожалению, в среде отечественных хакеров практически неизвестно. мыщъх надеется, что своей статьей он сорвет пелену мрака, подтолкнув креативных кодокопателей к исследовательской деятельности.

  

[ **[[https://www.evilfingers.com/publications/research_RU/linux-mobile.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/linux-mobile|DOC**]]**]

=== обнаружение компрометации ядер Linux и xBSD или руткиты тоже оставляют следы… ===

рост популяции руткитов, оккупировавших никсы, продолжает свое наступление ударными темпами, поражая системы, не обремененные антивирусами, ядерными отладчиками и прочими защитными механизмами, уже давно ставшим привычными средствами обороны в мире windows. руководства по обнаружению руткитов устаревают быстрее, чем совершенствуются методики внедрения. рецептурные справочники абсолютно бесполезны и нужно курить что-то концептуальное.

  

[ **[[https://www.evilfingers.com/publications/research_RU/linux-rootkit-discover.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/linux-rootkit-discover|DOC**]]**]

=== особенности дизассемблирования под LINUX на примере tiny-crackme ===

дизассемблирование под LINUX имеет свою специфику и свои тонкости, не освященные в доступной литературе и остающиеся под властью тьмы. между тем, защитные механизмы не спят, становясь все сильнее и сильнее. чтобы выиграть в этой битве необходимо не только крепко держать дизассемблер в руках, но и уметь с ним обращаться.

  

[ **[[https://www.evilfingers.com/publications/research_RU/linux-tiny-crm.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/linux-tiny-crm|DOC**]]**]

=== TOP10 ошибок конфигурации Linux/BSD ===

воздвигнуть Linux/BSD – не проблема, инсталлятор все сделает за нас, а вот правильно настроить систему, чтобы ее тут же не атаковали хакеры, удается далеко не каждому. проанализировав ситуацию, мыщъх отобрал десяток наиболее распространенных ошибок, допускаемых не только начинающими Linux'идами, но и "матерыми" пользователями.

  

[ **[[https://www.evilfingers.com/publications/research_RU/linux-top10-err.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/linux-top10-err|DOC**]]**]

=== обзор упаковщиков исполняемых файлов под UNIX ===

упаковщики исполняемых файлов часто используются для затруднения анализа программы и препятствия взлому, но _ни_ _один_ упаковщик не свободен от ошибок, которые высаживают пользователей на конкретный геморрой, вынуждая распаковывать программу только затем, чтобы ее было можно запустить! покажем, как "снимаются" наиболее популярные упаковщики: ELFCrypt, UPX, Burneye и Siva.

  

[ **[[https://www.evilfingers.com/publications/research_RU/linux-unpack-review.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/linux-unpack-review|DOC**]]**]

=== внутри пентаграммы: Linux/xBSD/NVIDIA/ATI/Matrox ===

совсем недавно ситуация с видео-драйверами под Linux/xBSD была поистине критической — официальных драйверов не существовало, энтузиасты кололи бинарные Windows-дрова, пытаясь хоть как-то заставить их работать их под никсами. теперь же, ведущие производители видео-карт для большинства своих моделей предлагают драйвера для Linux, а в отдельных случаях и для xBSD, вот только качество этих самих драйверов далеко не на высоте и без танцев с бубном при их установке не обойтись…

  

[ **[[https://www.evilfingers.com/publications/research_RU/linux-video-drv.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/linux-video-drv|DOC**]]**]

=== взлом patch-guard ===

в 64-битных версиях Windows XP/Vista, Server 2003/Longhorn появился широко разрекламированный механизм Patch-Guard, контролирующий целостность системы и призванный уберечь пользователей от rootkit'ов и некорректно работающих программ, вламывающихся в ядро словно слон в посудную лавку. насколько надежна такая защита и можно ли ее обойти?

  

[ **[[https://www.evilfingers.com/publications/research_RU/patch-guard-hack.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/patch-guard-hack|DOC**]]**]

=== добывание информации из pdf-файлов или взлом eBook'ов своими руками ===

защита интеллектуальной собственности в последнее время принимает все более непотребные и противоестественные формы, идущие в разрез с интересами потребителей, но есть нас. правообладатели ограничивают наши возможности, запрещая просматривать, копировать, печатать, редактировать информацию, но и хакеры не сидят сложа руки, сооружая баррикады и другие средства борьбы.

  

[ **[[https://www.evilfingers.com/publications/research_RU/pdf-hack.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/pdf-hack|DOC**]]**]

=== неудачный выбор приоритетов на PDP-11 и его наследие на Си/Си++ ===

Отлаживал как-то мыщъх одну свою программу, написанную на Си? и периодически делающую из чисел винегрет или выдающую критическую ошибку access violation при трудно воспроизводимых обстоятельствах. Тщательная проверка исходного текста "глазами" ровным счетом ничего не дала. Программа продолжала выпендриваться, сроки сдачи проекта поджимали, дедлайн нависал над головой Дамокловым мечом, мыщъх нервничал, много курил, нервничал, закидывался ноотропами, не спал ночами, высаживался на жуткую измену, а глубоко укоренившийся баг игнорировал всякие попытки вытащить его из норы.

  

[ **[[https://www.evilfingers.com/publications/research_RU/pdpd.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/pdpd|DOC**]]**]

=== непредвзятый сравнительный анализ элегантности архитектур различных процессоров ===

Непрекращающиеся "священные" войны по поводу "x86 процессоры – дерьмо, xxx процессоры – rules" неприятны в первую очередь тем, что они унижают и дисквалифицируют x86-программистов в глазах всей остальной программистской общественности. Они лишают новичков уважения к x86-архитектуре.

  

[ **[[https://www.evilfingers.com/publications/research_RU/PDPvsDECv86.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/PDPvsDECv86|DOC**]]**]

=== автоматический пен-тестинг – мертвый сезон ===

в последнее время появилось множество утилит для автоматического поиска уязвимостей, не требующих от хакера никакой квалификации и подвластных даже юзерам. просто запусти программу и пожинай камнепад дыр, сыплющийся со всех сторон, словно перезрелые червивые яблоки. однако… если все было так просто, интернет уже давно бы загнулся и медленно умирал в агонии дымящихся руин. автоматизированный поиск имеет свои ограничения, о которых полезно знать, прежде чем хачить, поэтому немного теории не помешает.

  

[ **[[https://www.evilfingers.com/publications/research_RU/pen-tests.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/pen-tests|DOC**]]**]

=== взлом пентагона ===

настоящие хакеры не знают границ и проникают в закрытые сети различных могущественных организаций. как они это делают? продемонстрируем технику взлома на примере серверов милитаристского Пентагона, который вовсе не так защищен каким кажется.

  

[ **[[https://www.evilfingers.com/publications/research_RU/penta.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/penta|DOC**]]**]

=== пен-тестинг по обе стороны сервера ===

популярность пен-тестов отчасти вызвана абсолютным непониманием целей, стоящих перед пен-тестером, а так же методов их достижения. заказывая тест на проникновение, администратор в большинстве случаев выбрасывает деньги на ветер, не получая взамен никакой информации о реальных угрозах и дефектах системы безопасности, но чтобы понять это, нужно хотя бы на время превратиться на хакера и взглянуть на задачу с позиции атакующего. мыщъх раскрывает боевые секреты пен-тестеров, которые наверняка заинтересуют как хакеров, так и администраторов.

  

[ **[[https://www.evilfingers.com/publications/research_RU/pen-tests-plan.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/pen-tests-plan|DOC**]]**]

=== телеметрия Server'а 2003: или метрология счетчиков производительности ===

начиная с самых ранних версий в NT был заложен мощный механизм мониторинга, предназначенный для сбора и анализа информации о "жизнедеятельности" системы в реальном времени, именуемый счетчиками производительности (performance counters). это словно приборная панель со множеством датчиков в автомобиле или даже авианосце. вот только "датчиков" у NT на порядок больше и далеко не каждый знает для чего они предназначены и как их можно использовать для выявления "узких" мест в системе и настройки сервера на максимальную производительность.

  

[ **[[https://www.evilfingers.com/publications/research_RU/performance-counters-server2003.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/performance-counters-server2003|DOC**]]**]

=== как сломать DVD диск без помощи топора ===

чего только не придумают медиамагнаты, чтобы отравить жизнь рядовому пользователю. речь идет даже не о деньгах, а об (не)удобстве использования защищенных DVD, с которыми активно борются копировщики защищенных дисков, но, увы, без поддержки со стороны пользователя, без гибкого человеческого ума и пронырливого хакерского хвоста эта борьба обречена на поражение. сегодня мыщъх покажет как разгрызть два наиболее популярных типа защит на примерах фильмов Pirates of the Caribbean: Dead Man's Chest и The Fog.

  

[ **[[https://www.evilfingers.com/publications/research_RU/pirates.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/pirates|DOC**]]**]

=== полиморфный генератор — своим руками ===

технологии полиморфизма можно встретить не только в вирусах, но и, например, в защитных механизмах. это передовой путь хакерской мысли, притягивающий новичков как магнитом, это настоящий омут ассемблерных конструкций, в который легко попасть, но трудно выбраться. полиморфные вирусы достаточно сложная штука, но настоящие хакеры прямых путей не ищут!

  

[ **[[https://www.evilfingers.com/publications/research_RU/poly.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/poly|DOC**]]**]

=== ремонт блоков питания в домашних условиях ===

поломанный блок питания обычно не ремонтируют, а безжалостно выбрасывают, покупая вместо него новый – подороже и помощнее. жадничать с этим не стоит, ибо ваша экономия может очень дорого обойтись, отправив все остальные компоненты компьютера к праотцам. к тому же вы должны иметь опыт работы с высоким напряжением, иначе одним трупом стает больше (и этим трупом будете вы). однако, как говорится, охота пуще неволи…

  

[ **[[https://www.evilfingers.com/publications/research_RU/powergood.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/powergood|DOC**]]**]

=== советы по доработке дешевых блоков питания ===

качественные блоки питания — не то, чтобы редкость, но явление отнюдь не повсеместное. китайские мастера ухитряются собирать блоки питания, выкинув из них максимум деталей, совершенно не заботясь о последствиях. ну какое им дело до сбоев сервера или полного выгорания всех его компонентов? вот и приходится брать паяльник в лапы и доводить китайское чудо до технологического совершенства.

  

[ **[[https://www.evilfingers.com/publications/research_RU/PowerS.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/PowerS|DOC**]]**]

=== FAQ по программированию ===

FAQ по программированию

  

[ **[[https://www.evilfingers.com/publications/research_RU/prg-f.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/prg-f|DOC**]]**]

=== программирование — с женой или без ===

поговорим о наболевшем. о женах. мечтая о встрече с прекрасной незнакомкой, многие даже не догадываются: чем эта встреча заканчивается. когда в жизни хакера появляется девушка сразу же возникает множество проблем и кто знает как их разрешить? мыщъх, как опытный самец, не знает, но догадывается.

  

[ **[[https://www.evilfingers.com/publications/research_RU/prg-w-wife.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/prg-w-wife|DOC**]]**]

=== репрессированные жертвы рекламы или как нас разводят на бабки ===

реклама внедряется в наше подсознание, воздействуя даже на тех, кто в нее не верит. ну это он сознательно не верит, а по мере продвижения в область бессознательного рациональное мышление отходит на второй план, уступая первобытным инстинктам, о существовании которых большинство из нас только догадывается, да и то после очередного развода на бабки, ушедших на покупку совершенно ненужной вещи за сумасшедшие деньги.

  

[ **[[https://www.evilfingers.com/publications/research_RU/propaganda.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/propaganda|DOC**]]**]

=== выживание в системах с жестоким квотированием ===

время глобальных эпидемий давно прошло и сейчас большинство вирусов гибнет еще на излете, даже локальные вспышки удается зажечь лишь немногим. давайте попробуем разобраться почему, заодно обсудив новые вирусные концепции, адоптированные к суровым условиям современной жизни.

  

[ **[[https://www.evilfingers.com/publications/research_RU/quota.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/quota|DOC**]]**]

=== вред и польза RAID-массивов ===

лет десять назад RAID-массивы были экзотикой, встречающийся только на серверах и крутых рабочих станциях, сейчас же RAID-контроллеры настолько подешевели, что массово встраиваются в материнские платы, соблазняя юзеров объединить несколько дисков в один массив, но за это искушение приходится дорого платить.

  

[ **[[https://www.evilfingers.com/publications/research_RU/RAID-bad.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/RAID-bad|DOC**]]**]

=== подъем RAID'ов с аппаратно-программной глубины на операционную поверхность ===

Abstract:

  * Author: airplane rule (правило самолета) гласит: сложность увеличивает вероятность поломки; двухмоторный самолет по сравнению с одномоторным имеет, по крайней мере, вдвое больше проблем с двигателями. и это совсем не шутка. отказы RAID'ов (как программных так и аппаратных) — вполне обычное дело, а вот сложность их восстановления порядка на два выше. в одной статье, короткой как мышиный хвост, просто невозможно описать технику восстановления в деталях, поэтому ограничимся базовыми приемами, подтолкнув читателя в нужном направлении.**Kris Kaspersky**

[ **[[https://www.evilfingers.com/publications/research_RU/RAID-recovery.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/RAID-recovery|DOC**]]**]

=== сырые сокеты на Висле, XP, W2K… ===

сырые сокеты (raw sockets) широко используются как в хакерских, так и в легальных коммерческих программах: exploit'ах, спуферах, сниферах, сканерах, брандмауэрах, NAT'ах, etc. никсы поддерживают сырые сокеты изначально, 9x – лишь формально. с выходом W2K некрософт подарила нам полноценную поддержку сырых сокетов, но, начиная с XP SP2, сурово урезала их функциональность, в результате чего многие системные программы перестали работать и, чтобы вернуть функциональность взад программистам пришлось опуститься на уровень ядра или заюзать библиотеку WinCap. а простым пользователям что делать? как "оживить" старые программы, не имея исходных текстов на руках? без паники! мыщъх сейчас все расскажет, только покурит слегонца.

  

[ **[[https://www.evilfingers.com/publications/research_RU/raw-socks.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/raw-socks|DOC**]]**]

=== заметки о восстановлении данных на жестких дисках ===

разрушение данных – это самое страшное, что только может случится с вашим компьютером. беда никогда не предупреждает о своем приходе, по закону подлости выпрыгивая именно в тот момент, когда к встрече с ней вы наименее готовы. резервная копия отсутствует или безнадежно устарела, времени на восстановление отпущено в обрез, срывается срочная работа, ко всем чертям летят планы… попробуй тут не запаниковать и, вдавившись в истерику, не начать запускать всех "докторов" по очереди, после "лечения" которых винчестеру уже ничто не поможет…

  

[ **[[https://www.evilfingers.com/publications/research_RU/recorver.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/recorver|DOC**]]**]

=== заметки о восстановлении данных на жестких дисках [Lite] ===

разрушение данных – это самое страшное, что только может случится с вашим компьютером. беда никогда не предупреждает о своем приходе, по закону подлости выпрыгивая именно в тот момент, когда к встрече с ней вы наименее готовы. резервная копия отсутствует или безнадежно устарела, времени на восстановление отпущено в обрез, срывается срочная работа, ко всем чертям летят планы… попробуй тут не запаниковать и, вдавившись в истерику, не начать запускать всех "докторов" по очереди, после "лечения" которых винчестеру уже ничто не поможет…

  

[ **[[https://www.evilfingers.com/publications/research_RU/recorver.lite.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/recorver.lite|DOC**]]**]

=== скрытые ключи автозапуска в системном реестре ===

существует множество широко известных ключей автозапуска, в которые прописываются вирусы, черви, трояны и другие программы, пытающиеся внедриться в атакуемую систему, и которые проверяют антивирусы, брандмауэры и прочие сторожевые механизмы, бьющие хакеров еще на излете. чтобы выжить в этом суровом мире, полном ужасных защитных монстров, приходится извращаться не по-детски и разрабатывать методики поиска малоизвестных ключей автозапуска, неподвластные никаким анализаторам реестра.

  

[ **[[https://www.evilfingers.com/publications/research_RU/regautorun.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/regautorun|DOC**]]**]

=== дефрагментация системного реестра — снаружи и изнутри ===

свежекупленный компьютер работает быстро, но со временем производительность уменьшается, достигая стадии полной деградации уже через несколько лет. продвинутые пользователи знают, что виною тому — фрагментация файловой системы (с которой штатный Disk Defrag, кстати говоря, ни хвоста не справляется), но только гуру догадываются, что реестр также подвержен фрагментации, причем как внешней, так и внутренней и вклад, вносимый ей, в общее падение быстродействия весьма значителен. как вернуть системе вторую молодость без переустановки и прочих радикальных операций?

  

[ **[[https://www.evilfingers.com/publications/research_RU/reg-disk-optimize.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/reg-disk-optimize|DOC**]]**]

=== реклама в сумеречной зоне подсознания ===

реклама действует. это факт! но вот _как_ именно она действует не знает никто, поскольку действующая реклама всегда создается по наитию и попытки повторить однажды придуманный рецепт практически всегда заканчиваются провалом. какие же механизмы лежат в основе восприятия рекламы? какое воздействие она оказывает на подсознание и как очистить свой разум от рекламных помоев?

  

[ **[[https://www.evilfingers.com/publications/research_RU/reklama-sublimonal.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/reklama-sublimonal|DOC**]]**]

=== борьба с удаленными потоками или противостояние с малварью продолжается ===

создание удаленных потоков — популярный способ внедрения вредоносного кода в доверенные приложения, используемый малварью для обхода антивирусов, персональных брандмауэров и других защитных механизмов, большинство из которых к такому повороту событий явно не готовы и малварь плодится косяками. полный дестрой, в общем, но, чтобы положить ему конец, достаточно взмахнуть хвостом.

  

[ **[[https://www.evilfingers.com/publications/research_RU/remotethrguard.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/remotethrguard|DOC**]]**]

=== найти и уничтожить… (пособие по борьбе с вирусами и троянами) ===

традиционно для поиска компьютерной заразы используются антивирусы, однако результат их деятельности не всегда оправдывает ожидание и многие из вирусов зачастую остаются нераспознанными, особенно если они написаны окрестным хакером и до адептов антивирусной индустрии еще не дошли. к счастью, в большинстве случаев зараза может быть обнаружена вручную и эта статья показывает как!

  

[ **[[https://www.evilfingers.com/publications/research_RU/remove.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/remove|DOC**]]**]

=== RMS системы на страже контента ===

появление в Server 2003 системы управления правами (Rights Management Services или, сокращенно, RMS), обещающий защитить содержимое электронных документов от неавторизованного использования, вызывает большой интерес со стороны крупных и мелких компаний, страдающих хроническими утечками информации и хватающихся за каждое решение, словно за соломинку. эффект, однако, превосходит все ожидания и после развертывания RMS проблемы плодятся в геометрической прогрессии…

  

[ **[[https://www.evilfingers.com/publications/research_RU/RMS-MS.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/RMS-MS|DOC**]]**]

=== ручной поиск руткитов в Linux/xBSD и NT ===

агрессивное развитие руткитов до сих пор остается безнаказанным и продолжает свое наступление не встречая никакого существенного сопротивления со стороны защитных технологий, большинство из которых хорошо работает только на словах и ловит общедоступных руткитов взятых с rootkits.com или аналогичных ресурсов. руткиты, написанные "под заказ", обнаруживаются значительно хуже, если вообще обнаруживаются, причем, даже такие продвинутые технологии детекции как удаленное сканирование портов оказываются бессильными перед новейшими версиями руткитов, которые реально обнаруживаться только руками, хвостом и головой (трава опционально прилагается).

  

[ **[[https://www.evilfingers.com/publications/research_RU/rootkits-bsd-win32.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/rootkits-bsd-win32|DOC**]]**]

=== стратегия выживания в мутной интернет-воде ===

число хакерских атак все растет, количество exploit'ов и других боевых утилит ready-to-use увеличивается в геометрической прогрессии, а на компьютерах пользователей появляется все больше информации, представляющей интерес для похитителей и потому защищенной различными парольными системами. но насколько эти системы надежны? как защитить себя от хакеров? большинство статей на эту тему написаны людьми, никогда не взламывающих чужие системы и не имеющих никакого представления о методах действия хакеров, поэтому их советы носят чисто умозрительный характер. мыщъх, специализирующий своей хвост в этой узкой предметной области, делиться реальным опытом боевых атак, и дает действительно полезные рекомендации, превращающие ваш компьютер в непреступную крепость.

  

[ **[[https://www.evilfingers.com/publications/research_RU/rpswd.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/rpswd|DOC**]]**]

=== Rustock.C – секретные техники анализа или заглядывая реверсеру через плечо ===

легендарно-неуловимому rootkit'у Rustock.C посвящены десятки технических публикаций, детально описывающих _что_ именно он делает, но никто из реверсеров не говорит _как_ именно он это выяснил, _какие_ инструменты и методики анализа использовались? мыщъх предпринял попытку заполнить этот пробел, поделившись экзотическими блюдами хакерской кухни.

  

[ **[[https://www.evilfingers.com/publications/research_RU/Rustock-C.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/Rustock-C|DOC**]]**]

=== философия Microsoft 2003 Resource Kit ===

в штатный комплект поставки операционных систем семейства UNIX традиционно входит огромное количество утилит на все случаи жизни и администратору не приходится рыскать по сети в поисках решений от сторонних разработчиков (как правило, платных). Microsoft же, долгое время стремившаяся превратить Windows NT в тостер, управляемый посредством мыши, постепенно осознает порочность такого подхода, начинаем перенимать лучшие черты UNIX'а. большое количество полезных утилит можно найти в папке Support Tools на дистрибутивном диске и еще больше их содержится в Resource Kit'ах, которые можно бесплатно скачать с сайта компании. нужны ли они администратору? и если да, то зачем?

  

[ **[[https://www.evilfingers.com/publications/research_RU/S2k3rk.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/S2k3rk|DOC**]]**]

=== поиск бутылочного горлышка вместе с soft-ice ===

производительность сервера зависит не только от мощности аппаратной части, но и программной оснастки. один "кривой" драйвер (приложение) способен сожрать все ресурсы, затормозив систему до уровня асфальтового катка и системный монитор не покажет ровным счетом ничего! как найти виновника?! из множества программ самым доступным, точным и надежным инструментом как ни странно оказывается отладчик soft-ice.

  

[ **[[https://www.evilfingers.com/publications/research_RU/s2k3-soft-ice.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/s2k3-soft-ice|DOC**]]**]

=== TOP10 ошибок администраторов Server 2003 ===

легкость установки и управления MS Server'ом создает обманчивую иллюзию, что администрировать его проще простого. никакой командной строки! и даже обновления устанавливаются автоматически! настоящий рай, да и только! почему же, тогда его так часто ломают?! составив TOP10 ошибок управления Server 2003, и подробно прокомментировав каждую из них, мы надеемся помочь начинающим администраторам (хотя некоторые факты наверняка будут интересны и матерым волкам).

  

[ **[[https://www.evilfingers.com/publications/research_RU/s2k3-top10err.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/s2k3-top10err|DOC**]]**]

=== TOP10 ошибок администраторов Server 2003 [Lite] ===

легкость установки и управления MS Server'ом создает обманчивую иллюзию, что администрировать его проще простого. никакой командной строки! и даже обновления устанавливаются автоматически! настоящий рай, да и только! почему же, тогда его так часто ломают?! составив TOP10 ошибок управления Server 2003, и подробно прокомментировав каждую из них, мы надеемся помочь начинающим администраторам (хотя некоторые факты наверняка будут интересны и матерым волкам).

  

[ **[[https://www.evilfingers.com/publications/research_RU/s2k3-top10err-re2.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/s2k3-top10err-re2|DOC**]]**]

=== безопасный wёb-серфинг ===

сетевые обитатели подвергаются опасности на каждом шагу. темные аллеи хакерских серверов таят в себе скрытую угрозы атаки, жертвой которой становится как электронная наличность, так и содержимое жесткое диска. да и следы своего пребывания в "пикантных" заведениях замести никогда не помешает. чтобы выходить в сеть без страха, совсем не нужно знать дзюдо и быть Шварцем, достаточно просто прочитать эту статью.

  

[ **[[https://www.evilfingers.com/publications/research_RU/safe-serfing-.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/safe-serfing-|DOC**]]**]

=== безопасный wёb-серфинг (дополнения и врезки) ===

…после секса без презерватива, в смысле блуждания по сети с IE (а ведь мыщъх же предупреждал!) душу начинают терзать смутные сомнения — а не подцепили ли мы чего?! тут же устанавливаются самые свежие версии антивирусов, которые, естественно, ничего не находят, от чего подозрения только усиливаются, распространяя устойчивый запах паранойи. нам кажется, что компьютер ведет себя как-то не так и любой сбой трактуется как "ну все, конец, это вирус", хотя конец находится совсем в другом кармане.

  

[ **[[https://www.evilfingers.com/publications/research_RU/safe-serfing-adds.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/safe-serfing-adds|DOC**]]**]

=== SCSI vs SATA ===

часть рынка жестких дисков и оптических накопителей принадлежит интерфейсу ATA/ATAPI (он же IDE), часть – SCSI. изменит ли появление SATA расстановку сил или нет? мы не можем предсказывать будущее, но все же попытаемся ответить на этот вопрос, беспристрастно сравнив функциональные возможности обоих интерфейсов.

  

[ **[[https://www.evilfingers.com/publications/research_RU/SCSIvsSATA.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/SCSIvsSATA|DOC**]]**]

=== основы самомодификации ===

самомодифицирующийся код встречается во многих вирусах, защитных механизмах, сетевых червях, кряксимах и прочих программах подобного типа. и хотя техника его создания не представляет большого секрета, качественных реализаций с каждым годом становится все меньше и меньше. выросло целое поколение хакеров, считающих, что самомодификация под Windows невозможна или слишком сложна. однако, в действительности это не так…

  

[ **[[https://www.evilfingers.com/publications/research_RU/self.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/self|DOC**]]**]

=== основы самомодификации [Lite] ===

самомодифицирующийся код встречается во многих вирусах, защитных механизмах, сетевых червях, кряксимах и прочих программах подобного типа. и хотя техника его создания не представляет большого секрета, качественных реализаций с каждым годом становится все меньше и меньше. выросло целое поколение хакеров, считающих, что самомодификация под Windows невозможна или слишком сложна. однако, в действительности это не так…

  

[ **[[https://www.evilfingers.com/publications/research_RU/self.lite.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/self.lite|DOC**]]**]

=== установка MS Server 2003 – секреты и советы ===

MS Server 2003 – абсолютный лидер среди рынка SOHO-серверов, используемый в качестве файлового сервера и сервера печати. конкуренция со стороны Linux и BSD систем в этом сегменте рынка крайне слаба, поскольку мелкие организации просто не в состоянии (со)держать квалифицированного администратора, а кажущаяся легкость установки Server 2003 создает впечатление, что с ним справится даже секретарша. отчасти это действительно так, но воздвигнуть быстрый, надежный и защищенный сервер не так-то просто! в попытке уберечь начинающих администраторов от типичных ошибок и было написано это пошаговое руководство.

  

[ **[[https://www.evilfingers.com/publications/research_RU/server2003-install.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/server2003-install|DOC**]]**]

=== восстановление MS Server 2003 после тяжелых ранений ===

MS Server 2003 – достаточно надежная и неприхотливая система, средняя наработка на отказ которой составляет несколько лет. для борьбы с падениями народ вовсю использует Norton Ghost, Acronis True Image и другие сторонние утилиты, стоящие не мерянных денег и плохо работающие (или совсем не работающие) со SCSI-дискам/RAID-массивами, но про штатный MS BackUp никто и слушать не хочет — все сразу начинают махать руками и гнать волну. плох же тот мастер, кто свой инструмент не знает! мыщъх использует MS BackUp уже более семи лет и со всей ответственностью заявляет, что это отличное средство восстановления системы, обладающее огромным скрытым потенциалом, о котором мыщъх сейчас и расскажет.

  

[ **[[https://www.evilfingers.com/publications/research_RU/server2003-recover.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/server2003-recover|DOC**]]**]

=== Server 2008 в томатном соусе – возьми его с собой прежде чем отправиться в межгалактический полет ===

в то время как Linux в стремлении "догнать и перегнать" перенимает _худшие_ черты Windows, Microsoft активно заимствует все лучшее из мира никосов, реализуя их в своих серверных системах. во всяком случае, Sever 2008 намного больше похож на UNIX, чем последние дистры Линуха. Microsoft действительно проделала большую работу, которая стоит того, чтобы на нее посмотреть.

  

[ **[[https://www.evilfingers.com/publications/research_RU/server-2008-kernel.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/server-2008-kernel|DOC**]]**]

=== server 2008 – прерванный полет ===

Server 2008 – последний 32-битный сервер в линейке NT. дальше будут только 64-битные версии. Microsoft сосредоточилась на x86-64 ядре, существенно переработав защитные механизмы, в то время как x86- и IA64-ядра не претерпели радикальных изменений в плане безопасности, а потому, главным образом мы будем говорить о x86-64 редакции, анализируя ее достоинства и недостатки с точки зрения хакеров, уже разломавших ядро в дизассемблере и расщепивших его на отдельные машинные команды в отладчике, благодаря чему удалось создать первые жизнеспособный exploit'ы под Server 2008 RC0.

  

[ **[[https://www.evilfingers.com/publications/research_RU/server-2008-pro-n-contra.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/server-2008-pro-n-contra|DOC**]]**]

=== какие следы ты оставил после себя? alt: пришел, увидел, наследил! tag line: вся правда о шредерах ===

как удалить файл без возможности его восстановления? существует целый арсенал как коммерческих, так и бесплатных утилит предназначенных для этой цели, но качество удаления оставляет желать лучшего и не нужно быть крутым специалистом, вооруженным супероборудованием, чтобы вытащить информацию, казавшуюся похороненной навсегда. а как быть, если под рукой нет никаких утилит, кроме штатных средств операционной системы, а файл удалить необходимо?! тогда на помощь приходит могучий мыщъхиный хвост!

  

[ **[[https://www.evilfingers.com/publications/research_RU/shredding.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/shredding|DOC**]]**]

=== бесшумный сервер своими руками ===

развитие локальных сетей и DSL-соединений привело к росту популярности домашних серверов, многие из которых из-за хронического недостатка жилищного пространства приходится устанавливать прямо в местах обитания их владельцев, что неизбежно сталкивает их с шумовой проблемой. современный компьютер — достаточно шумная штука. существует множество методик борьбы с шумом, но далеко не все из них эффективны…

  

[ **[[https://www.evilfingers.com/publications/research_RU/silent-server.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/silent-server|DOC**]]**]

=== skype – скрытая угроза ===

skype представляет собой одну из самых популярных VoIP-программ, установленную на миллионах компьютерах по всему миру, владельцы которых даже и не подозревают какая опасность им грозит, а опасность им грозит весьма серьезная: от утечки конфиденциальной информации до проникновение червей и "попадания" на трафик, не говоря уже о таких мелочах как нежелание Skype работать при активном soft-ice. но мыщъх все это благополучно разгрыз и теперь предлагает продукты своей жизнедеятельности на всеобщее обозрение. в смысле будет обсирать Skype по полной программе.

  

[ **[[https://www.evilfingers.com/publications/research_RU/skype.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/skype|DOC**]]**]

=== small http сервер — обзор возможностей ===

small http – это компактный (~100 кб в архиве), бесплатный, шустрый http/htts/ftp/pop3/smtp/dns/dhcp/proxy сервер в одном флаконе, поддерживающий SSL/TLS и портированный практически на все платформы: NT, BSD, Linux. это настоящий швейцарский нож, удобный в администрировании и идеально подходящий для SOHO-рынка, но, к сожалению, недостаточно известный и совершенно затерянный на фоне кучи конкурирующих с ним пакетов, большинство из которых проигрывают ему по всем статьям. впрочем, конечное решение о выборе сервера, остается за читателем…

  

[ **[[https://www.evilfingers.com/publications/research_RU/small-http.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/small-http|DOC**]]**]

=== рыбная ловля в локальной сети – sniffering ===

сетевой трафик содержит уйму интересного (пароли, номера кредитных карт, конфиденциальную переписку) и все это может стать вашим, если забросить в сеть сниффер. перехват информации – занятие настолько же интересное, насколько и небезопасное. популярные снифферы никак не скрывают своего присутствия и легко обнаруживаются администраторами. хотите избежать расправы? пишите свой собственный сниффер, а эта статья подскажет как.

  

[ **[[https://www.evilfingers.com/publications/research_RU/sniff.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/sniff|DOC**]]**]

=== будущее которое мы потеряли ===

каким будет программное обеспечение через десять-пятнадцать лет? и будет ли оно вообще? вот, например, автор считает, что оно исчезнет вообще. компьютер преобразиться настолько, что потеряет право называться "компьютеров" в привычном для нас понимании. хотите знать почему? ответ дает эта статья!

  

[ **[[https://www.evilfingers.com/publications/research_RU/soft.future.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/soft.future|DOC**]]**]

=== программирование в машинных кодах или soft-ice как logger ===

существует множество полезных софтин, отслеживающих всякие системные события (например, шпионящих за API-функциями). зачастую их возможности весьма ограничены и поэтому хакеры пишут свои, просиживая за компилятором долгие зимние ночи. хотите узнать более короткий путь?

  

[ **[[https://www.evilfingers.com/publications/research_RU/soft-ice-log.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/soft-ice-log|DOC**]]**]

=== техника промышленного шпионажа ===

промышленный шпионаж существует — это факт. и занимаются им не только (и не столько) красавчики вроде Джеймса Бонда, но и простые хакеры, практически никогда не выходящие из дома и все действия осуществляющие через Сеть. иногда — из любопытства, иногда — из необходимости или желания подзаработать. стать шпионом может каждый, причем совершенно на законных основаниях!

  

[ **[[https://www.evilfingers.com/publications/research_RU/spy-tech.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/spy-tech|DOC**]]**]

=== база данных под прицелом ===

данные это основа всего. это и номера кредитных карт, и личная информация пользователей, и сведениях об угнанных машинах. содержимое чатов и форумов тоже хранится в БД. проникновение в корпоративную (военную, правительственную) базу данных – самое худшее, что только может случиться с компанией. поразительно, но даже критические сервера зачастую оказываются никак не защищены и взламываются даже 12-летными любителями командной строки без особых усилий.

  

[ **[[https://www.evilfingers.com/publications/research_RU/SQL.hack.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/SQL.hack|DOC**]]**]

=== оптимизация наоборот или как затормозить компьютер с помощью SSE ===

многие программы поддерживают режимы оптимизации под специальные ЦП (MMX, MMXext, SSE, SSE2, SSE3, SSE4, 3DNow! 3DNowExt, и т. д.), однако, попытка форсировать компиляцию под SSE4, круче которого ничего нет, часто заканчивается чуть ли не катастрофой — от полного нежелания запускаться до падения производительности в десятки раз. почему же так происходит?!

  

[ **[[https://www.evilfingers.com/publications/research_RU/SSE-pessimize.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/SSE-pessimize|DOC**]]**]

=== звездная сила обращается в пыль ===

на нас надвигается тьма! star-force наступает по всем направлениям и новые игры уже не копираются. защита выглядит неприступной как скала и за ней уже закрепилась слава неломаемой. на самом деле все не так мрачно. кроме столбовой дороги есть и обходные пути, никем не охраняемые. воспользуемся одним из них.

  

[ **[[https://www.evilfingers.com/publications/research_RU/star-force.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/star-force|DOC**]]**]

=== спроси эксперта ох, и тяжела ты, служба системного администратора! ===

На вопросы отвечает эксперт этого номера Харон Яков Юрьевич (Jakov Haron jh@styx.cabel.net). Увидел компьютер в 5 лет (Электроника85), и как-то затянуло и не отпускало почти 20 лет. Первый собственный компьютер был Atari 800. Дальше — больше. До сих пор дома компьютеров больше чем людей. Занимался всем от системного программирования, с разработки математических алгоритмов, до администрирования сетей и проектирования баз данных. Потом понял что IT куда интереснее, когда это хобби и ушёл в коммерцию. Но ценный совет может дать до сих пор ;-)

  

[ **[[https://www.evilfingers.com/publications/research_RU/stat.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/stat|DOC**]]**]

=== тонкая настройка параметров TCP/IP под толстые каналы ===

пропускная способность локальных сетей и Интернет-каналов неуклонно растет, однако, вместе с ней растут и потребности, вызывающие естественное желание выжать из TCP/IP стека максимум возможного, чем мы сейчас, собственно, и займемся, главным образом акцентируя внимания на Windows Server 2003, хотя описанные технология оптимизации справедливы и для рабочих станций, собранных на базе W2K/XP.

  

[ **[[https://www.evilfingers.com/publications/research_RU/TCP-optimize.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/TCP-optimize|DOC**]]**]

=== тестирование программного обеспечения ===

программные ошибки коварны и злы. сколько они загубили хороших проектов! сколько времени было угрохано на поиски плавающих багов, затаившихся в засаде и выскакивающих во время демонстрации продукта заказчику. но программист хитрее и терпеливее. вооруженный современным инструментарием диагностики он врезается в самое гнездилище багов и бьет их наповал.

  

[ **[[https://www.evilfingers.com/publications/research_RU/testing.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/testing|DOC**]]**]

=== ассемблер — это просто [хадкорный ассемблер] ===

эта рубрика открывает двери в удивительный мир, расположенный за фасадом высокоуровневого программирования. где вращаются те шестеренки, чтоприводят в движение все остальное. ассемблер — это разговор с компьютером на естественном для него языке, радость общение с голым железом, высший пилотаж особого полета свободной мысли и безграничное пространство для самовыражения. ассемблер намного проще большинства языков высоко уровня, он значительно проще, чем Си++ и овладеть им можно буквально за несколько месяцев, главное взять правильный старт, уверенно продвигаясь в нужном направлении, а не петляя впотьмах наугад.

  

[ **[[https://www.evilfingers.com/publications/research_RU/tiny_asm.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/tiny_asm|DOC**]]**]

=== эльфы большие и маленькие ===

даже при программировании на чистом ассемблере, elf файлы обычно получаются очень большими, но существует масса способов уменьшить их размер (с потерей совместимости с другими системами или без). давайте напишем обычную ассемблерную программу и, вырезая все лишнее, постепенно будем оптимизировать ее вплоть до полного экстрима.

  

[ **[[https://www.evilfingers.com/publications/research_RU/tiny-elf.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/tiny-elf|DOC**]]**]

=== TOP10 ошибок защитников программ ===

создать качественную защиту от взлома в общем-то несложно, для этого даже не обязательно знать ассемблер и быть с операционной системой на "ты". почему же тогда программы ломаются косяками? во всем виноваты мелкие (и крупные) ошибки разработчиков, которых очень легко избежать, если, конечно, заранее знать где сало, а где капкан.

  

[ **[[https://www.evilfingers.com/publications/research_RU/TOP10pp.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/TOP10pp|DOC**]]**]

=== шесть грехов malware-писателей ===

подавляющее большинство червей/вирусов/шпионов рождаются беспомощными и абсолютно нежизнеспособными. вызывать крупные эпидемии удается далеко не всем. почему? попробуем разобраться! это не руководство по написанию малвари. это руководство по тому, как _не_ надо ее писать. в статье рассматриваются шесть наиболее "излюбленных" огрехов, палящих малварь и приводящих к ее гибели.

  

[ **[[https://www.evilfingers.com/publications/research_RU/TOPxxMalware.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/TOPxxMalware|DOC**]]**]

=== универсальный взлом триальных программ ===

триальные защиты широко распространены в шароварах, в результате чего мы получаем полнофункциональную программу, работающую 30 дней или около того, а потом: деньги на бочку или до свидания. на самом деле, 99% триальных защит ломаются на автомате без напряжения мозговых извилин. ни знания ассемблера, ни навыка работы с отладчиком, ни утомительного поиска торкающего крака/сернума/кейгена _не_ требуется. просто берем и ломаем!!!

  

[ **[[https://www.evilfingers.com/publications/research_RU/trial-uni-hack.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/trial-uni-hack|DOC**]]**]

=== настойка файловой системы на максимальную производительность ===

LINUX (в отличии от Windows) поддерживает целый спектр файловых систем разного калибра и назначения: minix, ext2fs, ext3fs, ReiserFS, XFS, JFS, UFS, FFS… Какую файловую систему выбрать? Как правильно ее настроить? Стандартный выбор, предлагаемый составителями дистрибутива по умолчанию, не всегда оптимален и быстродействие системы можно значительно улучшить, если залезть вовнутрь и слегка ее подкрутить.

  

[ **[[https://www.evilfingers.com/publications/research_RU/tune2fs.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/tune2fs|DOC**]]**]

=== изучение английского с турбо-наддувом ===

как изучить английский за минимальное время и практически без усилий? какие методики существуют и какие программы могут этому поспособствовать? реально ли за пару месяцев подтянуть свой уровень с полного нуля до свободного общения с американосами по мылу, аське и чату? и если это реально (а это реально!), то в каком направлении нужно идти?

  

[ **[[https://www.evilfingers.com/publications/research_RU/turbo-eng.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/turbo-eng|DOC**]]**]

=== взлом телевизоров вблизи и на расстоянии ===

все мы используем пульты дистанционного управления на ИК основе, но далеко не каждый из нас знает какие возможности и опасности они предоставляют. помимо "несанкционированного" переключения каналов у соседа, хакер может проникнуть в инженерное меню, чудовищно исказив геометрию экрана, отключив развертку, или убив телевизор каким-нибудь другим способом.

  

[ **[[https://www.evilfingers.com/publications/research_RU/TV-hack.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/TV-hack|DOC**]]**]

=== UDF – расплата за бездумность ===

Как-то раз, когда записывающие приводы только-только входили в моду, робко осваивая необъятные просторы российского рынка, в одной компьютерной фирме раздался звонок Очень Взбешенного Покупателя: "Мужики! Что за дела?! Какого хрена вы мне подсунули неработающий рекордер!" Продавец: "А какую программу вы используйте для записи?" Покупатель: "Нортон, естественно, и нечего держать меня за дурака!".

  

[ **[[https://www.evilfingers.com/publications/research_RU/udf.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/udf|DOC**]]**]

=== неинициализированные указатели под прицелом осенний сбор дыр в IE открывает новый класс атак ===

сегодня мы поговорим о сравнительно новом и малоизвестном семействе хакерских атак, направленных на неинициализированные указатели, используя в качестве подопытной лабораторной крысы свежие дыры в IE, допускающие удаленных захват управления с передачей управления на shell-код, а так же обсудим перспективы атак на другие приложения.

  

[ **[[https://www.evilfingers.com/publications/research_RU/uninit-pointers.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/uninit-pointers|DOC**]]**]

=== методология защиты в мире UNIX ===

качество защитных механизмов в UNIX все еще остается на уровне слабого подобия левой руки и с Windows ей не тягаться. впрочем, качество хакерского инструментария под UNIX еще хуже, так что одно уровновешивает другое. даже плохенькая защита представляет собой большую проблему и дикую головную боль бессонных ночей. данная статья дает краткое представление о проблеме и рассказывает о наиболее популярных методах противодействия отладчикам и дизассемблерам.

  

[ **[[https://www.evilfingers.com/publications/research_RU/UNIX.binsrc.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/UNIX.binsrc|DOC**]]**]

=== особенности национальной отладки в UNIX ===

первое знакомство в GDB (что-то вроде debug.com для MS-DOS только мощнее) вызывает у поклонников Windows смесь разочарования с отвращением, а увесистая документация вгоняет в глубокое уныние, граничащее с суицидом. отовсюду торчат рычаги управления, но нету газа и руля. не хватает только каменных топоров и звериных шкур. как юниксоиды ухитряются выжить в агрессивной среде этого первобытного мира – загадка.

  

[ **[[https://www.evilfingers.com/publications/research_RU/UNIX.deb.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/UNIX.deb|DOC**]]**]

=== профессии эмуляторов ===

эмулятор компьютера – великая вещь! кем бы вы ни были – продвинутым пользователем, администратором, программистом или даже воинствующим хакером, эмулятор вас выручит и поможет, весь вопрос в том когда и как. вот об этом мы и собираемся рассказать!

  

[ **[[https://www.evilfingers.com/publications/research_RU/UNIX.emu.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/UNIX.emu|DOC**]]**]

=== win32 завоевывает UNIX или портили, портили и спортили ===

последнее время много говорят о переносе UNIX программ на Windows. только так, и никак не наоборот. но ведь существует большое количество Windows-программ, аналога которых на других платформах нет (прежде всего, это ваши собственные программы). стоит ли их переносить на UNIX и если да, то как?

  

[ **[[https://www.evilfingers.com/publications/research_RU/unix.port.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/unix.port|DOC**]]**]

=== вирусы в мире UNIX ===

трудно представить себе более простую штуку, чем компьютерный вирус. тетрис и тот посложнее будет, однако, программирование вирусов вызывает у начинающих большие трудности: как внедрить свой код в файл, какие поля необходимо изменять, а какие лучше не трогать, чем отлаживать вирусы и можно ли использовать языки высокого уровня? тесные рамки журнальной статьи не позволяют рассмотреть все аспекты конструирования вирусов целиком, но по крайней мере общее представление о вопросе могут дать.

  

[ **[[https://www.evilfingers.com/publications/research_RU/unix.virii.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/unix.virii|DOC**]]**]

=== ассемблер в UNIX mini-faq ===

ассемблер в UNIX mini-faq.

  

[ **[[https://www.evilfingers.com/publications/research_RU/unix-asm-mini.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/unix-asm-mini|DOC**]]**]

=== FAQ по асму в никсах от мыщъх'а (фрагмент) ===

FAQ по асму в никсах от мыщъх'а (фрагмент).

  

[ **[[https://www.evilfingers.com/publications/research_RU/unix-asm-mini-A1.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/unix-asm-mini-A1|DOC**]]**]

=== термоядерная отладка в Linux и xBSD обзор отладчиков ядерного уровня ===

отладчиков уровня ядра под никсы — много, хороших из них мало (если такие вообще есть) и нужно быть нереально крутым хакером, чтобы с первого напаса выбрать такой дебагер, которым можно отлаживать, а не обламываться. перепробовав кучу отладчиков, мыщъх решил составить внятный обзор для начинающих, рассказывающий чем один отладчик отличается от другого и какой из них торкает, а какой никуда не канает кроме как в /dev/nul.

  

[ **[[https://www.evilfingers.com/publications/research_RU/unix-kernel-debug.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/unix-kernel-debug|DOC**]]**]

=== реальная философия несуществующего мира ===

Считается, что основной концепцией Дзена является вера (тезис) в то, что окружающий нас мир "в действительности" не существует, а существует лишь сознание мира (или мир, существующий только в сознании). На самом деле, это внешняя сторона Дзен-учения, создающая нездоровый антураж. Он не приближает нас к истине, но помогает разрушить устоявшиеся стереотипы, позволяя начинающему Дзен-буддисту совершить свой первый шаг.

  

[ **[[https://www.evilfingers.com/publications/research_RU/unreal-world.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/unreal-world|DOC**]]**]

=== небезопасная безопасная Java ===

безопасность Java-технологий оказалась решающим аргументом при продвижению в сферу корпоративных enterprise-приложений с единственным конкурентом лице C#. однако, пограничный слой, отделяющий рекламный маркетинг от реальной жизни, оказался довольно тернистым и местами конкретно заболоченным. Java многое обещает, но каждый раз откладывает исполнение своих обещаний на неопределенный срок. давайте рассмотрим модель безопасности Java на макро- и микро-уровнях и проанализируем сильные и слабые стороны этой технологии.

  

[ **[[https://www.evilfingers.com/publications/research_RU/unsafe-java.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/unsafe-java|DOC**]]**]

=== небезопасная безопасная ява ===

небезопасная безопасная ява.

  

[ **[[https://www.evilfingers.com/publications/research_RU/unsafe-java.stuff.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/unsafe-java.stuff|DOC**]]**]

=== борьба с инсайдерами снаружи и изнутри: утечки информации через USB/Ethernet-порты советы по воздвижению защитной системы с нуля /* 1я полоса */ ===

воздвигая все новые и новые системы защиты, многие администраторы даже и не подозревают, что враги находятся не только снаружи, но также и изнутри корпоративной сети. это обычные сотрудники, копирующие конфиденциальные файлы через USB\Ethernet порты и выносящие их за пределы охраняемого периметра. давайте обсудим возможные каналы утечки информации и покажем как защититься от них используя только _штатные_ средства операционной системы семейства Windows NT.

  

[ **[[https://www.evilfingers.com/publications/research_RU/usb-leaks.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/usb-leaks|DOC**]]**]

=== обучение сну, обучение во сне: секреты оптимизации нейросетей ===

треть своей жизни человек проводит во сне, что в среднем за жизнь составляет 26 лет – обидно тратить столько времени, когда вокруг куча всего интересного – непрочитанных книг, неполоманных программ, неизученных иностранных языков… вот было бы здорово освоить методики обучения во сне! на самом деле мозг продолжает работать и во сне, обрабатывая полученные знания и оптимизируя нейросеть! остается разобраться как использовать это дарование природы с максимальной эффективностью!

  

[ **[[https://www.evilfingers.com/publications/research_RU/use-sleep-for-learning.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/use-sleep-for-learning|DOC**]]**]

=== (без)перспективные области применения многопроцессорных машин ===

тактовую частоту невозможно наращивать бесконечно и предел насыщения уже близок. производители процессоров просекли ситуацию и вместо того, чтобы радовать нас новыми мегагерцами увеличивают количество ядер, что равносильно приобретению многопроцессорной машины, в которых, кстати говоря, потребили видят чуть ли не единственный резерв повышения производительности, но увы… очень часто их ожидания не оправдываются — установка новых процессоров не увеличивает быстродействия сервера/рабочей станции и вложенные средства не окупаются. почему? попробуем разобраться!

  

[ **[[https://www.evilfingers.com/publications/research_RU/why-mcpu.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/why-mcpu|DOC**]]**]

=== отладчик windbg как API- и RPC-шпион ===

ранние версии windbg'а от Microsoft не пользовались у хакеров большой популярностью и все дружно налегали на soft-ice, но теперь, когда поддержка последнего прекращена и он обречен на медленное, но неотвратимое умирание, возникает вопрос: как дальше жить и чем ломать? тем временем, windbg сильно повзрослел и хотя это кал, по целому ряду характеристик он обгоняет soft-ice. сейчас мыщъх покажет как использовать windbg в качестве API- и RPC-шпиона.

  

[ **[[https://www.evilfingers.com/publications/research_RU/WinDbg-Rpc.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/WinDbg-Rpc|DOC**]]**]

=== взлом архиватора WinRAR ===

обучаться взлому лучше всего на простых защитах, таких как, например, архиватор WinRAR, который мы сегодня захачим по полной программе, заодно научившись пользоваться hex-редактором, API-шпионом и дизассемблером, а с отладчиком познакомимся в следующий раз.

  

[ **[[https://www.evilfingers.com/publications/research_RU/winrar.crk.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/winrar.crk|DOC**]]**]

=== метафизика wmf файлов ===

перед новым годом обнаружена самая крупная дыра за всю историю существования Windows, точнее даже не дыра, а документированная особенность, позволяющая wmf-файлам содержать не только данных, но и машинный код, поражающий все системы от Windows 3.x до Longhorn и даже… UNIX! по данным McAfee на 6 января 2006 было заражено 6% машин и это только начало! попробуем разобраться как черви внедряются в систему и как от них защищаться.

  

[ **[[https://www.evilfingers.com/publications/research_RU/wmf-exploit.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/wmf-exploit|DOC**]]**]

=== архитектура x86-64 под скальпелем ассемблерщика ===

32-битная эпоха уходит в прошлое, сдаваясь под натиском новых идей и платформ. оба флагмана рынка (Intel и AMD) представили 64-битные архитектуры, открывающие дверь в мир больших скоростей и производительных ЦП. это настоящий прорыв — новые регистры, новые режимы работы… попробуем с ним разобраться? в этой статье мы рассмотрим архитектуру AMD64 (она же x86-64) и покажем как с ней бороться.

  

[ **[[https://www.evilfingers.com/publications/research_RU/x86-64.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/x86-64|DOC**]]**]

=== архитектура x86-64 под скальпелем ассемблерщика [Lite] ===

32-битная эпоха уходит в прошлое, сдаваясь под натиском новых идей и платформ. оба флагмана рынка (Intel и AMD) представили 64-битные архитектуры, открывающие дверь в мир больших скоростей и производительных ЦП. это настоящий прорыв — новые регистры, новые режимы работы… попробуем с ним разобраться? в этой статье мы рассмотрим архитектуру AMD64 (она же x86-64) и покажем как с ней бороться.

  

[ **[[https://www.evilfingers.com/publications/research_RU/x86-64_text.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/x86-64_text|DOC**]]**]

=== оптимизация xBSD под десктоп ===

операционные системы семейства xBSD — это системы для сильных духом мужчин, героически преодолевающих трудности во имя любви, любви к своей единственно правильной оси. новички в суровом мире командной строки обычно не выживают, норовя поставить себе KDУ, а потом удивляются почему все тормозит! оптимизация — тонкое дело! можно даже сказать — восточное! осилим ли мы его?

  

[ **[[https://www.evilfingers.com/publications/research_RU/xBSD-desk-optimize.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/xBSD-desk-optimize|DOC**]]**]

=== xBSD в ракурсе исторического прицела ===

семейство xBSD с огромной скоростью движется по узкой колее своей рыночной ниши. слева — отвесная скала коммерческих UNIX-систем, справа — крутой обрыв в LINUX. чтобы выбрать дистрибутив своей мечты необходимо не только изучить feature-list, но и рассмотреть исторический аспект, после чего станет ясно почему под FreeBSD есть драйвера от NVIDIA, а для остальных xBSD — нет.

  

[ **[[https://www.evilfingers.com/publications/research_RU/xBSD-history.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/xBSD-history|DOC**]]**]

=== старые антиотладочные приемы на новый лад ===

новое, как говориться, это хорошо забытое старое. антиотладочные приемы времен ms-dos и debug.com возвращаются, чтобы снова работать в Windows 2000/XP/2003. статья не только вызовет у вас ритуально-ностольгический интерес, но и послужит практическим пособием по борьбе с хакерами и отладчиками.

  

[ **[[https://www.evilfingers.com/publications/research_RU/antideb-newage.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/antideb-newage|DOC**]]**]

=== старые антиотладочные приемы на новый лад [Lite] ===

новое, как говориться, это хорошо забытое старое. антиотладочные приемы времен ms-dos и debug.com возвращаются, чтобы снова работать в Windows 2000/XP/2003. статья не только вызовет у вас ритуально-ностольгический интерес, но и послужит практическим пособием по борьбе с хакерами и отладчиками.

  

[ **[[https://www.evilfingers.com/publications/research_RU/antideb-newage.lite.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/antideb-newage.lite|DOC**]]**]

=== BIOS-моддинг ===

модификация BIOS'а таит в себе практически неограниченные возможности: экстремальный разгон системы, разблокирование заблокированных возможностей, исправление ошибок разработчиков, "украшательства" под свой вкус — это высший пилотаж хакерства, требующий знания железа и умения держать дизассемблер в руках. это дремучий лес, в котором очень легко заблудится, но я покажу вам кратчайший путь.

  

[ **[[https://www.evilfingers.com/publications/research_RU/BIOS.modding_pro.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/BIOS.modding_pro|DOC**]]**]

=== BIOS-моддинг [Lite] ===

модификация BIOS'а таит в себе практически неограниченные возможности: экстремальный разгон системы, разблокирование заблокированных возможностей, исправление ошибок разработчиков, "украшательства" под свой вкус — это высший пилотаж хакерства, требующий знания железа и умения держать дизассемблер в руках. это дремучий лес, в котором очень легко заблудится, но я покажу вам кратчайший путь.

  

[ **[[https://www.evilfingers.com/publications/research_RU/BIOS.modding.lite.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/BIOS.modding.lite|DOC**]]**]

=== BIOS Setup – удаленный контроль ===

каждый администратор хотя бы раз в жизни сталкивался с необходимостью войти в BIOS Setup и слегка его "подкрутить" или починить "рухнувшую" Windows NT, LINUX/FreeBSD. традиционно эта задача решается при помощи мыши и клавиатуры, но что делать если сервер физически недоступен?

  

[ **[[https://www.evilfingers.com/publications/research_RU/BIOS.remote.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/BIOS.remote|DOC**]]**]

=== BIOS Setup – удаленный контроль [Lite] ===

каждый администратор хотя бы раз в жизни сталкивался с необходимостью войти в BIOS Setup и слегка его "подкрутить" или починить "рухнувшую" Windows NT, LINUX/FreeBSD. традиционно эта задача решается при помощи мыши и клавиатуры, но что делать если сервер физически недоступен?

  

[ **[[https://www.evilfingers.com/publications/research_RU/BIOS.remote.lite.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/BIOS.remote.lite|DOC**]]**]

=== защита от копирования, основанная на физических дефектах ===

Рассмотрим лазерный диск с нанесенным дефектом (см. рис. 1). Какое он оказывает воздействие? Если ширина дефекта составляет менее 0,3 мм, то он автоматически восстанавливается декодером Рида-Соломона нижнего уровня (CIRC-декодером) и привод его просто "не заметит". Существует возможность вернуть позиции сбойных битов (см. команду READ CD), однако, она реализована не на всех приводах и потому на нее нельзя опереться. При увеличении длины дефекта до ~0,8 мм CIRC-декодер уже не справляется с его восстановлением, но в подавляющем большинстве случаев сектор может быть полностью восстановлен декодером верхнего уровня (ECC-декодером), и чтение завершится без ошибок. Дефектны с длинною свыше 1 мм уже не могут быть восстановлены и привод возвращает ошибку.

  

[ **[[https://www.evilfingers.com/publications/research_RU/cd.defects.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/cd.defects|DOC**]]**]

=== копирование без границ или передовые методики защиты CD или CD неподвластный копированию [Censored] ===

копировщики лазерных дисков совершенствуется с каждым днем, но и разработчики защитных механизмов не дремлют, тем не менее, новые защиты тут же ломаются. почему? вашему вниманию предлагается обзор наиболее популярных ошибок и конструктивных просчетов с рекомендациями по их устранению, а так же описывается законченный алгоритм чрезвычайно стойкой защиты, не копируемой никаким копировщиком.

  

[ **[[https://www.evilfingers.com/publications/research_RU/cd.sf.censored.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/cd.sf.censored|DOC**]]**]

=== копирование без границ или передовые методики защиты CD или CD неподвластный копированию [Uncensored] ===

копировщики лазерных дисков совершенствуется с каждым днем, но и разработчики защитных механизмов не дремлют, тем не менее, новые защиты тут же ломаются. почему? вашему вниманию предлагается обзор наиболее популярных ошибок и конструктивных просчетов с рекомендациями по их устранению, а так же описывается законченный алгоритм чрезвычайно стойкой защиты, не копируемой никаким копировщиком.

  

[ **[[https://www.evilfingers.com/publications/research_RU/cd.sf.uncensored.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/cd.sf.uncensored|DOC**]]**]

=== дефекты проектирования Intel Core 2 Duo – аналитический обзор с точки зрения безопасности ===

процессоры Intel Core2Duo (не только они одни!) содержат множество ошибок, приводящих к сбоям программного обеспечения, зависаниям операционной системе и даже возможности удаленного захвата управления компьютером! часть ошибок обходится программным путем, часть — обновлением микрокода ЦП или прошивки BIOS, оставшиеся — неисправимы вообще и требуют смены процессора. насколько реальны эти угрозы? попробуем разобраться!

  

[ **[[https://www.evilfingers.com/publications/research_RU/Core2Duo-bugs.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/Core2Duo-bugs|DOC**]]**]

=== дефекты проектирования Intel Core 2 Duo – аналитический обзор с точки зрения безопасности [Lite] ===

процессоры Intel Core2Duo (не только они одни!) содержат множество ошибок, приводящих к сбоям программного обеспечения, зависаниям операционной системе и даже возможности удаленного захвата управления компьютером! часть ошибок обходится программным путем, часть — обновлением микрокода ЦП или прошивки BIOS, оставшиеся — неисправимы вообще и требуют смены процессора. насколько реальны эти угрозы? попробуем разобраться!

  

[ **[[https://www.evilfingers.com/publications/research_RU/Core2Duo-bugs-lite.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/Core2Duo-bugs-lite|DOC**]]**]

=== вынос инвариантов/Loop-invariant code motion / ===

Loop-invariant code motion The loop-invariant code motion optimization recognizes instructions inside a loop whose results do not change and then moves the instructions outside the loop. This optimization ensures that the invariant code is only executed once.

  

[ **[[https://www.evilfingers.com/publications/research_RU/dddw.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/dddw|DOC**]]**]

=== техника снятия дампа с защищенных приложений ===

в прошлой статье это цикла мы прошли сквозь распаковщик, добравшись до оригинальной точки входа и теперь, чтобы окончательно победить защиту, нам необходимо снять дамп. существует множество утилит, предназначенных для этой цели, но далеко не всегда полученный дамп оказывается работоспособным. прочему? попробуем разобраться!

  

[ **[[https://www.evilfingers.com/publications/research_RU/dump.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/dump|DOC**]]**]

=== техника снятия дампа с защищенных приложений [Lite] ===

в прошлой статье это цикла мы прошли сквозь распаковщик, добравшись до оригинальной точки входа и теперь, чтобы окончательно победить защиту, нам необходимо снять дамп. существует множество утилит, предназначенных для этой цели, но далеко не всегда полученный дамп оказывается работоспособным. прочему? попробуем разобраться!

  

[ **[[https://www.evilfingers.com/publications/research_RU/dump.lite.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/dump.lite|DOC**]]**]

=== аудит и дизассемблирование exploit'ов ===

exploit'ы, демонстрирующие наличие дыры (proof-of-concept), обычно распространяются в исходных текстах, однако, основной функционал заключен в shell-коде, анализ которого представляет весьма нетривиальную задачу, требующую инженерного склада ума, развитой интуиции, обширных знаний и… знания специальных приемов дизассемблирования, о которых и пойдет речь в этой статье.

  

[ **[[https://www.evilfingers.com/publications/research_RU/explot-disasm.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/explot-disasm|DOC**]]**]

=== аудит и дизассемблирование exploit'ов [Lite] ===

exploit'ы, демонстрирующие наличие дыры (proof-of-concept), обычно распространяются в исходных текстах, однако, основной функционал заключен в shell-коде, анализ которого представляет весьма нетривиальную задачу, требующую инженерного склада ума, развитой интуиции, обширных знаний и… знания специальных приемов дизассемблирования, о которых и пойдет речь в этой статье.

  

[ **[[https://www.evilfingers.com/publications/research_RU/explot-disasm.lite.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/explot-disasm.lite|DOC**]]**]

=== генетический распаковщик своими руками ===

первое, что делает исследователь, когда берет в руки программу: смотрит упакована она или нет. И тут же бежит искать подходящий распаковщик, поскольку, большинство программ все-таки упакованы, а готовые распаковщики есть не для всех. Предлагаем вам алгоритм универсального распаковщика, "снимающего" даже сложные полиморфные протекторы.

  

[ **[[https://www.evilfingers.com/publications/research_RU/genetic-samag_2.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/genetic-samag_2|DOC**]]**]

=== ремонт и восстановление жестких дисков ===

в прошлых статьях мы подробно рассмотрели методику восстановления логических разрушений (форматирование, удаление файлов и т. д.) и теперь перейдем к самой сложной и ответственной части — аппаратным отказам жесткого диска и путям их преодоления.

  

[ **[[https://www.evilfingers.com/publications/research_RU/hdd-rep-rec.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/hdd-rep-rec|DOC**]]**]

=== ремонт и восстановление жестких дисков [Lite] ===

в прошлых статьях мы подробно рассмотрели методику восстановления логических разрушений (форматирование, удаление файлов и т. д.) и теперь перейдем к самой сложной и ответственной части — аппаратным отказам жесткого диска и путям их преодоления.

  

[ **[[https://www.evilfingers.com/publications/research_RU/hdd-rep-rec.lite.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/hdd-rep-rec.lite|DOC**]]**]

=== волшебство с паяльником в руках [Lite] ===

эта статья для тех, кто не побоится взять паяльник в руки и пустить канифольный дымок внутрь своего IBM PC, чтобы починить его или немного усовершенствовать!

  

[ **[[https://www.evilfingers.com/publications/research_RU/kpnc_tricks_01.lite.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/kpnc_tricks_01.lite|DOC**]]**]

=== LINUX/BSD как бастион на пути вирусов ===

количество дыр, обнаруженных в Windows уже давно перешагнуло через все мыслимые границы и неуклонно продолжает расти. выходить в Интернет стало небезопасно. дальше так жить нельзя и надо защититься. в статье рассматривается организация защитного бастиона, основанного на LINUX/BSD, и пригодного как для офиса, так и для домашнего использования.

  

[ **[[https://www.evilfingers.com/publications/research_RU/linix-as-fort.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/linix-as-fort|DOC**]]**]

=== техника оптимизации под линуха ===

сегодня мы займемся исследованием двух наиболее популярных Linux-компиляторов: GCC 3.3.4 и Intel C++ 8.0, а конкретно — сравнением мощности их оптимизаторов. для полноты картины в этот список включен Microsoft Visual C++ 6.0 — один из лучших Windows-компиляторов. (альтернативный вариант вступления на усмотрение редакции) что находится под черной крышкой оптимизатора? чем один компилятор отличается от другого? правда ли, что Intel C++ намного круче GCC, а сам GCC бьет любой Windows-компилятор? хотите узнать как помочь оптимизатору сгенерировать намного более эффективный код?

  

[ **[[https://www.evilfingers.com/publications/research_RU/linux.optimization.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/linux.optimization|DOC**]]**]

=== техника оптимизации под LINUX часть II — ветвления ===

сегодня мы продолжим сравнение Linux-компиляторов, начатое в прошлом номере журнала и рассмотрим оптимизацию условных переходов и операторов типа switch. механизмы их трансформации достаточно многочисленны и разнообразны. за последнее время было предложено множество новых идей, воплощенных в компиляторах GCC 3.3.4 и Intel C++ 8.0 (сокращенно icl), однако, древний Microsoft Visual C++ 6.0 (сокращенного msvc) не сдает своих позиций, так что не спешите списывать его в утиль и сдавать на свалку.

  

[ **[[https://www.evilfingers.com/publications/research_RU/linux.optimization.II.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/linux.optimization.II|DOC**]]**]

=== техника оптимизации под LINUX часть II — ветвления [Lite] ===

сегодня мы продолжим сравнение Linux-компиляторов, начатое в прошлом номере журнала и рассмотрим оптимизацию условных переходов и операторов типа switch. механизмы их трансформации достаточно многочисленны и разнообразны. за последнее время было предложено множество новых идей, воплощенных в компиляторах GCC 3.3.4 и Intel C++ 8.0 (сокращенно icl), однако, древний Microsoft Visual C++ 6.0 (сокращенного msvc) не сдает своих позиций, так что не спешите списывать его в утиль и сдавать на свалку.

  

[ **[[https://www.evilfingers.com/publications/research_RU/linux.optimization.II.lite.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/linux.optimization.II.lite|DOC**]]**]

=== файловая система NTFS извне и изнутри ===

в этой статье ### главе мы рассмотрим основные структуры данных файловой системы NTFS, определяющие ее суть – главную файловую запись MFT, файловые записи FILE Record, последовательности обновления (update sequence или fix-ups), атрибуты (так же называемые потоками – streams) и списки отрезков (run-lists). без этих знаний осмысленная работа с редактором диска и ручное/полуавтоматическое восстановление данных просто невозможны!

  

[ **[[https://www.evilfingers.com/publications/research_RU/recover.NTFS.basic.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/recover.NTFS.basic|DOC**]]**]

=== восстановление NTFS – undelete своими руками ===

продолжая говорить о NTFS, сегодня мы рассмотрим технику восстановления удаленных файлов с помощью простейшего дискового редактора (типа Disk Probe) и утилиты chkdsk, а так же дадим несколько советов по поводу создания собственного инструментария, который может быть запрограммирован на любом языке, имеющим доступ к win32 API.

  

[ **[[https://www.evilfingers.com/publications/research_RU/recover.NTFS.undel.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/recover.NTFS.undel|DOC**]]**]

=== восстановление NTFS – undelete своими руками [Lite] ===

продолжая говорить о NTFS, сегодня мы рассмотрим технику восстановления удаленных файлов с помощью простейшего дискового редактора (типа Disk Probe) и утилиты chkdsk, а так же дадим несколько советов по поводу создания собственного инструментария, который может быть запрограммирован на любом языке, имеющим доступ к win32 API.

  

[ **[[https://www.evilfingers.com/publications/research_RU/recover.NTFS.undel.lite.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/recover.NTFS.undel.lite|DOC**]]**]

=== unformat для NTFS ===

случилось самое страшное: вы потеряли весь NTFS-раздел целиком. случайно отформатировали или пережили разрушительный дисковый сбой. где-то там остались миллиарды байт бесценных данных теперь уже недоступных операционной системе. как вернуть информацию к жизни? в этой статье ### главе автор делится советами ручного и автоматического восстановления.

  

[ **[[https://www.evilfingers.com/publications/research_RU/recover.NTFS.unformat.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/recover.NTFS.unformat|DOC**]]**]

=== unformat для NTFS [Lite] ===

случилось самое страшное: вы потеряли весь NTFS-раздел целиком. случайно отформатировали или пережили разрушительный дисковый сбой. где-то там остались миллиарды байт бесценных данных теперь уже недоступных операционной системе. как вернуть информацию к жизни? в этой статье автор делится советами ручного и автоматического восстановления.

  

[ **[[https://www.evilfingers.com/publications/research_RU/recover.NTFS.unformat.lite.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/recover.NTFS.unformat.lite|DOC**]]**]

=== восстановление удаленных файлов под BSD ===

статья описывает структуру файловых систем типа FFS/UFS1/UFS2 и рассказывает о методиках ручного восстановления удаленных файлов. материал ориентирован на квалифицированных пользователей, администраторов и системных программистов, работающих под BSD-подобными системами.

  

[ **[[https://www.evilfingers.com/publications/research_RU/recover.UFS.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/recover.UFS|DOC**]]**]

=== восстановление удаленных файлов под BSD [Lite] ===

статья описывает структуру файловых систем типа FFS/UFS1/UFS2 и рассказывает о методиках ручного восстановления удаленных файлов. материал ориентирован на квалифицированных пользователей, администраторов и системных программистов, работающих под BSD-подобными системами.

  

[ **[[https://www.evilfingers.com/publications/research_RU/recover.UFS.lite.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/recover.UFS.lite|DOC**]]**]

=== работа, деньги, интернет ===

чужой опыт редко бывает полезным, особенно если он касается таких индивидуальных аспектов как выбор операционной системы или… поиск работы. универсальных рецептов нет — люди не взаимозаменяемы! у каждого из нас свои сильные и слабые стороны, свои цели и свои средства их достижения. описывая сложную систему взаимоотношений нанимателей с работодателями, автор ни за что не агитирует и ни к чему не призывает. просто… показывает один из многих путей выживания в этом мире.

  

[ **[[https://www.evilfingers.com/publications/research_RU/remote-job.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/remote-job|DOC**]]**]

=== переполняющиеся буфера — активные средства защиты ===

на рынке имеется множество средств (как коммерческих, так и бесплатных), обещающих решить проблему переполняющихся буферов раз и навсегда, но хакеры ломают широко разрекламированные защитные комплексы один за другим. почему? давайте заглянем под капот Stack-Guard, Stack-Shield, Pro-Police и Microsoft Visual Studio .NET, сравнив заявленные возможности с реальными.

  

[ **[[https://www.evilfingers.com/publications/research_RU/stack-guards.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/stack-guards|DOC**]]**]

=== переполнение буфера — активные средства защиты [Lite 1] ===

на рынке имеется множество средств (как коммерческих, так и бесплатных), обещающих решить проблему переполняющихся буферов раз и навсегда, но хакеры ломают широко разрекламированные защитные комплексы один за другим. почему? давайте заглянем под капот Stack-Guard, Stack-Shield, Pro-Police и Microsoft Visual Studio .NET, сравнив заявленные возможности с реальными.

  

[ **[[https://www.evilfingers.com/publications/research_RU/stack-guards_1.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/stack-guards_1|DOC**]]**]

=== переполнение буфера — активные средства защиты [Lite 2] ===

на рынке имеется множество средств (как коммерческих, так и бесплатных), обещающих решить проблему переполняющихся буферов раз и навсегда, но хакеры ломают широко разрекламированные защитные комплексы один за другим. почему? давайте заглянем под капот Stack-Guard, Stack-Shield, Pro-Police и Microsoft Visual Studio .NET, сравнив заявленные возможности с реальными.

  

[ **[[https://www.evilfingers.com/publications/research_RU/stack-guards_2.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/stack-guards_2|DOC**]]**]

=== валим отсюда?! (бессистемные заметки о поиске работы за рубежом) ===

многие люди (особенно IT-специалисты) хотят свалить отсюда, но не знают как найти хорошую работу за рубежом. автор, имея более чем десятилетний опыт удаленной работы, наконец-то нашел компанию своей мечты, стоящую того, чтобы оторвать свой хвост от кресла и сменить северный кавказ на сан-франциско. хочешь и ты найти работу своей мечты? спроси меня как! [хотите и вы найти работу своей мечты? спросите меня как!]

  

[ **[[https://www.evilfingers.com/publications/research_RU/usa.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/usa|DOC**]]**]

=== борьба с утечками информации через USB/Ethernet-порты ===

воздвигая все новые и новые системы защиты, многие администраторы даже и не подозревают, что враги находятся не только снаружи, но и еще и изнутри корпоративной сети. это обычные сотрудники, копирующие конфиденциальные файлы через USB\Ethernet порты и выносящие их за пределы охраняемого периметра. давайте обсудим возможные каналы утечки информации и покажем как защититься от них используя только _штатные_ средства операционной системы семейства Windows NT.

  

[ **[[https://www.evilfingers.com/publications/research_RU/usb-leaks.pdf|PDF**]]**] [ **[[https://www.evilfingers.com/publications/research_RU/usb-leaks|DOC**]]**]
